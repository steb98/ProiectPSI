

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Nov 19 21:52:13 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F6585
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	text40,global,reloc=2,class=CODE,delta=1
    51                           	psect	text41,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58   000000                     
    59                           ; Version 2.40
    60                           ; Generated 04/07/2022 GMT
    61                           ; 
    62                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution. Publication is not required when
    76                           ;        this file is used in an embedded application.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F6585 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94   000000                     
    95 ;; Function _LIGHTS_DemoState1 is unused but had its address taken
    96   000000                     
    97 ;; Function _LIGHTS_DemoState2 is unused but had its address taken
    98   000000                     
    99 ;; Function _LIGHTS_DemoEventPoll is unused but had its address taken
   100   000000                     
   101                           	psect	idataCOMRAM
   102   000CCC                     __pidataCOMRAM:
   103                           	callstack 0
   104                           
   105                           ;initializer for SGL_BlinkSwitchOnState@firstEntry
   106   000CCC  01                 	db	1
   107                           
   108                           ;initializer for SGL_BlinkPasiveState@firstEntry
   109   000CCD  01                 	db	1
   110   000000                     _PR2	set	4043
   111   000000                     _TMR2	set	4044
   112   000000                     _T2CON	set	4042
   113   000000                     _PORTC	set	3970
   114   000000                     _PORTD	set	3971
   115   000000                     _TRISAbits	set	3986
   116   000000                     _PIE1bits	set	3997
   117   000000                     _PIR1bits	set	3998
   118   000000                     _ADCON2bits	set	4032
   119   000000                     _ADCON1bits	set	4033
   120   000000                     _ADCON0bits	set	4034
   121   000000                     _ADRESL	set	4035
   122   000000                     _ADRESH	set	4036
   123   000000                     _T2CONbits	set	4042
   124   000000                     _INTCONbits	set	4082
   125   000000                     _IPR1bits	set	3999
   126   000000                     _TRISCbits	set	3988
   127   000000                     _TRISEbits	set	3990
   128   000000                     _TRISD	set	3989
   129   000000                     _PORTE	set	3972
   130                           
   131                           ; #config settings
   132                           
   133                           	psect	cinit
   134   000B0C                     __pcinit:
   135                           	callstack 0
   136   000B0C                     start_initialization:
   137                           	callstack 0
   138   000B0C                     __initialization:
   139                           	callstack 0
   140                           
   141                           ; Initialize objects allocated to COMRAM (2 bytes)
   142                           ; load TBLPTR registers with __pidataCOMRAM
   143   000B0C  0ECC               	movlw	low __pidataCOMRAM
   144   000B0E  6EF6               	movwf	tblptrl,c
   145   000B10  0E0C               	movlw	high __pidataCOMRAM
   146   000B12  6EF7               	movwf	tblptrh,c
   147   000B14  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   148   000B16  6EF8               	movwf	tblptru,c
   149   000B18  0009               	tblrd		*+	;fetch initializer
   150   000B1A  CFF5 F04D          	movff	tablat,__pdataCOMRAM
   151   000B1E  0009               	tblrd		*+	;fetch initializer
   152   000B20  CFF5 F04E          	movff	tablat,__pdataCOMRAM+1
   153                           
   154                           ; Clear objects allocated to COMRAM (45 bytes)
   155   000B24  EE00  F001         	lfsr	0,__pbssCOMRAM
   156   000B28  0E2D               	movlw	45
   157   000B2A                     clear_0:
   158   000B2A  6AEE               	clrf	postinc0,c
   159   000B2C  06E8               	decf	wreg,f,c
   160   000B2E  E1FD               	bnz	clear_0
   161   000B30                     end_of_initialization:
   162                           	callstack 0
   163   000B30                     __end_of__initialization:
   164                           	callstack 0
   165   000B30  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   166   000B32  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   167   000B34  0E00               	movlw	low (__Lmediumconst shr (0+16))
   168   000B36  6EF8               	movwf	tblptru,c
   169   000B38  0100               	movlb	0
   170   000B3A  EF4D  F006         	goto	_main	;jump to C main() function
   171                           
   172                           	psect	bssCOMRAM
   173   000001                     __pbssCOMRAM:
   174                           	callstack 0
   175   000001                     _headLightSM:
   176                           	callstack 0
   177   000001                     	ds	9
   178   00000A                     _blinkerSM:
   179                           	callstack 0
   180   00000A                     	ds	9
   181   000013                     _demoSM:
   182                           	callstack 0
   183   000013                     	ds	8
   184   00001B                     _au16AdcReadValue:
   185                           	callstack 0
   186   00001B                     	ds	4
   187   00001F                     SGL_BlinkSwitchOnState@counter:
   188                           	callstack 0
   189   00001F                     	ds	2
   190   000021                     SGL_BlinkPasiveState@counter:
   191                           	callstack 0
   192   000021                     	ds	2
   193   000023                     _sched_bTicked:
   194                           	callstack 0
   195   000023                     	ds	2
   196   000025                     _sched_gTick1s:
   197                           	callstack 0
   198   000025                     	ds	2
   199   000027                     SGL_isNight@prevState:
   200                           	callstack 0
   201   000027                     	ds	1
   202   000028                     LIGHTS_BrakeRun@counter:
   203                           	callstack 0
   204   000028                     	ds	1
   205   000029                     SGL_BlinkSwitchOnState@side:
   206                           	callstack 0
   207   000029                     	ds	1
   208   00002A                     _sched_gTick100ms:
   209                           	callstack 0
   210   00002A                     	ds	1
   211   00002B                     _sched_gTick10ms:
   212                           	callstack 0
   213   00002B                     	ds	1
   214   00002C                     SGL_BlinkSwitchOnState@toggleLights:
   215                           	callstack 0
   216   00002C                     	ds	1
   217   00002D                     SGL_BlinkPasiveState@toggleLights:
   218                           	callstack 0
   219   00002D                     	ds	1
   220                           
   221                           	psect	dataCOMRAM
   222   00004D                     __pdataCOMRAM:
   223                           	callstack 0
   224   00004D                     SGL_BlinkSwitchOnState@firstEntry:
   225                           	callstack 0
   226   00004D                     	ds	1
   227   00004E                     SGL_BlinkPasiveState@firstEntry:
   228                           	callstack 0
   229   00004E                     	ds	1
   230                           
   231                           	psect	cstackCOMRAM
   232   00002E                     __pcstackCOMRAM:
   233                           	callstack 0
   234   00002E                     ??_ADC_vConversionCompleted:
   235   00002E                     
   236                           ; 1 bytes @ 0x0
   237   00002E                     	ds	3
   238   000031                     ??_INT_vInterruptHandler:
   239                           
   240                           ; 1 bytes @ 0x3
   241   000031                     	ds	4
   242   000035                     ?_ADC_u16ReadAdcValue:
   243                           	callstack 0
   244   000035                     ?_PCS_T16GetInputPortC:
   245                           	callstack 0
   246   000035                     ?___ftpack:
   247                           	callstack 0
   248   000035                     PCS_vSetOutputPortD@u8Value:
   249                           	callstack 0
   250   000035                     PCS_vSetOutputPortE@u8Value:
   251                           	callstack 0
   252   000035                     ___ftpack@arg:
   253                           	callstack 0
   254                           
   255                           ; 3 bytes @ 0x7
   256   000035                     	ds	1
   257   000036                     ??_PCS_vSetOutputPortD:
   258   000036                     ??_PCS_vSetOutputPortE:
   259                           
   260                           ; 1 bytes @ 0x8
   261   000036                     	ds	1
   262   000037                     ??_PCS_T16GetInputPortC:
   263   000037                     _ADC_u16ReadAdcValue$374:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0x9
   267   000037                     	ds	1
   268   000038                     ___ftpack@exp:
   269                           	callstack 0
   270   000038                     _PCS_vSetOutputPortD$706:
   271                           	callstack 0
   272   000038                     _PCS_vSetOutputPortE$712:
   273                           	callstack 0
   274                           
   275                           ; 2 bytes @ 0xA
   276   000038                     	ds	1
   277   000039                     ADC_u16ReadAdcValue@U8ChannelValue:
   278                           	callstack 0
   279   000039                     ___ftpack@sign:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0xB
   283   000039                     	ds	1
   284   00003A                     ??___ftpack:
   285   00003A                     ADC_u16ReadAdcValue@U8Channel:
   286                           	callstack 0
   287   00003A                     PCS_vSetOutputPortD@u8BitValue:
   288                           	callstack 0
   289   00003A                     PCS_vSetOutputPortE@u8BitValue:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0xC
   293   00003A                     	ds	1
   294   00003B                     PCS_vSetOutputPortD@u8BitNumber:
   295                           	callstack 0
   296   00003B                     PCS_vSetOutputPortE@u8BitNumber:
   297                           	callstack 0
   298   00003B                     _PCS_T16GetInputPortC$716:
   299                           	callstack 0
   300                           
   301                           ; 2 bytes @ 0xD
   302   00003B                     	ds	1
   303   00003C                     PCS_vSetOutputPortD@u8BitNumberValue:
   304                           	callstack 0
   305   00003C                     PCS_vSetOutputPortE@u8BitNumberValue:
   306                           	callstack 0
   307                           
   308                           ; 1 bytes @ 0xE
   309   00003C                     	ds	1
   310   00003D                     ?___lwtoft:
   311                           	callstack 0
   312   00003D                     PCS_T16GetInputPortC@u8BitNumber:
   313                           	callstack 0
   314   00003D                     ___lwtoft@c:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0xF
   318   00003D                     	ds	1
   319   00003E                     PCS_T16GetInputPortC@u8BitNumberValue:
   320                           	callstack 0
   321                           
   322                           ; 1 bytes @ 0x10
   323   00003E                     	ds	1
   324   00003F                     ?_IOC_T16GetInputPort:
   325                           	callstack 0
   326   00003F                     IOC_T16GetInputPort@u16ChannelSelect:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x11
   330   00003F                     	ds	1
   331   000040                     ___ftge@ff1:
   332                           	callstack 0
   333                           
   334                           ; 3 bytes @ 0x12
   335   000040                     	ds	1
   336   000041                     IOC_T16GetInputPort@pinValue:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x13
   340   000041                     	ds	2
   341   000043                     IOC_T16GetInputPort@u16ChannelMask:
   342                           	callstack 0
   343   000043                     ___ftge@ff2:
   344                           	callstack 0
   345                           
   346                           ; 3 bytes @ 0x15
   347   000043                     	ds	2
   348   000045                     IOC_vSetOutputPort@u16ChannelSelect:
   349                           	callstack 0
   350                           
   351                           ; 2 bytes @ 0x17
   352   000045                     	ds	1
   353   000046                     ??___ftge:
   354                           
   355                           ; 1 bytes @ 0x18
   356   000046                     	ds	1
   357   000047                     IOC_vSetOutputPort@u8Value:
   358                           	callstack 0
   359                           
   360                           ; 1 bytes @ 0x19
   361   000047                     	ds	1
   362   000048                     IOC_vSetOutputPort@u16ChannelMask:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x1A
   366   000048                     	ds	1
   367   000049                     SGL_isNight@currentLightLevel:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x1B
   371   000049                     	ds	1
   372   00004A                     SGL_setAllHazardLights@value:
   373                           	callstack 0
   374   00004A                     SGL_setSideHazardLights@side:
   375                           	callstack 0
   376   00004A                     SGL_toggleAllHazardLights@toggle:
   377                           	callstack 0
   378   00004A                     SGL_toggleSideHazardLights@toggle:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x1C
   382   00004A                     	ds	1
   383   00004B                     SGL_setSideHazardLights@value:
   384                           	callstack 0
   385                           
   386                           ; 1 bytes @ 0x1D
   387   00004B                     	ds	1
   388   00004C                     SGL_toggleSideHazardLights@side:
   389                           	callstack 0
   390                           
   391                           ; 1 bytes @ 0x1E
   392   00004C                     	ds	1
   393   00004D                     
   394                           ; 1 bytes @ 0x1F
   395 ;;
   396 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   397 ;;
   398 ;; *************** function _main *****************
   399 ;; Defined at:
   400 ;;		line 11 in file "main.c"
   401 ;; Parameters:    Size  Location     Type
   402 ;;		None
   403 ;; Auto vars:     Size  Location     Type
   404 ;;		None
   405 ;; Return value:  Size  Location     Type
   406 ;;                  1    wreg      void 
   407 ;; Registers used:
   408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
   409 ;; Tracked objects:
   410 ;;		On entry : 0/0
   411 ;;		On exit  : 0/0
   412 ;;		Unchanged: 0/0
   413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   418 ;;Total ram usage:        0 bytes
   419 ;; Hardware stack levels required when called: 9
   420 ;; This function calls:
   421 ;;		_SCHED_vInitSystem
   422 ;;		_SCHED_vStartScheduler
   423 ;; This function is called by:
   424 ;;		Startup code after reset
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           	psect	text0
   429   000C9A                     __ptext0:
   430                           	callstack 0
   431   000C9A                     _main:
   432                           	callstack 0
   433   000C9A  FFFF               	dw	65535	; assembler added errata NOP
   434                           
   435                           ;main.c: 13: SCHED_vInitSystem();
   436                           
   437                           ;incstack = 0
   438   000C9C  EC24  F006         	call	_SCHED_vInitSystem	;wreg free
   439                           
   440                           ;main.c: 14: SCHED_vStartScheduler();
   441   000CA0  EC5C  F003         	call	_SCHED_vStartScheduler	;wreg free
   442   000CA4  EF26  F000         	goto	start
   443   000CA8                     __end_of_main:
   444                           	callstack 0
   445                           
   446 ;; *************** function _SCHED_vStartScheduler *****************
   447 ;; Defined at:
   448 ;;		line 29 in file "sched.c"
   449 ;; Parameters:    Size  Location     Type
   450 ;;		None
   451 ;; Auto vars:     Size  Location     Type
   452 ;;		None
   453 ;; Return value:  Size  Location     Type
   454 ;;                  1    wreg      void 
   455 ;; Registers used:
   456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
   457 ;; Tracked objects:
   458 ;;		On entry : 0/0
   459 ;;		On exit  : 0/0
   460 ;;		Unchanged: 0/0
   461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   466 ;;Total ram usage:        0 bytes
   467 ;; Hardware stack levels used: 1
   468 ;; Hardware stack levels required when called: 8
   469 ;; This function calls:
   470 ;;		_TASK_vTask100ms
   471 ;;		_TASK_vTask10ms
   472 ;;		_TASK_vTask1ms
   473 ;;		_TASK_vTask1s
   474 ;;		_TASK_vTaskAppInit
   475 ;; This function is called by:
   476 ;;		_main
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480                           	psect	text1
   481   0006B8                     __ptext1:
   482                           	callstack 0
   483   0006B8                     _SCHED_vStartScheduler:
   484                           	callstack 0
   485   0006B8  FFFF               	dw	65535	; assembler added errata NOP
   486                           
   487                           ;sched.c: 31: sched_gTick10ms = 0;
   488                           
   489                           ;incstack = 0
   490   0006BA  0E00               	movlw	0
   491   0006BC  6E2B               	movwf	_sched_gTick10ms^0,c
   492                           
   493                           ;sched.c: 32: sched_gTick100ms = 0;
   494   0006BE  0E00               	movlw	0
   495   0006C0  6E2A               	movwf	_sched_gTick100ms^0,c
   496                           
   497                           ;sched.c: 33: sched_gTick1s = 0;
   498   0006C2  0E00               	movlw	0
   499   0006C4  6E26               	movwf	(_sched_gTick1s+1)^0,c
   500   0006C6  0E00               	movlw	0
   501   0006C8  6E25               	movwf	_sched_gTick1s^0,c
   502                           
   503                           ;sched.c: 34: sched_bTicked = 0;;
   504   0006CA  0E00               	movlw	0
   505   0006CC  6E24               	movwf	(_sched_bTicked+1)^0,c
   506   0006CE  0E00               	movlw	0
   507   0006D0  6E23               	movwf	_sched_bTicked^0,c
   508                           
   509                           ;sched.c: 36: TASK_vTaskAppInit();
   510   0006D2  EC44  F006         	call	_TASK_vTaskAppInit	;wreg free
   511   0006D6                     l2066:
   512   0006D6  FFFF               	dw	65535	; assembler added errata NOP
   513                           
   514                           ;sched.c: 39: {;sched.c: 40: if(sched_bTicked)
   515   0006D8  5023               	movf	_sched_bTicked^0,w,c
   516   0006DA  1024               	iorwf	(_sched_bTicked+1)^0,w,c
   517   0006DC  B4D8               	btfsc	status,2,c
   518   0006DE  D7FB               	goto	l2066
   519                           
   520                           ;sched.c: 41: {;sched.c: 42: sched_bTicked = 0;;
   521   0006E0  0E00               	movlw	0
   522   0006E2  6E24               	movwf	(_sched_bTicked+1)^0,c
   523   0006E4  0E00               	movlw	0
   524   0006E6  6E23               	movwf	_sched_bTicked^0,c
   525                           
   526                           ;sched.c: 43: TASK_vTask1ms();
   527   0006E8  EC54  F006         	call	_TASK_vTask1ms	;wreg free
   528                           
   529                           ;sched.c: 45: if(sched_gTick10ms == 10)
   530   0006EC  0E0A               	movlw	10
   531   0006EE  182B               	xorwf	_sched_gTick10ms^0,w,c
   532   0006F0  A4D8               	btfss	status,2,c
   533   0006F2  D004               	goto	l2078
   534                           
   535                           ;sched.c: 46: {;sched.c: 47: sched_gTick10ms = 0;
   536   0006F4  0E00               	movlw	0
   537   0006F6  6E2B               	movwf	_sched_gTick10ms^0,c
   538                           
   539                           ;sched.c: 48: TASK_vTask10ms();
   540   0006F8  EC5B  F006         	call	_TASK_vTask10ms	;wreg free
   541   0006FC                     l2078:
   542   0006FC  FFFF               	dw	65535	; assembler added errata NOP
   543                           
   544                           ;sched.c: 49: };sched.c: 50: if(sched_gTick100ms == 100)
   545   0006FE  0E64               	movlw	100
   546   000700  182A               	xorwf	_sched_gTick100ms^0,w,c
   547   000702  A4D8               	btfss	status,2,c
   548   000704  D004               	goto	l2084
   549                           
   550                           ;sched.c: 51: {;sched.c: 52: sched_gTick100ms = 0;
   551   000706  0E00               	movlw	0
   552   000708  6E2A               	movwf	_sched_gTick100ms^0,c
   553                           
   554                           ;sched.c: 53: TASK_vTask100ms();
   555   00070A  EC63  F006         	call	_TASK_vTask100ms	;wreg free
   556   00070E                     l2084:
   557   00070E  FFFF               	dw	65535	; assembler added errata NOP
   558                           
   559                           ;sched.c: 54: };sched.c: 55: if(sched_gTick1s == 1000)
   560   000710  0EE8               	movlw	232
   561   000712  1825               	xorwf	_sched_gTick1s^0,w,c
   562   000714  E1E0               	bnz	l2066
   563   000716  0E03               	movlw	3
   564   000718  1826               	xorwf	(_sched_gTick1s+1)^0,w,c
   565   00071A  A4D8               	btfss	status,2,c
   566   00071C  D7DC               	goto	l2066
   567                           
   568                           ;sched.c: 56: {;sched.c: 57: sched_gTick1s = 0;
   569   00071E  0E00               	movlw	0
   570   000720  6E26               	movwf	(_sched_gTick1s+1)^0,c
   571   000722  0E00               	movlw	0
   572   000724  6E25               	movwf	_sched_gTick1s^0,c
   573                           
   574                           ;sched.c: 58: TASK_vTask1s();
   575   000726  EC60  F006         	call	_TASK_vTask1s	;wreg free
   576   00072A  D7D5               	goto	l2066
   577   00072C  FFFF               	dw	65535	; errata NOP
   578   00072E                     __end_of_SCHED_vStartScheduler:
   579                           	callstack 0
   580                           
   581 ;; *************** function _TASK_vTaskAppInit *****************
   582 ;; Defined at:
   583 ;;		line 6 in file "tasks.c"
   584 ;; Parameters:    Size  Location     Type
   585 ;;		None
   586 ;; Auto vars:     Size  Location     Type
   587 ;;		None
   588 ;; Return value:  Size  Location     Type
   589 ;;                  1    wreg      void 
   590 ;; Registers used:
   591 ;;		wreg, status,2, status,0, cstack
   592 ;; Tracked objects:
   593 ;;		On entry : 0/0
   594 ;;		On exit  : 0/0
   595 ;;		Unchanged: 0/0
   596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   601 ;;Total ram usage:        0 bytes
   602 ;; Hardware stack levels used: 1
   603 ;; Hardware stack levels required when called: 5
   604 ;; This function calls:
   605 ;;		_LIGHTS_BrakeInit
   606 ;;		_LIGHTS_HeadLampInit
   607 ;;		_SGL_BlinkersInit
   608 ;; This function is called by:
   609 ;;		_SCHED_vStartScheduler
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           	psect	text2
   614   000C88                     __ptext2:
   615                           	callstack 0
   616   000C88                     _TASK_vTaskAppInit:
   617                           	callstack 0
   618   000C88  FFFF               	dw	65535	; assembler added errata NOP
   619                           
   620                           ;tasks.c: 8: SGL_BlinkersInit();
   621                           
   622                           ;incstack = 0
   623   000C8A  ECB8  F005         	call	_SGL_BlinkersInit	;wreg free
   624                           
   625                           ;tasks.c: 9: LIGHTS_BrakeInit();
   626   000C8E  EC19  F006         	call	_LIGHTS_BrakeInit	;wreg free
   627                           
   628                           ;tasks.c: 10: LIGHTS_HeadLampInit();
   629   000C92  ECCD  F005         	call	_LIGHTS_HeadLampInit	;wreg free
   630   000C96  0012               	return		;funcret
   631   000C98  FFFF               	dw	65535	; errata NOP
   632   000C9A                     __end_of_TASK_vTaskAppInit:
   633                           	callstack 0
   634                           
   635 ;; *************** function _SGL_BlinkersInit *****************
   636 ;; Defined at:
   637 ;;		line 198 in file "sgl.c"
   638 ;; Parameters:    Size  Location     Type
   639 ;;		None
   640 ;; Auto vars:     Size  Location     Type
   641 ;;		None
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		wreg, status,2, status,0
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   655 ;;Total ram usage:        0 bytes
   656 ;; Hardware stack levels used: 1
   657 ;; Hardware stack levels required when called: 2
   658 ;; This function calls:
   659 ;;		Nothing
   660 ;; This function is called by:
   661 ;;		_TASK_vTaskAppInit
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665                           	psect	text3
   666   000B70                     __ptext3:
   667                           	callstack 0
   668   000B70                     _SGL_BlinkersInit:
   669                           	callstack 0
   670   000B70  FFFF               	dw	65535	; assembler added errata NOP
   671                           
   672                           ;sgl.c: 200: blinkerSM._currentState = SGL_BlinkPasiveState;
   673                           
   674                           ;incstack = 0
   675   000B72  0EDE               	movlw	low _SGL_BlinkPasiveState
   676   000B74  6E0A               	movwf	_blinkerSM^0,c
   677   000B76  0E01               	movlw	high _SGL_BlinkPasiveState
   678   000B78  6E0B               	movwf	(_blinkerSM+1)^0,c
   679                           
   680                           ;sgl.c: 201: blinkerSM._pollEvents = SGL_BlinkEventPoll;
   681   000B7A  0EA2               	movlw	low _SGL_BlinkEventPoll
   682   000B7C  6E0C               	movwf	(_blinkerSM+2)^0,c
   683   000B7E  0E0A               	movlw	high _SGL_BlinkEventPoll
   684   000B80  6E0D               	movwf	(_blinkerSM+3)^0,c
   685                           
   686                           ;sgl.c: 202: blinkerSM.avarie = 0;
   687   000B82  0E00               	movlw	0
   688   000B84  6E10               	movwf	(_blinkerSM+6)^0,c
   689                           
   690                           ;sgl.c: 203: blinkerSM.firstEntry = 1;
   691   000B86  0E00               	movlw	0
   692   000B88  6E0F               	movwf	(_blinkerSM+5)^0,c
   693   000B8A  0E01               	movlw	1
   694   000B8C  6E0E               	movwf	(_blinkerSM+4)^0,c
   695                           
   696                           ;sgl.c: 204: blinkerSM.leftSwitch = 0;
   697   000B8E  0E00               	movlw	0
   698   000B90  6E11               	movwf	(_blinkerSM+7)^0,c
   699                           
   700                           ;sgl.c: 205: blinkerSM.rightSwitch = 0;
   701   000B92  0E00               	movlw	0
   702   000B94  6E12               	movwf	(_blinkerSM+8)^0,c
   703   000B96  0012               	return		;funcret
   704   000B98  FFFF               	dw	65535	; errata NOP
   705   000B9A                     __end_of_SGL_BlinkersInit:
   706                           	callstack 0
   707                           
   708 ;; *************** function _LIGHTS_HeadLampInit *****************
   709 ;; Defined at:
   710 ;;		line 110 in file "lights.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;		None
   713 ;; Auto vars:     Size  Location     Type
   714 ;;		None
   715 ;; Return value:  Size  Location     Type
   716 ;;                  1    wreg      void 
   717 ;; Registers used:
   718 ;;		wreg, status,2, status,0
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   728 ;;Total ram usage:        0 bytes
   729 ;; Hardware stack levels used: 1
   730 ;; Hardware stack levels required when called: 2
   731 ;; This function calls:
   732 ;;		Nothing
   733 ;; This function is called by:
   734 ;;		_TASK_vTaskAppInit
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text4
   739   000B9A                     __ptext4:
   740                           	callstack 0
   741   000B9A                     _LIGHTS_HeadLampInit:
   742                           	callstack 0
   743   000B9A  FFFF               	dw	65535	; assembler added errata NOP
   744                           
   745                           ;lights.c: 112: headLightSM._currentState = SGL_HeadLightPasiveState;
   746                           
   747                           ;incstack = 0
   748   000B9C  0E20               	movlw	low _SGL_HeadLightPasiveState
   749   000B9E  6E01               	movwf	_headLightSM^0,c
   750   000BA0  0E03               	movlw	high _SGL_HeadLightPasiveState
   751   000BA2  6E02               	movwf	(_headLightSM+1)^0,c
   752                           
   753                           ;lights.c: 113: headLightSM._pollEvents = SGL_HeadLightEventPoll;
   754   000BA4  0EC4               	movlw	low _SGL_HeadLightEventPoll
   755   000BA6  6E03               	movwf	(_headLightSM+2)^0,c
   756   000BA8  0E0B               	movlw	high _SGL_HeadLightEventPoll
   757   000BAA  6E04               	movwf	(_headLightSM+3)^0,c
   758                           
   759                           ;lights.c: 114: headLightSM.firstEntry = 1;
   760   000BAC  0E00               	movlw	0
   761   000BAE  6E06               	movwf	(_headLightSM+5)^0,c
   762   000BB0  0E01               	movlw	1
   763   000BB2  6E05               	movwf	(_headLightSM+4)^0,c
   764                           
   765                           ;lights.c: 115: headLightSM.faruri = 0;
   766   000BB4  0E00               	movlw	0
   767   000BB6  6E07               	movwf	(_headLightSM+6)^0,c
   768                           
   769                           ;lights.c: 116: headLightSM.lightLevel = 0;
   770   000BB8  0E00               	movlw	0
   771   000BBA  6E09               	movwf	(_headLightSM+8)^0,c
   772   000BBC  0E00               	movlw	0
   773   000BBE  6E08               	movwf	(_headLightSM+7)^0,c
   774   000BC0  0012               	return		;funcret
   775   000BC2  FFFF               	dw	65535	; errata NOP
   776   000BC4                     __end_of_LIGHTS_HeadLampInit:
   777                           	callstack 0
   778                           
   779 ;; *************** function _LIGHTS_BrakeInit *****************
   780 ;; Defined at:
   781 ;;		line 5 in file "lights.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;		None
   784 ;; Auto vars:     Size  Location     Type
   785 ;;		None
   786 ;; Return value:  Size  Location     Type
   787 ;;                  1    wreg      void 
   788 ;; Registers used:
   789 ;;		wreg, status,2, status,0, cstack
   790 ;; Tracked objects:
   791 ;;		On entry : 0/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   799 ;;Total ram usage:        0 bytes
   800 ;; Hardware stack levels used: 1
   801 ;; Hardware stack levels required when called: 4
   802 ;; This function calls:
   803 ;;		_IOC_vSetOutputPort
   804 ;; This function is called by:
   805 ;;		_TASK_vTaskAppInit
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           	psect	text5
   810   000C32                     __ptext5:
   811                           	callstack 0
   812   000C32                     _LIGHTS_BrakeInit:
   813                           	callstack 0
   814   000C32  FFFF               	dw	65535	; assembler added errata NOP
   815                           
   816                           ;lights.c: 7: IOC_vSetOutputPort(IOC_LSF, 0);
   817                           
   818                           ;incstack = 0
   819   000C34  0E01               	movlw	1
   820   000C36  6E46               	movwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,c
   821   000C38  0E05               	movlw	5
   822   000C3A  6E45               	movwf	IOC_vSetOutputPort@u16ChannelSelect^0,c
   823   000C3C  0E00               	movlw	0
   824   000C3E  6E47               	movwf	IOC_vSetOutputPort@u8Value^0,c
   825   000C40  EC32  F005         	call	_IOC_vSetOutputPort	;wreg free
   826   000C44  0012               	return		;funcret
   827   000C46  FFFF               	dw	65535	; errata NOP
   828   000C48                     __end_of_LIGHTS_BrakeInit:
   829                           	callstack 0
   830                           
   831 ;; *************** function _TASK_vTask1s *****************
   832 ;; Defined at:
   833 ;;		line 31 in file "tasks.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;		None
   836 ;; Auto vars:     Size  Location     Type
   837 ;;		None
   838 ;; Return value:  Size  Location     Type
   839 ;;                  1    wreg      void 
   840 ;; Registers used:
   841 ;;		None
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   851 ;;Total ram usage:        0 bytes
   852 ;; Hardware stack levels used: 1
   853 ;; Hardware stack levels required when called: 2
   854 ;; This function calls:
   855 ;;		Nothing
   856 ;; This function is called by:
   857 ;;		_SCHED_vStartScheduler
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861                           	psect	text6
   862   000CC0                     __ptext6:
   863                           	callstack 0
   864   000CC0                     _TASK_vTask1s:
   865                           	callstack 0
   866   000CC0  FFFF               	dw	65535	; assembler added errata NOP
   867                           
   868                           ;incstack = 0
   869   000CC2  0012               	return		;funcret
   870   000CC4  FFFF               	dw	65535	; errata NOP
   871   000CC6                     __end_of_TASK_vTask1s:
   872                           	callstack 0
   873                           
   874 ;; *************** function _TASK_vTask1ms *****************
   875 ;; Defined at:
   876 ;;		line 15 in file "tasks.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;		None
   879 ;; Auto vars:     Size  Location     Type
   880 ;;		None
   881 ;; Return value:  Size  Location     Type
   882 ;;                  1    wreg      void 
   883 ;; Registers used:
   884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   894 ;;Total ram usage:        0 bytes
   895 ;; Hardware stack levels used: 1
   896 ;; Hardware stack levels required when called: 7
   897 ;; This function calls:
   898 ;;		_LIGHTS_BrakeRun
   899 ;;		_SGL_BlinkersRun
   900 ;; This function is called by:
   901 ;;		_SCHED_vStartScheduler
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           	psect	text7
   906   000CA8                     __ptext7:
   907                           	callstack 0
   908   000CA8                     _TASK_vTask1ms:
   909                           	callstack 0
   910   000CA8  FFFF               	dw	65535	; assembler added errata NOP
   911                           
   912                           ;tasks.c: 17: SGL_BlinkersRun();
   913                           
   914                           ;incstack = 0
   915   000CAA  ECF9  F003         	call	_SGL_BlinkersRun	;wreg free
   916                           
   917                           ;tasks.c: 18: LIGHTS_BrakeRun();
   918   000CAE  EC9F  F005         	call	_LIGHTS_BrakeRun	;wreg free
   919   000CB2  0012               	return		;funcret
   920   000CB4  FFFF               	dw	65535	; errata NOP
   921   000CB6                     __end_of_TASK_vTask1ms:
   922                           	callstack 0
   923                           
   924 ;; *************** function _SGL_BlinkersRun *****************
   925 ;; Defined at:
   926 ;;		line 208 in file "sgl.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;		None
   929 ;; Auto vars:     Size  Location     Type
   930 ;;		None
   931 ;; Return value:  Size  Location     Type
   932 ;;                  1    wreg      void 
   933 ;; Registers used:
   934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   944 ;;Total ram usage:        0 bytes
   945 ;; Hardware stack levels used: 1
   946 ;; Hardware stack levels required when called: 6
   947 ;; This function calls:
   948 ;;		_SGL_BlinkEventPoll
   949 ;;		_SGL_BlinkPasiveState
   950 ;;		_SGL_BlinkSwitchOffState
   951 ;;		_SGL_BlinkSwitchOnState
   952 ;; This function is called by:
   953 ;;		_TASK_vTask1ms
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           	psect	text8
   958   0007F2                     __ptext8:
   959                           	callstack 0
   960   0007F2                     _SGL_BlinkersRun:
   961                           	callstack 0
   962   0007F2  FFFF               	dw	65535	; assembler added errata NOP
   963                           
   964                           ;sgl.c: 210: if(0 != blinkerSM._currentState)
   965                           
   966                           ;incstack = 0
   967   0007F4  500A               	movf	_blinkerSM^0,w,c
   968   0007F6  100B               	iorwf	(_blinkerSM+1)^0,w,c
   969   0007F8  B4D8               	btfsc	status,2,c
   970   0007FA  D00E               	goto	u1509
   971                           
   972                           ;sgl.c: 211: {;sgl.c: 212: (*blinkerSM._currentState)();
   973   0007FC  D801               	call	u1508
   974   0007FE  D00C               	goto	u1509
   975   000800                     u1508:
   976   000800  FFFF               	dw	65535	; assembler added errata NOP
   977   000802  0005               	push	
   978   000804  6EFA               	movwf	pclath,c
   979   000806  500A               	movf	_blinkerSM^0,w,c
   980   000808  6EFD               	movwf	tosl,c
   981   00080A  500B               	movf	(_blinkerSM+1)^0,w,c
   982   00080C  6EFE               	movwf	tosh,c
   983   00080E  50F8               	movf	tblptru,w,c
   984   000810  6EFF               	movwf	tosu,c
   985   000812  50FA               	movf	pclath,w,c
   986   000814  0012               	return		;indir
   987   000816  FFFF               	dw	65535	; errata NOP
   988   000818                     u1509:
   989   000818  FFFF               	dw	65535	; assembler added errata NOP
   990                           
   991                           ;sgl.c: 213: };sgl.c: 214: if(0 != blinkerSM._pollEvents)
   992   00081A  500C               	movf	(_blinkerSM+2)^0,w,c
   993   00081C  100D               	iorwf	(_blinkerSM+3)^0,w,c
   994   00081E  B4D8               	btfsc	status,2,c
   995   000820  D010               	goto	u1529
   996                           
   997                           ;sgl.c: 215: {;sgl.c: 216: (*blinkerSM._pollEvents)();
   998   000822  EE20  F00C         	lfsr	2,_blinkerSM+2
   999   000826  D801               	call	u1528
  1000   000828  D00C               	goto	u1529
  1001   00082A                     u1528:
  1002   00082A  FFFF               	dw	65535	; assembler added errata NOP
  1003   00082C  0005               	push	
  1004   00082E  6EFA               	movwf	pclath,c
  1005   000830  50DE               	movf	postinc2,w,c
  1006   000832  6EFD               	movwf	tosl,c
  1007   000834  50DE               	movf	postinc2,w,c
  1008   000836  6EFE               	movwf	tosh,c
  1009   000838  50F8               	movf	tblptru,w,c
  1010   00083A  6EFF               	movwf	tosu,c
  1011   00083C  50FA               	movf	pclath,w,c
  1012   00083E  0012               	return		;indir
  1013   000840  FFFF               	dw	65535	; errata NOP
  1014   000842                     u1529:
  1015   000842  FFFF               	dw	65535	; assembler added errata NOP
  1016   000844  0012               	return		;funcret
  1017   000846  FFFF               	dw	65535	; errata NOP
  1018   000848                     __end_of_SGL_BlinkersRun:
  1019                           	callstack 0
  1020                           
  1021 ;; *************** function _SGL_BlinkPasiveState *****************
  1022 ;; Defined at:
  1023 ;;		line 65 in file "sgl.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;		None
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;		None
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      void 
  1030 ;; Registers used:
  1031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1041 ;;Total ram usage:        0 bytes
  1042 ;; Hardware stack levels used: 1
  1043 ;; Hardware stack levels required when called: 5
  1044 ;; This function calls:
  1045 ;;		_SGL_setAllHazardLights
  1046 ;;		_SGL_toggleAllHazardLights
  1047 ;; This function is called by:
  1048 ;;		_SGL_BlinkSwitchOnState
  1049 ;;		_SGL_BlinkSwitchOffState
  1050 ;;		_SGL_BlinkersInit
  1051 ;;		_SGL_BlinkersRun
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055                           	psect	text9
  1056   0001DE                     __ptext9:
  1057                           	callstack 0
  1058   0001DE                     _SGL_BlinkPasiveState:
  1059                           	callstack 0
  1060   0001DE  FFFF               	dw	65535	; assembler added errata NOP
  1061                           
  1062                           ;sgl.c: 67: static T_U16 counter = 0;;sgl.c: 68: static T_U8 firstEntry = 1;;sgl.c: 69: 
      +                          static T_U8 toggleLights = 0;;sgl.c: 72: if(blinkerSM.firstEntry == 1)
  1063                           
  1064                           ;incstack = 0
  1065   0001E0  040E               	decf	(_blinkerSM+4)^0,w,c
  1066   0001E2  100F               	iorwf	(_blinkerSM+5)^0,w,c
  1067   0001E4  A4D8               	btfss	status,2,c
  1068   0001E6  D007               	goto	l1856
  1069                           
  1070                           ;sgl.c: 73: {;sgl.c: 74: SGL_setAllHazardLights(0);
  1071   0001E8  0E00               	movlw	0
  1072   0001EA  ECCD  F004         	call	_SGL_setAllHazardLights
  1073                           
  1074                           ;sgl.c: 75: blinkerSM.firstEntry = 0;
  1075   0001EE  0E00               	movlw	0
  1076   0001F0  6E0F               	movwf	(_blinkerSM+5)^0,c
  1077   0001F2  0E00               	movlw	0
  1078   0001F4  6E0E               	movwf	(_blinkerSM+4)^0,c
  1079   0001F6                     l1856:
  1080   0001F6  FFFF               	dw	65535	; assembler added errata NOP
  1081                           
  1082                           ;sgl.c: 76: };sgl.c: 79: if(1 == blinkerSM.avarie)
  1083   0001F8  0410               	decf	(_blinkerSM+6)^0,w,c
  1084   0001FA  A4D8               	btfss	status,2,c
  1085   0001FC  D01E               	goto	l1872
  1086                           
  1087                           ;sgl.c: 80: {;sgl.c: 81: if(1 == firstEntry)
  1088   0001FE  044E               	decf	SGL_BlinkPasiveState@firstEntry^0,w,c
  1089   000200  A4D8               	btfss	status,2,c
  1090   000202  D005               	goto	l1864
  1091                           
  1092                           ;sgl.c: 82: {;sgl.c: 83: SGL_setAllHazardLights(1);
  1093   000204  0E01               	movlw	1
  1094   000206  ECCD  F004         	call	_SGL_setAllHazardLights
  1095                           
  1096                           ;sgl.c: 84: firstEntry = 0;
  1097   00020A  0E00               	movlw	0
  1098   00020C  6E4E               	movwf	SGL_BlinkPasiveState@firstEntry^0,c
  1099   00020E                     l1864:
  1100   00020E  FFFF               	dw	65535	; assembler added errata NOP
  1101                           
  1102                           ;sgl.c: 85: };sgl.c: 86: if(500 == counter)
  1103   000210  0EF4               	movlw	244
  1104   000212  1821               	xorwf	SGL_BlinkPasiveState@counter^0,w,c
  1105   000214  E10E               	bnz	l1870
  1106   000216  0422               	decf	(SGL_BlinkPasiveState@counter+1)^0,w,c
  1107   000218  A4D8               	btfss	status,2,c
  1108   00021A  D00B               	goto	l1870
  1109                           
  1110                           ;sgl.c: 87: {;sgl.c: 88: SGL_toggleAllHazardLights(&toggleLights);
  1111   00021C  0E2D               	movlw	low SGL_BlinkPasiveState@toggleLights
  1112   00021E  6E4A               	movwf	SGL_toggleAllHazardLights@toggle^0,c
  1113   000220  0E00               	movlw	high SGL_BlinkPasiveState@toggleLights
  1114   000222  6E4B               	movwf	(SGL_toggleAllHazardLights@toggle+1)^0,c
  1115   000224  EC1E  F003         	call	_SGL_toggleAllHazardLights	;wreg free
  1116                           
  1117                           ;sgl.c: 89: counter = 0;
  1118   000228  0E00               	movlw	0
  1119   00022A  6E22               	movwf	(SGL_BlinkPasiveState@counter+1)^0,c
  1120   00022C  0E00               	movlw	0
  1121   00022E  6E21               	movwf	SGL_BlinkPasiveState@counter^0,c
  1122                           
  1123                           ;sgl.c: 90: }
  1124   000230  D010               	goto	l1880
  1125   000232                     l1870:
  1126   000232  FFFF               	dw	65535	; assembler added errata NOP
  1127                           
  1128                           ;sgl.c: 91: else;sgl.c: 92: {;sgl.c: 93: counter++;
  1129   000234  4A21               	infsnz	SGL_BlinkPasiveState@counter^0,f,c
  1130   000236  2A22               	incf	(SGL_BlinkPasiveState@counter+1)^0,f,c
  1131   000238  D00C               	goto	l1880
  1132   00023A                     l1872:
  1133   00023A  FFFF               	dw	65535	; assembler added errata NOP
  1134                           
  1135                           ;sgl.c: 96: else;sgl.c: 97: {;sgl.c: 98: SGL_setAllHazardLights(0);
  1136   00023C  0E00               	movlw	0
  1137   00023E  ECCD  F004         	call	_SGL_setAllHazardLights
  1138                           
  1139                           ;sgl.c: 99: counter = 0;
  1140   000242  0E00               	movlw	0
  1141   000244  6E22               	movwf	(SGL_BlinkPasiveState@counter+1)^0,c
  1142   000246  0E00               	movlw	0
  1143   000248  6E21               	movwf	SGL_BlinkPasiveState@counter^0,c
  1144                           
  1145                           ;sgl.c: 100: firstEntry = 1;
  1146   00024A  0E01               	movlw	1
  1147   00024C  6E4E               	movwf	SGL_BlinkPasiveState@firstEntry^0,c
  1148                           
  1149                           ;sgl.c: 101: toggleLights = 0;
  1150   00024E  0E00               	movlw	0
  1151   000250  6E2D               	movwf	SGL_BlinkPasiveState@toggleLights^0,c
  1152   000252                     l1880:
  1153   000252  FFFF               	dw	65535	; assembler added errata NOP
  1154                           
  1155                           ;sgl.c: 102: };sgl.c: 105: if( ((1 == blinkerSM.leftSwitch) || (1 == blinkerSM.rightSwit
      +                          ch)) && 0 == blinkerSM.avarie )
  1156   000254  0411               	decf	(_blinkerSM+7)^0,w,c
  1157   000256  B4D8               	btfsc	status,2,c
  1158   000258  D003               	goto	u1310
  1159   00025A  0412               	decf	(_blinkerSM+8)^0,w,c
  1160   00025C  A4D8               	btfss	status,2,c
  1161   00025E  D015               	goto	l291
  1162   000260                     u1310:
  1163   000260  FFFF               	dw	65535	; assembler added errata NOP
  1164   000262  5010               	movf	(_blinkerSM+6)^0,w,c
  1165   000264  A4D8               	btfss	status,2,c
  1166   000266  D011               	goto	l291
  1167                           
  1168                           ;sgl.c: 106: {;sgl.c: 107: blinkerSM._currentState = SGL_BlinkSwitchOnState;
  1169   000268  0E50               	movlw	low _SGL_BlinkSwitchOnState
  1170   00026A  6E0A               	movwf	_blinkerSM^0,c
  1171   00026C  0E00               	movlw	high _SGL_BlinkSwitchOnState
  1172   00026E  6E0B               	movwf	(_blinkerSM+1)^0,c
  1173                           
  1174                           ;sgl.c: 108: blinkerSM.firstEntry = 1;
  1175   000270  0E00               	movlw	0
  1176   000272  6E0F               	movwf	(_blinkerSM+5)^0,c
  1177   000274  0E01               	movlw	1
  1178   000276  6E0E               	movwf	(_blinkerSM+4)^0,c
  1179                           
  1180                           ;sgl.c: 109: counter = 0;
  1181   000278  0E00               	movlw	0
  1182   00027A  6E22               	movwf	(SGL_BlinkPasiveState@counter+1)^0,c
  1183   00027C  0E00               	movlw	0
  1184   00027E  6E21               	movwf	SGL_BlinkPasiveState@counter^0,c
  1185                           
  1186                           ;sgl.c: 110: toggleLights = 0;
  1187   000280  0E00               	movlw	0
  1188   000282  6E2D               	movwf	SGL_BlinkPasiveState@toggleLights^0,c
  1189                           
  1190                           ;sgl.c: 111: SGL_setAllHazardLights(0);
  1191   000284  0E00               	movlw	0
  1192   000286  ECCD  F004         	call	_SGL_setAllHazardLights
  1193   00028A                     l291:
  1194   00028A  FFFF               	dw	65535	; assembler added errata NOP
  1195   00028C  0012               	return		;funcret
  1196   00028E  FFFF               	dw	65535	; errata NOP
  1197   000290                     __end_of_SGL_BlinkPasiveState:
  1198                           	callstack 0
  1199                           
  1200 ;; *************** function _SGL_BlinkSwitchOffState *****************
  1201 ;; Defined at:
  1202 ;;		line 168 in file "sgl.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;		None
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;		None
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      void 
  1209 ;; Registers used:
  1210 ;;		wreg, status,2, status,0, cstack
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1220 ;;Total ram usage:        0 bytes
  1221 ;; Hardware stack levels used: 1
  1222 ;; Hardware stack levels required when called: 5
  1223 ;; This function calls:
  1224 ;;		_SGL_setAllHazardLights
  1225 ;; This function is called by:
  1226 ;;		_SGL_BlinkSwitchOnState
  1227 ;;		_SGL_BlinkersRun
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           	psect	text10
  1232   000948                     __ptext10:
  1233                           	callstack 0
  1234   000948                     _SGL_BlinkSwitchOffState:
  1235                           	callstack 0
  1236   000948  FFFF               	dw	65535	; assembler added errata NOP
  1237                           
  1238                           ;sgl.c: 171: if(blinkerSM.firstEntry == 1)
  1239                           
  1240                           ;incstack = 0
  1241   00094A  040E               	decf	(_blinkerSM+4)^0,w,c
  1242   00094C  100F               	iorwf	(_blinkerSM+5)^0,w,c
  1243   00094E  A4D8               	btfss	status,2,c
  1244   000950  D007               	goto	l1954
  1245                           
  1246                           ;sgl.c: 172: {;sgl.c: 173: blinkerSM.firstEntry = 0;
  1247   000952  0E00               	movlw	0
  1248   000954  6E0F               	movwf	(_blinkerSM+5)^0,c
  1249   000956  0E00               	movlw	0
  1250   000958  6E0E               	movwf	(_blinkerSM+4)^0,c
  1251                           
  1252                           ;sgl.c: 174: SGL_setAllHazardLights(0);
  1253   00095A  0E00               	movlw	0
  1254   00095C  ECCD  F004         	call	_SGL_setAllHazardLights
  1255   000960                     l1954:
  1256   000960  FFFF               	dw	65535	; assembler added errata NOP
  1257                           
  1258                           ;sgl.c: 175: };sgl.c: 180: if( 1 == blinkerSM.avarie )
  1259   000962  0410               	decf	(_blinkerSM+6)^0,w,c
  1260   000964  A4D8               	btfss	status,2,c
  1261   000966  D00A               	goto	l1960
  1262                           
  1263                           ;sgl.c: 181: {;sgl.c: 182: blinkerSM._currentState = SGL_BlinkPasiveState;
  1264   000968  0EDE               	movlw	low _SGL_BlinkPasiveState
  1265   00096A  6E0A               	movwf	_blinkerSM^0,c
  1266   00096C  0E01               	movlw	high _SGL_BlinkPasiveState
  1267   00096E  FFFF               	dw	65535	; assembler added errata NOP
  1268   000970  6E0B               	movwf	(_blinkerSM+1)^0,c
  1269                           
  1270                           ;sgl.c: 183: blinkerSM.firstEntry = 1;
  1271   000972  0E00               	movlw	0
  1272   000974  6E0F               	movwf	(_blinkerSM+5)^0,c
  1273   000976  0E01               	movlw	1
  1274   000978  6E0E               	movwf	(_blinkerSM+4)^0,c
  1275                           
  1276                           ;sgl.c: 184: } else if( (1 == blinkerSM.leftSwitch) || (1 == blinkerSM.rightSwitch) )
  1277   00097A  D00C               	goto	l318
  1278   00097C                     l1960:
  1279   00097C  FFFF               	dw	65535	; assembler added errata NOP
  1280   00097E  0411               	decf	(_blinkerSM+7)^0,w,c
  1281   000980  B4D8               	btfsc	status,2,c
  1282   000982  D003               	goto	u1430
  1283   000984  0412               	decf	(_blinkerSM+8)^0,w,c
  1284   000986  A4D8               	btfss	status,2,c
  1285   000988  D005               	goto	l318
  1286   00098A                     u1430:
  1287   00098A  FFFF               	dw	65535	; assembler added errata NOP
  1288                           
  1289                           ;sgl.c: 185: {;sgl.c: 186: blinkerSM._currentState = SGL_BlinkSwitchOnState;
  1290   00098C  0E50               	movlw	low _SGL_BlinkSwitchOnState
  1291   00098E  6E0A               	movwf	_blinkerSM^0,c
  1292   000990  0E00               	movlw	high _SGL_BlinkSwitchOnState
  1293   000992  D7ED               	goto	L1
  1294   000994                     l318:
  1295   000994  FFFF               	dw	65535	; assembler added errata NOP
  1296   000996  0012               	return		;funcret
  1297   000998  FFFF               	dw	65535	; errata NOP
  1298   00099A                     __end_of_SGL_BlinkSwitchOffState:
  1299                           	callstack 0
  1300                           
  1301 ;; *************** function _SGL_BlinkSwitchOnState *****************
  1302 ;; Defined at:
  1303 ;;		line 116 in file "sgl.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;		None
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;		None
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  1    wreg      void 
  1310 ;; Registers used:
  1311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1321 ;;Total ram usage:        0 bytes
  1322 ;; Hardware stack levels used: 1
  1323 ;; Hardware stack levels required when called: 5
  1324 ;; This function calls:
  1325 ;;		_SGL_setAllHazardLights
  1326 ;;		_SGL_setSideHazardLights
  1327 ;;		_SGL_toggleSideHazardLights
  1328 ;; This function is called by:
  1329 ;;		_SGL_BlinkPasiveState
  1330 ;;		_SGL_BlinkSwitchOffState
  1331 ;;		_SGL_BlinkersRun
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           	psect	text11
  1336   000050                     __ptext11:
  1337                           	callstack 0
  1338   000050                     _SGL_BlinkSwitchOnState:
  1339                           	callstack 0
  1340   000050  FFFF               	dw	65535	; assembler added errata NOP
  1341                           
  1342                           ;sgl.c: 118: static T_U8 side = 0;;sgl.c: 119: static T_U16 counter = 0;;sgl.c: 120: sta
      +                          tic T_U8 firstEntry = 1;;sgl.c: 121: static T_U8 toggleLights = 0;;sgl.c: 124: if(blinke
      +                          rSM.firstEntry == 1)
  1343                           
  1344                           ;incstack = 0
  1345   000052  040E               	decf	(_blinkerSM+4)^0,w,c
  1346   000054  100F               	iorwf	(_blinkerSM+5)^0,w,c
  1347   000056  A4D8               	btfss	status,2,c
  1348   000058  D006               	goto	l1902
  1349                           
  1350                           ;sgl.c: 125: {;sgl.c: 127: side = blinkerSM.rightSwitch;
  1351   00005A  C012  F029         	movff	_blinkerSM+8,SGL_BlinkSwitchOnState@side
  1352                           
  1353                           ;sgl.c: 128: blinkerSM.firstEntry = 0;
  1354   00005E  0E00               	movlw	0
  1355   000060  6E0F               	movwf	(_blinkerSM+5)^0,c
  1356   000062  0E00               	movlw	0
  1357   000064  6E0E               	movwf	(_blinkerSM+4)^0,c
  1358   000066                     l1902:
  1359   000066  FFFF               	dw	65535	; assembler added errata NOP
  1360                           
  1361                           ;sgl.c: 129: };sgl.c: 132: if(1 == firstEntry)
  1362   000068  044D               	decf	SGL_BlinkSwitchOnState@firstEntry^0,w,c
  1363   00006A  A4D8               	btfss	status,2,c
  1364   00006C  D007               	goto	l1908
  1365                           
  1366                           ;sgl.c: 133: {;sgl.c: 134: SGL_setSideHazardLights(1, side);
  1367   00006E  C029  F04A         	movff	SGL_BlinkSwitchOnState@side,SGL_setSideHazardLights@side
  1368   000072  0E01               	movlw	1
  1369   000074  EC7A  F004         	call	_SGL_setSideHazardLights
  1370                           
  1371                           ;sgl.c: 135: firstEntry = 0;
  1372   000078  0E00               	movlw	0
  1373   00007A  6E4D               	movwf	SGL_BlinkSwitchOnState@firstEntry^0,c
  1374   00007C                     l1908:
  1375   00007C  FFFF               	dw	65535	; assembler added errata NOP
  1376                           
  1377                           ;sgl.c: 136: };sgl.c: 137: if(500 == counter)
  1378   00007E  0EF4               	movlw	244
  1379   000080  181F               	xorwf	SGL_BlinkSwitchOnState@counter^0,w,c
  1380   000082  E110               	bnz	l1914
  1381   000084  0420               	decf	(SGL_BlinkSwitchOnState@counter+1)^0,w,c
  1382   000086  A4D8               	btfss	status,2,c
  1383   000088  D00D               	goto	l1914
  1384                           
  1385                           ;sgl.c: 138: {;sgl.c: 139: SGL_toggleSideHazardLights(&toggleLights, side);
  1386   00008A  0E2C               	movlw	low SGL_BlinkSwitchOnState@toggleLights
  1387   00008C  6E4A               	movwf	SGL_toggleSideHazardLights@toggle^0,c
  1388   00008E  0E00               	movlw	high SGL_BlinkSwitchOnState@toggleLights
  1389   000090  6E4B               	movwf	(SGL_toggleSideHazardLights@toggle+1)^0,c
  1390   000092  C029  F04C         	movff	SGL_BlinkSwitchOnState@side,SGL_toggleSideHazardLights@side
  1391   000096  ECD8  F001         	call	_SGL_toggleSideHazardLights	;wreg free
  1392                           
  1393                           ;sgl.c: 140: counter = 0;
  1394   00009A  0E00               	movlw	0
  1395   00009C  6E20               	movwf	(SGL_BlinkSwitchOnState@counter+1)^0,c
  1396   00009E  0E00               	movlw	0
  1397   0000A0  6E1F               	movwf	SGL_BlinkSwitchOnState@counter^0,c
  1398                           
  1399                           ;sgl.c: 141: }
  1400   0000A2  D003               	goto	l1916
  1401   0000A4                     l1914:
  1402   0000A4  FFFF               	dw	65535	; assembler added errata NOP
  1403                           
  1404                           ;sgl.c: 142: else;sgl.c: 143: {;sgl.c: 144: counter++;
  1405   0000A6  4A1F               	infsnz	SGL_BlinkSwitchOnState@counter^0,f,c
  1406   0000A8  2A20               	incf	(SGL_BlinkSwitchOnState@counter+1)^0,f,c
  1407   0000AA                     l1916:
  1408   0000AA  FFFF               	dw	65535	; assembler added errata NOP
  1409                           
  1410                           ;sgl.c: 145: };sgl.c: 148: if( 1 == blinkerSM.avarie )
  1411   0000AC  0410               	decf	(_blinkerSM+6)^0,w,c
  1412   0000AE  A4D8               	btfss	status,2,c
  1413   0000B0  D014               	goto	l1930
  1414                           
  1415                           ;sgl.c: 149: {;sgl.c: 150: blinkerSM._currentState = SGL_BlinkPasiveState;
  1416   0000B2  0EDE               	movlw	low _SGL_BlinkPasiveState
  1417   0000B4  6E0A               	movwf	_blinkerSM^0,c
  1418   0000B6  0E01               	movlw	high _SGL_BlinkPasiveState
  1419   0000B8  6E0B               	movwf	(_blinkerSM+1)^0,c
  1420                           
  1421                           ;sgl.c: 151: blinkerSM.firstEntry = 1;
  1422   0000BA  0E00               	movlw	0
  1423   0000BC  6E0F               	movwf	(_blinkerSM+5)^0,c
  1424   0000BE  0E01               	movlw	1
  1425   0000C0  6E0E               	movwf	(_blinkerSM+4)^0,c
  1426                           
  1427                           ;sgl.c: 152: counter = 0;
  1428   0000C2  0E00               	movlw	0
  1429   0000C4  6E20               	movwf	(SGL_BlinkSwitchOnState@counter+1)^0,c
  1430   0000C6  0E00               	movlw	0
  1431   0000C8  6E1F               	movwf	SGL_BlinkSwitchOnState@counter^0,c
  1432                           
  1433                           ;sgl.c: 153: toggleLights = 0;
  1434   0000CA  0E00               	movlw	0
  1435   0000CC  6E2C               	movwf	SGL_BlinkSwitchOnState@toggleLights^0,c
  1436                           
  1437                           ;sgl.c: 154: firstEntry = 1;
  1438   0000CE  0E01               	movlw	1
  1439   0000D0  6E4D               	movwf	SGL_BlinkSwitchOnState@firstEntry^0,c
  1440                           
  1441                           ;sgl.c: 155: SGL_setAllHazardLights(0);
  1442   0000D2  0E00               	movlw	0
  1443   0000D4  ECCD  F004         	call	_SGL_setAllHazardLights
  1444                           
  1445                           ;sgl.c: 156: }else if( (0 == blinkerSM.avarie) && (0 == blinkerSM.leftSwitch) && (0 == b
      +                          linkerSM.rightSwitch) )
  1446   0000D8  D01D               	goto	l309
  1447   0000DA                     l1930:
  1448   0000DA  FFFF               	dw	65535	; assembler added errata NOP
  1449   0000DC  5010               	movf	(_blinkerSM+6)^0,w,c
  1450   0000DE  A4D8               	btfss	status,2,c
  1451   0000E0  D019               	goto	l309
  1452   0000E2  5011               	movf	(_blinkerSM+7)^0,w,c
  1453   0000E4  A4D8               	btfss	status,2,c
  1454   0000E6  D016               	goto	l309
  1455   0000E8  5012               	movf	(_blinkerSM+8)^0,w,c
  1456   0000EA  A4D8               	btfss	status,2,c
  1457   0000EC  D013               	goto	l309
  1458                           
  1459                           ;sgl.c: 157: {;sgl.c: 158: blinkerSM._currentState = SGL_BlinkSwitchOffState;
  1460   0000EE  0E48               	movlw	low _SGL_BlinkSwitchOffState
  1461   0000F0  6E0A               	movwf	_blinkerSM^0,c
  1462   0000F2  0E09               	movlw	high _SGL_BlinkSwitchOffState
  1463   0000F4  6E0B               	movwf	(_blinkerSM+1)^0,c
  1464                           
  1465                           ;sgl.c: 159: blinkerSM.firstEntry = 1;
  1466   0000F6  0E00               	movlw	0
  1467   0000F8  6E0F               	movwf	(_blinkerSM+5)^0,c
  1468   0000FA  0E01               	movlw	1
  1469   0000FC  6E0E               	movwf	(_blinkerSM+4)^0,c
  1470                           
  1471                           ;sgl.c: 160: counter = 0;
  1472   0000FE  0E00               	movlw	0
  1473   000100  6E20               	movwf	(SGL_BlinkSwitchOnState@counter+1)^0,c
  1474   000102  0E00               	movlw	0
  1475   000104  6E1F               	movwf	SGL_BlinkSwitchOnState@counter^0,c
  1476                           
  1477                           ;sgl.c: 161: toggleLights = 0;
  1478   000106  0E00               	movlw	0
  1479   000108  6E2C               	movwf	SGL_BlinkSwitchOnState@toggleLights^0,c
  1480                           
  1481                           ;sgl.c: 162: firstEntry = 1;
  1482   00010A  0E01               	movlw	1
  1483   00010C  6E4D               	movwf	SGL_BlinkSwitchOnState@firstEntry^0,c
  1484                           
  1485                           ;sgl.c: 163: SGL_setAllHazardLights(0);
  1486   00010E  0E00               	movlw	0
  1487   000110  ECCD  F004         	call	_SGL_setAllHazardLights
  1488   000114                     l309:
  1489   000114  FFFF               	dw	65535	; assembler added errata NOP
  1490   000116  0012               	return		;funcret
  1491   000118  FFFF               	dw	65535	; errata NOP
  1492   00011A                     __end_of_SGL_BlinkSwitchOnState:
  1493                           	callstack 0
  1494                           
  1495 ;; *************** function _SGL_toggleSideHazardLights *****************
  1496 ;; Defined at:
  1497 ;;		line 25 in file "sgl.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;  toggle          2   28[COMRAM] PTR unsigned char 
  1500 ;;		 -> SGL_BlinkSwitchOnState@toggleLights(1), 
  1501 ;;  side            1   30[COMRAM] unsigned char 
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;		None
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  1    wreg      void 
  1506 ;; Registers used:
  1507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1513 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1516 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1517 ;;Total ram usage:        3 bytes
  1518 ;; Hardware stack levels used: 1
  1519 ;; Hardware stack levels required when called: 4
  1520 ;; This function calls:
  1521 ;;		_IOC_vSetOutputPort
  1522 ;; This function is called by:
  1523 ;;		_SGL_BlinkSwitchOnState
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           	psect	text12
  1528   0003B0                     __ptext12:
  1529                           	callstack 0
  1530   0003B0                     _SGL_toggleSideHazardLights:
  1531                           	callstack 0
  1532   0003B0  FFFF               	dw	65535	; assembler added errata NOP
  1533                           
  1534                           ;sgl.c: 27: if(0 == side)
  1535                           
  1536                           ;incstack = 0
  1537   0003B2  504C               	movf	SGL_toggleSideHazardLights@side^0,w,c
  1538   0003B4  A4D8               	btfss	status,2,c
  1539   0003B6  D019               	goto	l1812
  1540                           
  1541                           ;sgl.c: 28: {;sgl.c: 29: IOC_vSetOutputPort(IOC_SFS, *toggle);
  1542   0003B8  0E01               	movlw	1
  1543   0003BA  6E46               	movwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,c
  1544   0003BC  0E03               	movlw	3
  1545   0003BE  6E45               	movwf	IOC_vSetOutputPort@u16ChannelSelect^0,c
  1546   0003C0  C04A  FFD9         	movff	SGL_toggleSideHazardLights@toggle,fsr2l
  1547   0003C4  C04B  FFDA         	movff	SGL_toggleSideHazardLights@toggle+1,fsr2h
  1548   0003C8  50DF               	movf	indf2,w,c
  1549   0003CA  6E47               	movwf	IOC_vSetOutputPort@u8Value^0,c
  1550   0003CC  EC32  F005         	call	_IOC_vSetOutputPort	;wreg free
  1551                           
  1552                           ;sgl.c: 30: IOC_vSetOutputPort(IOC_SSS, *toggle);
  1553   0003D0  0E01               	movlw	1
  1554   0003D2  6E46               	movwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,c
  1555   0003D4  0E07               	movlw	7
  1556   0003D6  6E45               	movwf	IOC_vSetOutputPort@u16ChannelSelect^0,c
  1557   0003D8  C04A  FFD9         	movff	SGL_toggleSideHazardLights@toggle,fsr2l
  1558   0003DC  C04B  FFDA         	movff	SGL_toggleSideHazardLights@toggle+1,fsr2h
  1559   0003E0  50DF               	movf	indf2,w,c
  1560   0003E2  6E47               	movwf	IOC_vSetOutputPort@u8Value^0,c
  1561   0003E4  EC32  F005         	call	_IOC_vSetOutputPort	;wreg free
  1562                           
  1563                           ;sgl.c: 31: }
  1564   0003E8  D019               	goto	l1814
  1565   0003EA                     l1812:
  1566   0003EA  FFFF               	dw	65535	; assembler added errata NOP
  1567                           
  1568                           ;sgl.c: 32: else;sgl.c: 33: {;sgl.c: 34: IOC_vSetOutputPort(IOC_SFD, *toggle);
  1569   0003EC  0E01               	movlw	1
  1570   0003EE  6E46               	movwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,c
  1571   0003F0  0E00               	movlw	0
  1572   0003F2  6E45               	movwf	IOC_vSetOutputPort@u16ChannelSelect^0,c
  1573   0003F4  C04A  FFD9         	movff	SGL_toggleSideHazardLights@toggle,fsr2l
  1574   0003F8  C04B  FFDA         	movff	SGL_toggleSideHazardLights@toggle+1,fsr2h
  1575   0003FC  50DF               	movf	indf2,w,c
  1576   0003FE  6E47               	movwf	IOC_vSetOutputPort@u8Value^0,c
  1577   000400  EC32  F005         	call	_IOC_vSetOutputPort	;wreg free
  1578                           
  1579                           ;sgl.c: 35: IOC_vSetOutputPort(IOC_SSD, *toggle);
  1580   000404  0E01               	movlw	1
  1581   000406  6E46               	movwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,c
  1582   000408  0E04               	movlw	4
  1583   00040A  6E45               	movwf	IOC_vSetOutputPort@u16ChannelSelect^0,c
  1584   00040C  C04A  FFD9         	movff	SGL_toggleSideHazardLights@toggle,fsr2l
  1585   000410  C04B  FFDA         	movff	SGL_toggleSideHazardLights@toggle+1,fsr2h
  1586   000414  50DF               	movf	indf2,w,c
  1587   000416  6E47               	movwf	IOC_vSetOutputPort@u8Value^0,c
  1588   000418  EC32  F005         	call	_IOC_vSetOutputPort	;wreg free
  1589   00041C                     l1814:
  1590   00041C  FFFF               	dw	65535	; assembler added errata NOP
  1591                           
  1592                           ;sgl.c: 36: };sgl.c: 37: *toggle = *toggle ^ 1;
  1593   00041E  C04A  FFD9         	movff	SGL_toggleSideHazardLights@toggle,fsr2l
  1594   000422  C04B  FFDA         	movff	SGL_toggleSideHazardLights@toggle+1,fsr2h
  1595   000426  50DF               	movf	indf2,w,c
  1596   000428  0A01               	xorlw	1
  1597   00042A  C04A  FFD9         	movff	SGL_toggleSideHazardLights@toggle,fsr2l
  1598   00042E  C04B  FFDA         	movff	SGL_toggleSideHazardLights@toggle+1,fsr2h
  1599   000432  6EDF               	movwf	indf2,c
  1600   000434  0012               	return		;funcret
  1601   000436  FFFF               	dw	65535	; errata NOP
  1602   000438                     __end_of_SGL_toggleSideHazardLights:
  1603                           	callstack 0
  1604                           
  1605 ;; *************** function _SGL_setSideHazardLights *****************
  1606 ;; Defined at:
  1607 ;;		line 48 in file "sgl.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;  value           1    wreg     unsigned char 
  1610 ;;  side            1   28[COMRAM] unsigned char 
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;  value           1   29[COMRAM] unsigned char 
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  1    wreg      void 
  1615 ;; Registers used:
  1616 ;;		wreg, status,2, status,0, cstack
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1622 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1623 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1625 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1626 ;;Total ram usage:        2 bytes
  1627 ;; Hardware stack levels used: 1
  1628 ;; Hardware stack levels required when called: 4
  1629 ;; This function calls:
  1630 ;;		_IOC_vSetOutputPort
  1631 ;; This function is called by:
  1632 ;;		_SGL_BlinkSwitchOnState
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           	psect	text13
  1637   0008F4                     __ptext13:
  1638                           	callstack 0
  1639   0008F4                     _SGL_setSideHazardLights:
  1640                           	callstack 0
  1641   0008F4  FFFF               	dw	65535	; assembler added errata NOP
  1642                           
  1643                           ;incstack = 0
  1644                           ;SGL_setSideHazardLights@value stored from wreg
  1645   0008F6  6E4B               	movwf	SGL_setSideHazardLights@value^0,c
  1646                           
  1647                           ;sgl.c: 50: if(0 == side)
  1648   0008F8  504A               	movf	SGL_setSideHazardLights@side^0,w,c
  1649   0008FA  A4D8               	btfss	status,2,c
  1650   0008FC  D011               	goto	l1822
  1651                           
  1652                           ;sgl.c: 51: {;sgl.c: 52: IOC_vSetOutputPort(IOC_SFS, value);
  1653   0008FE  0E01               	movlw	1
  1654   000900  6E46               	movwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,c
  1655   000902  0E03               	movlw	3
  1656   000904  6E45               	movwf	IOC_vSetOutputPort@u16ChannelSelect^0,c
  1657   000906  C04B  F047         	movff	SGL_setSideHazardLights@value,IOC_vSetOutputPort@u8Value
  1658   00090A  EC32  F005         	call	_IOC_vSetOutputPort	;wreg free
  1659                           
  1660                           ;sgl.c: 53: IOC_vSetOutputPort(IOC_SSS, value);
  1661   00090E  0E01               	movlw	1
  1662   000910  6E46               	movwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,c
  1663   000912  0E07               	movlw	7
  1664   000914  6E45               	movwf	IOC_vSetOutputPort@u16ChannelSelect^0,c
  1665   000916  C04B  F047         	movff	SGL_setSideHazardLights@value,IOC_vSetOutputPort@u8Value
  1666   00091A  EC32  F005         	call	_IOC_vSetOutputPort	;wreg free
  1667                           
  1668                           ;sgl.c: 54: }
  1669   00091E  D011               	goto	l273
  1670   000920                     l1822:
  1671   000920  FFFF               	dw	65535	; assembler added errata NOP
  1672                           
  1673                           ;sgl.c: 55: else;sgl.c: 56: {;sgl.c: 57: IOC_vSetOutputPort(IOC_SFD, value);
  1674   000922  0E01               	movlw	1
  1675   000924  6E46               	movwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,c
  1676   000926  0E00               	movlw	0
  1677   000928  6E45               	movwf	IOC_vSetOutputPort@u16ChannelSelect^0,c
  1678   00092A  C04B  F047         	movff	SGL_setSideHazardLights@value,IOC_vSetOutputPort@u8Value
  1679   00092E  EC32  F005         	call	_IOC_vSetOutputPort	;wreg free
  1680                           
  1681                           ;sgl.c: 58: IOC_vSetOutputPort(IOC_SSD, value);
  1682   000932  0E01               	movlw	1
  1683   000934  6E46               	movwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,c
  1684   000936  0E04               	movlw	4
  1685   000938  6E45               	movwf	IOC_vSetOutputPort@u16ChannelSelect^0,c
  1686   00093A  C04B  F047         	movff	SGL_setSideHazardLights@value,IOC_vSetOutputPort@u8Value
  1687   00093E  EC32  F005         	call	_IOC_vSetOutputPort	;wreg free
  1688   000942                     l273:
  1689   000942  FFFF               	dw	65535	; assembler added errata NOP
  1690   000944  0012               	return		;funcret
  1691   000946  FFFF               	dw	65535	; errata NOP
  1692   000948                     __end_of_SGL_setSideHazardLights:
  1693                           	callstack 0
  1694                           
  1695 ;; *************** function _SGL_toggleAllHazardLights *****************
  1696 ;; Defined at:
  1697 ;;		line 16 in file "sgl.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;  toggle          2   28[COMRAM] PTR unsigned char 
  1700 ;;		 -> SGL_BlinkPasiveState@toggleLights(1), 
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1712 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1715 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1716 ;;Total ram usage:        2 bytes
  1717 ;; Hardware stack levels used: 1
  1718 ;; Hardware stack levels required when called: 4
  1719 ;; This function calls:
  1720 ;;		_IOC_vSetOutputPort
  1721 ;; This function is called by:
  1722 ;;		_SGL_BlinkPasiveState
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           	psect	text14
  1727   00063C                     __ptext14:
  1728                           	callstack 0
  1729   00063C                     _SGL_toggleAllHazardLights:
  1730                           	callstack 0
  1731   00063C  FFFF               	dw	65535	; assembler added errata NOP
  1732                           
  1733                           ;sgl.c: 18: IOC_vSetOutputPort(IOC_SFD, *toggle);
  1734                           
  1735                           ;incstack = 0
  1736   00063E  0E01               	movlw	1
  1737   000640  6E46               	movwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,c
  1738   000642  0E00               	movlw	0
  1739   000644  6E45               	movwf	IOC_vSetOutputPort@u16ChannelSelect^0,c
  1740   000646  C04A  FFD9         	movff	SGL_toggleAllHazardLights@toggle,fsr2l
  1741   00064A  C04B  FFDA         	movff	SGL_toggleAllHazardLights@toggle+1,fsr2h
  1742   00064E  50DF               	movf	indf2,w,c
  1743   000650  6E47               	movwf	IOC_vSetOutputPort@u8Value^0,c
  1744   000652  EC32  F005         	call	_IOC_vSetOutputPort	;wreg free
  1745                           
  1746                           ;sgl.c: 19: IOC_vSetOutputPort(IOC_SFS, *toggle);
  1747   000656  0E01               	movlw	1
  1748   000658  6E46               	movwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,c
  1749   00065A  0E03               	movlw	3
  1750   00065C  6E45               	movwf	IOC_vSetOutputPort@u16ChannelSelect^0,c
  1751   00065E  C04A  FFD9         	movff	SGL_toggleAllHazardLights@toggle,fsr2l
  1752   000662  C04B  FFDA         	movff	SGL_toggleAllHazardLights@toggle+1,fsr2h
  1753   000666  50DF               	movf	indf2,w,c
  1754   000668  6E47               	movwf	IOC_vSetOutputPort@u8Value^0,c
  1755   00066A  EC32  F005         	call	_IOC_vSetOutputPort	;wreg free
  1756                           
  1757                           ;sgl.c: 20: IOC_vSetOutputPort(IOC_SSD, *toggle);
  1758   00066E  0E01               	movlw	1
  1759   000670  6E46               	movwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,c
  1760   000672  0E04               	movlw	4
  1761   000674  6E45               	movwf	IOC_vSetOutputPort@u16ChannelSelect^0,c
  1762   000676  C04A  FFD9         	movff	SGL_toggleAllHazardLights@toggle,fsr2l
  1763   00067A  C04B  FFDA         	movff	SGL_toggleAllHazardLights@toggle+1,fsr2h
  1764   00067E  50DF               	movf	indf2,w,c
  1765   000680  6E47               	movwf	IOC_vSetOutputPort@u8Value^0,c
  1766   000682  EC32  F005         	call	_IOC_vSetOutputPort	;wreg free
  1767                           
  1768                           ;sgl.c: 21: IOC_vSetOutputPort(IOC_SSS, *toggle);
  1769   000686  0E01               	movlw	1
  1770   000688  6E46               	movwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,c
  1771   00068A  0E07               	movlw	7
  1772   00068C  6E45               	movwf	IOC_vSetOutputPort@u16ChannelSelect^0,c
  1773   00068E  C04A  FFD9         	movff	SGL_toggleAllHazardLights@toggle,fsr2l
  1774   000692  C04B  FFDA         	movff	SGL_toggleAllHazardLights@toggle+1,fsr2h
  1775   000696  50DF               	movf	indf2,w,c
  1776   000698  6E47               	movwf	IOC_vSetOutputPort@u8Value^0,c
  1777   00069A  EC32  F005         	call	_IOC_vSetOutputPort	;wreg free
  1778                           
  1779                           ;sgl.c: 22: *toggle = *toggle ^ 1;
  1780   00069E  C04A  FFD9         	movff	SGL_toggleAllHazardLights@toggle,fsr2l
  1781   0006A2  C04B  FFDA         	movff	SGL_toggleAllHazardLights@toggle+1,fsr2h
  1782   0006A6  50DF               	movf	indf2,w,c
  1783   0006A8  0A01               	xorlw	1
  1784   0006AA  C04A  FFD9         	movff	SGL_toggleAllHazardLights@toggle,fsr2l
  1785   0006AE  C04B  FFDA         	movff	SGL_toggleAllHazardLights@toggle+1,fsr2h
  1786   0006B2  6EDF               	movwf	indf2,c
  1787   0006B4  0012               	return		;funcret
  1788   0006B6  FFFF               	dw	65535	; errata NOP
  1789   0006B8                     __end_of_SGL_toggleAllHazardLights:
  1790                           	callstack 0
  1791                           
  1792 ;; *************** function _SGL_setAllHazardLights *****************
  1793 ;; Defined at:
  1794 ;;		line 40 in file "sgl.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;  value           1    wreg     unsigned char 
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;  value           1   28[COMRAM] unsigned char 
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  1    wreg      void 
  1801 ;; Registers used:
  1802 ;;		wreg, status,2, status,0, cstack
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1809 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1811 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1812 ;;Total ram usage:        1 bytes
  1813 ;; Hardware stack levels used: 1
  1814 ;; Hardware stack levels required when called: 4
  1815 ;; This function calls:
  1816 ;;		_IOC_vSetOutputPort
  1817 ;; This function is called by:
  1818 ;;		_SGL_BlinkPasiveState
  1819 ;;		_SGL_BlinkSwitchOnState
  1820 ;;		_SGL_BlinkSwitchOffState
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           	psect	text15
  1825   00099A                     __ptext15:
  1826                           	callstack 0
  1827   00099A                     _SGL_setAllHazardLights:
  1828                           	callstack 0
  1829   00099A  FFFF               	dw	65535	; assembler added errata NOP
  1830                           
  1831                           ;incstack = 0
  1832                           ;SGL_setAllHazardLights@value stored from wreg
  1833   00099C  6E4A               	movwf	SGL_setAllHazardLights@value^0,c
  1834                           
  1835                           ;sgl.c: 42: IOC_vSetOutputPort(IOC_SFD, value);
  1836   00099E  0E01               	movlw	1
  1837   0009A0  6E46               	movwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,c
  1838   0009A2  0E00               	movlw	0
  1839   0009A4  6E45               	movwf	IOC_vSetOutputPort@u16ChannelSelect^0,c
  1840   0009A6  C04A  F047         	movff	SGL_setAllHazardLights@value,IOC_vSetOutputPort@u8Value
  1841   0009AA  EC32  F005         	call	_IOC_vSetOutputPort	;wreg free
  1842                           
  1843                           ;sgl.c: 43: IOC_vSetOutputPort(IOC_SFS, value);
  1844   0009AE  0E01               	movlw	1
  1845   0009B0  6E46               	movwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,c
  1846   0009B2  0E03               	movlw	3
  1847   0009B4  6E45               	movwf	IOC_vSetOutputPort@u16ChannelSelect^0,c
  1848   0009B6  C04A  F047         	movff	SGL_setAllHazardLights@value,IOC_vSetOutputPort@u8Value
  1849   0009BA  EC32  F005         	call	_IOC_vSetOutputPort	;wreg free
  1850                           
  1851                           ;sgl.c: 44: IOC_vSetOutputPort(IOC_SSD, value);
  1852   0009BE  0E01               	movlw	1
  1853   0009C0  6E46               	movwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,c
  1854   0009C2  0E04               	movlw	4
  1855   0009C4  6E45               	movwf	IOC_vSetOutputPort@u16ChannelSelect^0,c
  1856   0009C6  C04A  F047         	movff	SGL_setAllHazardLights@value,IOC_vSetOutputPort@u8Value
  1857   0009CA  EC32  F005         	call	_IOC_vSetOutputPort	;wreg free
  1858                           
  1859                           ;sgl.c: 45: IOC_vSetOutputPort(IOC_SSS, value);
  1860   0009CE  0E01               	movlw	1
  1861   0009D0  6E46               	movwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,c
  1862   0009D2  0E07               	movlw	7
  1863   0009D4  6E45               	movwf	IOC_vSetOutputPort@u16ChannelSelect^0,c
  1864   0009D6  C04A  F047         	movff	SGL_setAllHazardLights@value,IOC_vSetOutputPort@u8Value
  1865   0009DA  EC32  F005         	call	_IOC_vSetOutputPort	;wreg free
  1866   0009DE  0012               	return		;funcret
  1867   0009E0  FFFF               	dw	65535	; errata NOP
  1868   0009E2                     __end_of_SGL_setAllHazardLights:
  1869                           	callstack 0
  1870                           
  1871 ;; *************** function _SGL_BlinkEventPoll *****************
  1872 ;; Defined at:
  1873 ;;		line 191 in file "sgl.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;		None
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;		None
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      void 
  1880 ;; Registers used:
  1881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1891 ;;Total ram usage:        0 bytes
  1892 ;; Hardware stack levels used: 1
  1893 ;; Hardware stack levels required when called: 4
  1894 ;; This function calls:
  1895 ;;		_IOC_T16GetInputPort
  1896 ;; This function is called by:
  1897 ;;		_SGL_BlinkersInit
  1898 ;;		_SGL_BlinkersRun
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           	psect	text16
  1903   000AA2                     __ptext16:
  1904                           	callstack 0
  1905   000AA2                     _SGL_BlinkEventPoll:
  1906                           	callstack 0
  1907   000AA2  FFFF               	dw	65535	; assembler added errata NOP
  1908                           
  1909                           ;sgl.c: 193: blinkerSM.avarie = IOC_T16GetInputPort(IOC_AVARII);
  1910                           
  1911                           ;incstack = 0
  1912   000AA4  0E00               	movlw	0
  1913   000AA6  6E40               	movwf	(IOC_T16GetInputPort@u16ChannelSelect+1)^0,c
  1914   000AA8  0E02               	movlw	2
  1915   000AAA  6E3F               	movwf	IOC_T16GetInputPort@u16ChannelSelect^0,c
  1916   000AAC  EC4F  F004         	call	_IOC_T16GetInputPort	;wreg free
  1917   000AB0  503F               	movf	?_IOC_T16GetInputPort^0,w,c
  1918   000AB2  6E10               	movwf	(_blinkerSM+6)^0,c
  1919                           
  1920                           ;sgl.c: 194: blinkerSM.leftSwitch = IOC_T16GetInputPort(IOC_SEM_S);
  1921   000AB4  0E00               	movlw	0
  1922   000AB6  6E40               	movwf	(IOC_T16GetInputPort@u16ChannelSelect+1)^0,c
  1923   000AB8  0E04               	movlw	4
  1924   000ABA  6E3F               	movwf	IOC_T16GetInputPort@u16ChannelSelect^0,c
  1925   000ABC  EC4F  F004         	call	_IOC_T16GetInputPort	;wreg free
  1926   000AC0  503F               	movf	?_IOC_T16GetInputPort^0,w,c
  1927   000AC2  6E11               	movwf	(_blinkerSM+7)^0,c
  1928                           
  1929                           ;sgl.c: 195: blinkerSM.rightSwitch = IOC_T16GetInputPort(IOC_SEM_D);
  1930   000AC4  0E00               	movlw	0
  1931   000AC6  6E40               	movwf	(IOC_T16GetInputPort@u16ChannelSelect+1)^0,c
  1932   000AC8  0E03               	movlw	3
  1933   000ACA  6E3F               	movwf	IOC_T16GetInputPort@u16ChannelSelect^0,c
  1934   000ACC  EC4F  F004         	call	_IOC_T16GetInputPort	;wreg free
  1935   000AD0  503F               	movf	?_IOC_T16GetInputPort^0,w,c
  1936   000AD2  6E12               	movwf	(_blinkerSM+8)^0,c
  1937   000AD4  0012               	return		;funcret
  1938   000AD6  FFFF               	dw	65535	; errata NOP
  1939   000AD8                     __end_of_SGL_BlinkEventPoll:
  1940                           	callstack 0
  1941                           
  1942 ;; *************** function _LIGHTS_BrakeRun *****************
  1943 ;; Defined at:
  1944 ;;		line 10 in file "lights.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;		None
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;		None
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      void 
  1951 ;; Registers used:
  1952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1962 ;;Total ram usage:        0 bytes
  1963 ;; Hardware stack levels used: 1
  1964 ;; Hardware stack levels required when called: 4
  1965 ;; This function calls:
  1966 ;;		_IOC_T16GetInputPort
  1967 ;;		_IOC_vSetOutputPort
  1968 ;; This function is called by:
  1969 ;;		_TASK_vTask1ms
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text17
  1974   000B3E                     __ptext17:
  1975                           	callstack 0
  1976   000B3E                     _LIGHTS_BrakeRun:
  1977                           	callstack 0
  1978   000B3E  FFFF               	dw	65535	; assembler added errata NOP
  1979                           
  1980                           ;lights.c: 12: static T_U8 counter = 0;;lights.c: 14: if(4 == counter)
  1981                           
  1982                           ;incstack = 0
  1983   000B40  0E04               	movlw	4
  1984   000B42  1828               	xorwf	LIGHTS_BrakeRun@counter^0,w,c
  1985   000B44  A4D8               	btfss	status,2,c
  1986   000B46  D010               	goto	l2044
  1987                           
  1988                           ;lights.c: 15: {;lights.c: 16: IOC_vSetOutputPort(IOC_LSF, IOC_T16GetInputPort(IOC_FRANA
      +                          ));
  1989   000B48  0E01               	movlw	1
  1990   000B4A  6E46               	movwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,c
  1991   000B4C  0E05               	movlw	5
  1992   000B4E  6E45               	movwf	IOC_vSetOutputPort@u16ChannelSelect^0,c
  1993   000B50  0E00               	movlw	0
  1994   000B52  6E40               	movwf	(IOC_T16GetInputPort@u16ChannelSelect+1)^0,c
  1995   000B54  0E00               	movlw	0
  1996   000B56  6E3F               	movwf	IOC_T16GetInputPort@u16ChannelSelect^0,c
  1997   000B58  EC4F  F004         	call	_IOC_T16GetInputPort	;wreg free
  1998   000B5C  503F               	movf	?_IOC_T16GetInputPort^0,w,c
  1999   000B5E  6E47               	movwf	IOC_vSetOutputPort@u8Value^0,c
  2000   000B60  EC32  F005         	call	_IOC_vSetOutputPort	;wreg free
  2001                           
  2002                           ;lights.c: 17: counter = 0;
  2003   000B64  0E00               	movlw	0
  2004   000B66  6E28               	movwf	LIGHTS_BrakeRun@counter^0,c
  2005   000B68                     l2044:
  2006   000B68  FFFF               	dw	65535	; assembler added errata NOP
  2007                           
  2008                           ;lights.c: 18: };lights.c: 19: ++counter;
  2009   000B6A  2A28               	incf	LIGHTS_BrakeRun@counter^0,f,c
  2010   000B6C  0012               	return		;funcret
  2011   000B6E  FFFF               	dw	65535	; errata NOP
  2012   000B70                     __end_of_LIGHTS_BrakeRun:
  2013                           	callstack 0
  2014                           
  2015 ;; *************** function _TASK_vTask10ms *****************
  2016 ;; Defined at:
  2017 ;;		line 22 in file "tasks.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;		None
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;		None
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2035 ;;Total ram usage:        0 bytes
  2036 ;; Hardware stack levels used: 1
  2037 ;; Hardware stack levels required when called: 7
  2038 ;; This function calls:
  2039 ;;		_LIGHTS_HeadLampRun
  2040 ;; This function is called by:
  2041 ;;		_SCHED_vStartScheduler
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           	psect	text18
  2046   000CB6                     __ptext18:
  2047                           	callstack 0
  2048   000CB6                     _TASK_vTask10ms:
  2049                           	callstack 0
  2050   000CB6  FFFF               	dw	65535	; assembler added errata NOP
  2051                           
  2052                           ;tasks.c: 24: LIGHTS_HeadLampRun();
  2053                           
  2054                           ;incstack = 0
  2055   000CB8  EC24  F004         	call	_LIGHTS_HeadLampRun	;wreg free
  2056   000CBC  0012               	return		;funcret
  2057   000CBE  FFFF               	dw	65535	; errata NOP
  2058   000CC0                     __end_of_TASK_vTask10ms:
  2059                           	callstack 0
  2060                           
  2061 ;; *************** function _LIGHTS_HeadLampRun *****************
  2062 ;; Defined at:
  2063 ;;		line 119 in file "lights.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;		None
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;		None
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2081 ;;Total ram usage:        0 bytes
  2082 ;; Hardware stack levels used: 1
  2083 ;; Hardware stack levels required when called: 6
  2084 ;; This function calls:
  2085 ;;		_SGL_HeadLightActiveState
  2086 ;;		_SGL_HeadLightEventPoll
  2087 ;;		_SGL_HeadLightPasiveState
  2088 ;; This function is called by:
  2089 ;;		_TASK_vTask10ms
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           	psect	text19
  2094   000848                     __ptext19:
  2095                           	callstack 0
  2096   000848                     _LIGHTS_HeadLampRun:
  2097                           	callstack 0
  2098   000848  FFFF               	dw	65535	; assembler added errata NOP
  2099                           
  2100                           ;lights.c: 121: if(0 != headLightSM._currentState)
  2101                           
  2102                           ;incstack = 0
  2103   00084A  5001               	movf	_headLightSM^0,w,c
  2104   00084C  1002               	iorwf	(_headLightSM+1)^0,w,c
  2105   00084E  B4D8               	btfsc	status,2,c
  2106   000850  D00E               	goto	u1559
  2107                           
  2108                           ;lights.c: 122: {;lights.c: 123: (*headLightSM._currentState)();
  2109   000852  D801               	call	u1558
  2110   000854  D00C               	goto	u1559
  2111   000856                     u1558:
  2112   000856  FFFF               	dw	65535	; assembler added errata NOP
  2113   000858  0005               	push	
  2114   00085A  6EFA               	movwf	pclath,c
  2115   00085C  5001               	movf	_headLightSM^0,w,c
  2116   00085E  6EFD               	movwf	tosl,c
  2117   000860  5002               	movf	(_headLightSM+1)^0,w,c
  2118   000862  6EFE               	movwf	tosh,c
  2119   000864  50F8               	movf	tblptru,w,c
  2120   000866  6EFF               	movwf	tosu,c
  2121   000868  50FA               	movf	pclath,w,c
  2122   00086A  0012               	return		;indir
  2123   00086C  FFFF               	dw	65535	; errata NOP
  2124   00086E                     u1559:
  2125   00086E  FFFF               	dw	65535	; assembler added errata NOP
  2126                           
  2127                           ;lights.c: 124: };lights.c: 125: if(0 != headLightSM._pollEvents)
  2128   000870  5003               	movf	(_headLightSM+2)^0,w,c
  2129   000872  1004               	iorwf	(_headLightSM+3)^0,w,c
  2130   000874  B4D8               	btfsc	status,2,c
  2131   000876  D010               	goto	u1579
  2132                           
  2133                           ;lights.c: 126: {;lights.c: 127: (*headLightSM._pollEvents)();
  2134   000878  EE20  F003         	lfsr	2,_headLightSM+2
  2135   00087C  D801               	call	u1578
  2136   00087E  D00C               	goto	u1579
  2137   000880                     u1578:
  2138   000880  FFFF               	dw	65535	; assembler added errata NOP
  2139   000882  0005               	push	
  2140   000884  6EFA               	movwf	pclath,c
  2141   000886  50DE               	movf	postinc2,w,c
  2142   000888  6EFD               	movwf	tosl,c
  2143   00088A  50DE               	movf	postinc2,w,c
  2144   00088C  6EFE               	movwf	tosh,c
  2145   00088E  50F8               	movf	tblptru,w,c
  2146   000890  6EFF               	movwf	tosu,c
  2147   000892  50FA               	movf	pclath,w,c
  2148   000894  0012               	return		;indir
  2149   000896  FFFF               	dw	65535	; errata NOP
  2150   000898                     u1579:
  2151   000898  FFFF               	dw	65535	; assembler added errata NOP
  2152   00089A  0012               	return		;funcret
  2153   00089C  FFFF               	dw	65535	; errata NOP
  2154   00089E                     __end_of_LIGHTS_HeadLampRun:
  2155                           	callstack 0
  2156                           
  2157 ;; *************** function _SGL_HeadLightActiveState *****************
  2158 ;; Defined at:
  2159 ;;		line 79 in file "lights.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;		None
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;		None
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  1    wreg      void 
  2166 ;; Registers used:
  2167 ;;		wreg, status,2, status,0, cstack
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2177 ;;Total ram usage:        0 bytes
  2178 ;; Hardware stack levels used: 1
  2179 ;; Hardware stack levels required when called: 4
  2180 ;; This function calls:
  2181 ;;		_IOC_vSetOutputPort
  2182 ;; This function is called by:
  2183 ;;		_SGL_HeadLightPasiveState
  2184 ;;		_LIGHTS_HeadLampRun
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           	psect	text20
  2189   000290                     __ptext20:
  2190                           	callstack 0
  2191   000290                     _SGL_HeadLightActiveState:
  2192                           	callstack 0
  2193   000290  FFFF               	dw	65535	; assembler added errata NOP
  2194                           
  2195                           ;lights.c: 82: if(headLightSM.firstEntry == 1)
  2196                           
  2197                           ;incstack = 0
  2198   000292  0405               	decf	(_headLightSM+4)^0,w,c
  2199   000294  1006               	iorwf	(_headLightSM+5)^0,w,c
  2200   000296  A4D8               	btfss	status,2,c
  2201   000298  D01C               	goto	l1996
  2202                           
  2203                           ;lights.c: 83: {;lights.c: 84: IOC_vSetOutputPort(IOC_LS, 1);
  2204   00029A  0E01               	movlw	1
  2205   00029C  6E46               	movwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,c
  2206   00029E  0E06               	movlw	6
  2207   0002A0  6E45               	movwf	IOC_vSetOutputPort@u16ChannelSelect^0,c
  2208   0002A2  0E01               	movlw	1
  2209   0002A4  6E47               	movwf	IOC_vSetOutputPort@u8Value^0,c
  2210   0002A6  EC32  F005         	call	_IOC_vSetOutputPort	;wreg free
  2211                           
  2212                           ;lights.c: 85: IOC_vSetOutputPort(IOC_FS, 1);
  2213   0002AA  0E01               	movlw	1
  2214   0002AC  6E46               	movwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,c
  2215   0002AE  0E02               	movlw	2
  2216   0002B0  6E45               	movwf	IOC_vSetOutputPort@u16ChannelSelect^0,c
  2217   0002B2  0E01               	movlw	1
  2218   0002B4  6E47               	movwf	IOC_vSetOutputPort@u8Value^0,c
  2219   0002B6  EC32  F005         	call	_IOC_vSetOutputPort	;wreg free
  2220                           
  2221                           ;lights.c: 86: IOC_vSetOutputPort(IOC_FD, 1);
  2222   0002BA  0E01               	movlw	1
  2223   0002BC  6E46               	movwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,c
  2224   0002BE  0E01               	movlw	1
  2225   0002C0  6E45               	movwf	IOC_vSetOutputPort@u16ChannelSelect^0,c
  2226   0002C2  0E01               	movlw	1
  2227   0002C4  6E47               	movwf	IOC_vSetOutputPort@u8Value^0,c
  2228   0002C6  EC32  F005         	call	_IOC_vSetOutputPort	;wreg free
  2229                           
  2230                           ;lights.c: 87: headLightSM.firstEntry = 0;
  2231   0002CA  0E00               	movlw	0
  2232   0002CC  6E06               	movwf	(_headLightSM+5)^0,c
  2233   0002CE  0E00               	movlw	0
  2234   0002D0  6E05               	movwf	(_headLightSM+4)^0,c
  2235   0002D2                     l1996:
  2236   0002D2  FFFF               	dw	65535	; assembler added errata NOP
  2237                           
  2238                           ;lights.c: 88: };lights.c: 93: if(0 == headLightSM.faruri)
  2239   0002D4  5007               	movf	(_headLightSM+6)^0,w,c
  2240   0002D6  A4D8               	btfss	status,2,c
  2241   0002D8  D020               	goto	l365
  2242                           
  2243                           ;lights.c: 94: {;lights.c: 95: headLightSM._currentState = SGL_HeadLightPasiveState;
  2244   0002DA  0E20               	movlw	low _SGL_HeadLightPasiveState
  2245   0002DC  6E01               	movwf	_headLightSM^0,c
  2246   0002DE  0E03               	movlw	high _SGL_HeadLightPasiveState
  2247   0002E0  6E02               	movwf	(_headLightSM+1)^0,c
  2248                           
  2249                           ;lights.c: 96: headLightSM.firstEntry = 1;
  2250   0002E2  0E00               	movlw	0
  2251   0002E4  6E06               	movwf	(_headLightSM+5)^0,c
  2252   0002E6  0E01               	movlw	1
  2253   0002E8  6E05               	movwf	(_headLightSM+4)^0,c
  2254                           
  2255                           ;lights.c: 97: IOC_vSetOutputPort(IOC_LS, 0);
  2256   0002EA  0E01               	movlw	1
  2257   0002EC  6E46               	movwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,c
  2258   0002EE  0E06               	movlw	6
  2259   0002F0  6E45               	movwf	IOC_vSetOutputPort@u16ChannelSelect^0,c
  2260   0002F2  0E00               	movlw	0
  2261   0002F4  6E47               	movwf	IOC_vSetOutputPort@u8Value^0,c
  2262   0002F6  EC32  F005         	call	_IOC_vSetOutputPort	;wreg free
  2263                           
  2264                           ;lights.c: 98: IOC_vSetOutputPort(IOC_FS, 0);
  2265   0002FA  0E01               	movlw	1
  2266   0002FC  6E46               	movwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,c
  2267   0002FE  0E02               	movlw	2
  2268   000300  6E45               	movwf	IOC_vSetOutputPort@u16ChannelSelect^0,c
  2269   000302  0E00               	movlw	0
  2270   000304  6E47               	movwf	IOC_vSetOutputPort@u8Value^0,c
  2271   000306  EC32  F005         	call	_IOC_vSetOutputPort	;wreg free
  2272                           
  2273                           ;lights.c: 99: IOC_vSetOutputPort(IOC_FD, 0);
  2274   00030A  0E01               	movlw	1
  2275   00030C  6E46               	movwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,c
  2276   00030E  0E01               	movlw	1
  2277   000310  6E45               	movwf	IOC_vSetOutputPort@u16ChannelSelect^0,c
  2278   000312  0E00               	movlw	0
  2279   000314  6E47               	movwf	IOC_vSetOutputPort@u8Value^0,c
  2280   000316  EC32  F005         	call	_IOC_vSetOutputPort	;wreg free
  2281   00031A                     l365:
  2282   00031A  FFFF               	dw	65535	; assembler added errata NOP
  2283   00031C  0012               	return		;funcret
  2284   00031E  FFFF               	dw	65535	; errata NOP
  2285   000320                     __end_of_SGL_HeadLightActiveState:
  2286                           	callstack 0
  2287                           
  2288 ;; *************** function _SGL_HeadLightPasiveState *****************
  2289 ;; Defined at:
  2290 ;;		line 50 in file "lights.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;		None
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;		None
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  1    wreg      void 
  2297 ;; Registers used:
  2298 ;;		wreg, status,2, status,0, cstack
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2308 ;;Total ram usage:        0 bytes
  2309 ;; Hardware stack levels used: 1
  2310 ;; Hardware stack levels required when called: 5
  2311 ;; This function calls:
  2312 ;;		_IOC_vSetOutputPort
  2313 ;;		_SGL_isNight
  2314 ;; This function is called by:
  2315 ;;		_SGL_HeadLightActiveState
  2316 ;;		_LIGHTS_HeadLampInit
  2317 ;;		_LIGHTS_HeadLampRun
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           	psect	text21
  2322   000320                     __ptext21:
  2323                           	callstack 0
  2324   000320                     _SGL_HeadLightPasiveState:
  2325                           	callstack 0
  2326   000320  FFFF               	dw	65535	; assembler added errata NOP
  2327                           
  2328                           ;lights.c: 53: if(headLightSM.firstEntry == 1)
  2329                           
  2330                           ;incstack = 0
  2331   000322  0405               	decf	(_headLightSM+4)^0,w,c
  2332   000324  1006               	iorwf	(_headLightSM+5)^0,w,c
  2333   000326  A4D8               	btfss	status,2,c
  2334   000328  D014               	goto	l1976
  2335                           
  2336                           ;lights.c: 54: {;lights.c: 55: IOC_vSetOutputPort(IOC_IFS, 0);
  2337   00032A  0E02               	movlw	2
  2338   00032C  6E46               	movwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,c
  2339   00032E  0E01               	movlw	1
  2340   000330  6E45               	movwf	IOC_vSetOutputPort@u16ChannelSelect^0,c
  2341   000332  0E00               	movlw	0
  2342   000334  6E47               	movwf	IOC_vSetOutputPort@u8Value^0,c
  2343   000336  EC32  F005         	call	_IOC_vSetOutputPort	;wreg free
  2344                           
  2345                           ;lights.c: 56: IOC_vSetOutputPort(IOC_LS, 0);
  2346   00033A  0E01               	movlw	1
  2347   00033C  6E46               	movwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,c
  2348   00033E  0E06               	movlw	6
  2349   000340  6E45               	movwf	IOC_vSetOutputPort@u16ChannelSelect^0,c
  2350   000342  0E00               	movlw	0
  2351   000344  6E47               	movwf	IOC_vSetOutputPort@u8Value^0,c
  2352   000346  EC32  F005         	call	_IOC_vSetOutputPort	;wreg free
  2353                           
  2354                           ;lights.c: 57: headLightSM.firstEntry = 0;
  2355   00034A  0E00               	movlw	0
  2356   00034C  6E06               	movwf	(_headLightSM+5)^0,c
  2357   00034E  0E00               	movlw	0
  2358   000350  6E05               	movwf	(_headLightSM+4)^0,c
  2359   000352                     l1976:
  2360   000352  FFFF               	dw	65535	; assembler added errata NOP
  2361                           
  2362                           ;lights.c: 58: };lights.c: 61: if(SGL_isNight())
  2363   000354  EC1C  F002         	call	_SGL_isNight	;wreg free
  2364   000358  0900               	iorlw	0
  2365   00035A  B4D8               	btfsc	status,2,c
  2366   00035C  D009               	goto	l1980
  2367                           
  2368                           ;lights.c: 62: {;lights.c: 63: IOC_vSetOutputPort(IOC_IFS, 1);
  2369   00035E  0E02               	movlw	2
  2370   000360  6E46               	movwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,c
  2371   000362  0E01               	movlw	1
  2372   000364  6E45               	movwf	IOC_vSetOutputPort@u16ChannelSelect^0,c
  2373   000366  0E01               	movlw	1
  2374   000368  6E47               	movwf	IOC_vSetOutputPort@u8Value^0,c
  2375   00036A  EC32  F005         	call	_IOC_vSetOutputPort	;wreg free
  2376                           
  2377                           ;lights.c: 64: }
  2378   00036E  D009               	goto	l1982
  2379   000370                     l1980:
  2380   000370  FFFF               	dw	65535	; assembler added errata NOP
  2381                           
  2382                           ;lights.c: 65: else;lights.c: 66: {;lights.c: 67: IOC_vSetOutputPort(IOC_IFS, 0);
  2383   000372  0E02               	movlw	2
  2384   000374  6E46               	movwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,c
  2385   000376  0E01               	movlw	1
  2386   000378  6E45               	movwf	IOC_vSetOutputPort@u16ChannelSelect^0,c
  2387   00037A  0E00               	movlw	0
  2388   00037C  6E47               	movwf	IOC_vSetOutputPort@u8Value^0,c
  2389   00037E  EC32  F005         	call	_IOC_vSetOutputPort	;wreg free
  2390   000382                     l1982:
  2391   000382  FFFF               	dw	65535	; assembler added errata NOP
  2392                           
  2393                           ;lights.c: 68: };lights.c: 71: if(1 == headLightSM.faruri)
  2394   000384  0407               	decf	(_headLightSM+6)^0,w,c
  2395   000386  A4D8               	btfss	status,2,c
  2396   000388  D010               	goto	l360
  2397                           
  2398                           ;lights.c: 72: {;lights.c: 73: headLightSM.firstEntry = 1;
  2399   00038A  0E00               	movlw	0
  2400   00038C  6E06               	movwf	(_headLightSM+5)^0,c
  2401   00038E  0E01               	movlw	1
  2402   000390  6E05               	movwf	(_headLightSM+4)^0,c
  2403                           
  2404                           ;lights.c: 74: headLightSM._currentState = SGL_HeadLightActiveState;
  2405   000392  0E90               	movlw	low _SGL_HeadLightActiveState
  2406   000394  6E01               	movwf	_headLightSM^0,c
  2407   000396  0E02               	movlw	high _SGL_HeadLightActiveState
  2408   000398  6E02               	movwf	(_headLightSM+1)^0,c
  2409                           
  2410                           ;lights.c: 75: IOC_vSetOutputPort(IOC_IFS, 0);
  2411   00039A  0E02               	movlw	2
  2412   00039C  6E46               	movwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,c
  2413   00039E  0E01               	movlw	1
  2414   0003A0  6E45               	movwf	IOC_vSetOutputPort@u16ChannelSelect^0,c
  2415   0003A2  0E00               	movlw	0
  2416   0003A4  6E47               	movwf	IOC_vSetOutputPort@u8Value^0,c
  2417   0003A6  EC32  F005         	call	_IOC_vSetOutputPort	;wreg free
  2418   0003AA                     l360:
  2419   0003AA  FFFF               	dw	65535	; assembler added errata NOP
  2420   0003AC  0012               	return		;funcret
  2421   0003AE  FFFF               	dw	65535	; errata NOP
  2422   0003B0                     __end_of_SGL_HeadLightPasiveState:
  2423                           	callstack 0
  2424                           
  2425 ;; *************** function _SGL_isNight *****************
  2426 ;; Defined at:
  2427 ;;		line 30 in file "lights.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;		None
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  currentLight    2   27[COMRAM] unsigned int 
  2432 ;; Return value:  Size  Location     Type
  2433 ;;                  1    wreg      unsigned char 
  2434 ;; Registers used:
  2435 ;;		wreg, status,2, status,0, cstack
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2442 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2444 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2445 ;;Total ram usage:        2 bytes
  2446 ;; Hardware stack levels used: 1
  2447 ;; Hardware stack levels required when called: 4
  2448 ;; This function calls:
  2449 ;;		___ftge
  2450 ;;		___lwtoft
  2451 ;; This function is called by:
  2452 ;;		_SGL_HeadLightPasiveState
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           	psect	text22
  2457   000438                     __ptext22:
  2458                           	callstack 0
  2459   000438                     _SGL_isNight:
  2460                           	callstack 0
  2461   000438  FFFF               	dw	65535	; assembler added errata NOP
  2462                           
  2463                           ;lights.c: 32: static T_U8 prevState = 0;;lights.c: 33: T_U16 currentLightLevel = headLi
      +                          ghtSM.lightLevel;
  2464                           
  2465                           ;incstack = 0
  2466   00043A  C008  F049         	movff	_headLightSM+7,SGL_isNight@currentLightLevel
  2467   00043E  C009  F04A         	movff	_headLightSM+8,SGL_isNight@currentLightLevel+1
  2468                           
  2469                           ;lights.c: 35: if(prevState == 0 && currentLightLevel < (2.2*204))
  2470   000442  5027               	movf	SGL_isNight@prevState^0,w,c
  2471   000444  A4D8               	btfss	status,2,c
  2472   000446  D01B               	goto	l1836
  2473   000448  C049  F03D         	movff	SGL_isNight@currentLightLevel,___lwtoft@c
  2474   00044C  C04A  F03E         	movff	SGL_isNight@currentLightLevel+1,___lwtoft@c+1
  2475   000450  ECF7  F005         	call	___lwtoft	;wreg free
  2476   000454  C03D  F040         	movff	?___lwtoft,___ftge@ff1
  2477   000458  C03E  F041         	movff	?___lwtoft+1,___ftge@ff1+1
  2478   00045C  C03F  F042         	movff	?___lwtoft+2,___ftge@ff1+2
  2479   000460  0E66               	movlw	102
  2480   000462  6E43               	movwf	___ftge@ff2^0,c
  2481   000464  0EE0               	movlw	224
  2482   000466  6E44               	movwf	(___ftge@ff2+1)^0,c
  2483   000468  0E43               	movlw	67
  2484   00046A  6E45               	movwf	(___ftge@ff2+2)^0,c
  2485   00046C  EC60  F002         	call	___ftge	;wreg free
  2486   000470  B0D8               	btfsc	status,0,c
  2487   000472  D005               	goto	l1836
  2488                           
  2489                           ;lights.c: 36: {;lights.c: 37: prevState = 1;
  2490   000474  0E01               	movlw	1
  2491   000476  FFFF               	dw	65535	; assembler added errata NOP
  2492   000478  6E27               	movwf	SGL_isNight@prevState^0,c
  2493                           
  2494                           ;lights.c: 38: return 1;
  2495   00047A  0E01               	movlw	1
  2496   00047C  D01E               	goto	l352
  2497   00047E                     l1836:
  2498   00047E  FFFF               	dw	65535	; assembler added errata NOP
  2499                           
  2500                           ;lights.c: 39: };lights.c: 41: if(prevState == 1 && currentLightLevel > (2.4*204))
  2501   000480  0427               	decf	SGL_isNight@prevState^0,w,c
  2502   000482  A4D8               	btfss	status,2,c
  2503   000484  D018               	goto	l1846
  2504   000486  0ECD               	movlw	205
  2505   000488  6E40               	movwf	___ftge@ff1^0,c
  2506   00048A  0EF4               	movlw	244
  2507   00048C  6E41               	movwf	(___ftge@ff1+1)^0,c
  2508   00048E  0E43               	movlw	67
  2509   000490  6E42               	movwf	(___ftge@ff1+2)^0,c
  2510   000492  C049  F03D         	movff	SGL_isNight@currentLightLevel,___lwtoft@c
  2511   000496  C04A  F03E         	movff	SGL_isNight@currentLightLevel+1,___lwtoft@c+1
  2512   00049A  ECF7  F005         	call	___lwtoft	;wreg free
  2513   00049E  C03D  F043         	movff	?___lwtoft,___ftge@ff2
  2514   0004A2  C03E  F044         	movff	?___lwtoft+1,___ftge@ff2+1
  2515   0004A6  C03F  F045         	movff	?___lwtoft+2,___ftge@ff2+2
  2516   0004AA  EC60  F002         	call	___ftge	;wreg free
  2517   0004AE  B0D8               	btfsc	status,0,c
  2518   0004B0  D002               	goto	l1846
  2519                           
  2520                           ;lights.c: 42: {;lights.c: 43: prevState = 0;
  2521   0004B2  0E00               	movlw	0
  2522   0004B4  D7E0               	goto	L2
  2523   0004B6                     l1846:
  2524   0004B6  FFFF               	dw	65535	; assembler added errata NOP
  2525                           
  2526                           ;lights.c: 45: };lights.c: 47: return prevState;
  2527   0004B8  5027               	movf	SGL_isNight@prevState^0,w,c
  2528   0004BA                     l352:
  2529   0004BA  FFFF               	dw	65535	; assembler added errata NOP
  2530   0004BC  0012               	return		;funcret
  2531   0004BE  FFFF               	dw	65535	; errata NOP
  2532   0004C0                     __end_of_SGL_isNight:
  2533                           	callstack 0
  2534                           
  2535 ;; *************** function ___lwtoft *****************
  2536 ;; Defined at:
  2537 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwtoft.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;  c               2   15[COMRAM] unsigned int 
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;		None
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  3   15[COMRAM] float 
  2544 ;; Registers used:
  2545 ;;		wreg, status,2, status,0, cstack
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2551 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2554 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2555 ;;Total ram usage:        3 bytes
  2556 ;; Hardware stack levels used: 1
  2557 ;; Hardware stack levels required when called: 3
  2558 ;; This function calls:
  2559 ;;		___ftpack
  2560 ;; This function is called by:
  2561 ;;		_SGL_isNight
  2562 ;; This function uses a non-reentrant model
  2563 ;;
  2564                           
  2565                           	psect	text23
  2566   000BEE                     __ptext23:
  2567                           	callstack 0
  2568   000BEE                     ___lwtoft:
  2569                           	callstack 0
  2570   000BEE  FFFF               	dw	65535	; assembler added errata NOP
  2571                           
  2572                           ;incstack = 0
  2573   000BF0  C03D  F035         	movff	___lwtoft@c,___ftpack@arg
  2574   000BF4  C03E  F036         	movff	___lwtoft@c+1,___ftpack@arg+1
  2575   000BF8  6A37               	clrf	(___ftpack@arg+2)^0,c
  2576   000BFA  0E8E               	movlw	142
  2577   000BFC  6E38               	movwf	___ftpack@exp^0,c
  2578   000BFE  0E00               	movlw	0
  2579   000C00  6E39               	movwf	___ftpack@sign^0,c
  2580   000C02  EC8D  F000         	call	___ftpack	;wreg free
  2581   000C06  C035  F03D         	movff	?___ftpack,?___lwtoft
  2582   000C0A  C036  F03E         	movff	?___ftpack+1,?___lwtoft+1
  2583   000C0E  C037  F03F         	movff	?___ftpack+2,?___lwtoft+2
  2584   000C12  0012               	return		;funcret
  2585   000C14  FFFF               	dw	65535	; errata NOP
  2586   000C16                     __end_of___lwtoft:
  2587                           	callstack 0
  2588                           
  2589 ;; *************** function ___ftpack *****************
  2590 ;; Defined at:
  2591 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\float.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;  arg             3    7[COMRAM] unsigned um
  2594 ;;  exp             1   10[COMRAM] unsigned char 
  2595 ;;  sign            1   11[COMRAM] unsigned char 
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;		None
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  3    7[COMRAM] float 
  2600 ;; Registers used:
  2601 ;;		wreg, status,2, status,0
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2607 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2609 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2610 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2611 ;;Total ram usage:        8 bytes
  2612 ;; Hardware stack levels used: 1
  2613 ;; Hardware stack levels required when called: 2
  2614 ;; This function calls:
  2615 ;;		Nothing
  2616 ;; This function is called by:
  2617 ;;		___lwtoft
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           	psect	text24
  2622   00011A                     __ptext24:
  2623                           	callstack 0
  2624   00011A                     ___ftpack:
  2625                           	callstack 0
  2626   00011A  FFFF               	dw	65535	; assembler added errata NOP
  2627                           
  2628                           ;incstack = 0
  2629   00011C  5038               	movf	___ftpack@exp^0,w,c
  2630   00011E  B4D8               	btfsc	status,2,c
  2631   000120  D005               	goto	u1020
  2632   000122  5035               	movf	___ftpack@arg^0,w,c
  2633   000124  1036               	iorwf	(___ftpack@arg+1)^0,w,c
  2634   000126  1037               	iorwf	(___ftpack@arg+2)^0,w,c
  2635   000128  A4D8               	btfss	status,2,c
  2636   00012A  D00E               	goto	l1716
  2637   00012C                     u1020:
  2638   00012C  FFFF               	dw	65535	; assembler added errata NOP
  2639   00012E  0E00               	movlw	0
  2640   000130  6E35               	movwf	?___ftpack^0,c
  2641   000132  0E00               	movlw	0
  2642   000134  6E36               	movwf	(?___ftpack+1)^0,c
  2643   000136  0E00               	movlw	0
  2644   000138  6E37               	movwf	(?___ftpack+2)^0,c
  2645   00013A  D04E               	goto	l651
  2646   00013C                     l1714:
  2647   00013C  FFFF               	dw	65535	; assembler added errata NOP
  2648   00013E  2A38               	incf	___ftpack@exp^0,f,c
  2649   000140  90D8               	bcf	status,0,c
  2650   000142  3237               	rrcf	(___ftpack@arg+2)^0,f,c
  2651   000144  3236               	rrcf	(___ftpack@arg+1)^0,f,c
  2652   000146  3235               	rrcf	___ftpack@arg^0,f,c
  2653   000148                     l1716:
  2654   000148  FFFF               	dw	65535	; assembler added errata NOP
  2655   00014A  0E00               	movlw	0
  2656   00014C  1435               	andwf	___ftpack@arg^0,w,c
  2657   00014E  6E3A               	movwf	??___ftpack^0,c
  2658   000150  0E00               	movlw	0
  2659   000152  1436               	andwf	(___ftpack@arg+1)^0,w,c
  2660   000154  6E3B               	movwf	(??___ftpack+1)^0,c
  2661   000156  0EFE               	movlw	254
  2662   000158  1437               	andwf	(___ftpack@arg+2)^0,w,c
  2663   00015A  6E3C               	movwf	(??___ftpack+2)^0,c
  2664   00015C  503A               	movf	??___ftpack^0,w,c
  2665   00015E  103B               	iorwf	(??___ftpack+1)^0,w,c
  2666   000160  103C               	iorwf	(??___ftpack+2)^0,w,c
  2667   000162  B4D8               	btfsc	status,2,c
  2668   000164  D00D               	goto	l1722
  2669   000166  D7EA               	goto	l1714
  2670   000168                     l1718:
  2671   000168  FFFF               	dw	65535	; assembler added errata NOP
  2672   00016A  2A38               	incf	___ftpack@exp^0,f,c
  2673   00016C  0E01               	movlw	1
  2674   00016E  2635               	addwf	___ftpack@arg^0,f,c
  2675   000170  0E00               	movlw	0
  2676   000172  2236               	addwfc	(___ftpack@arg+1)^0,f,c
  2677   000174  0E00               	movlw	0
  2678   000176  2237               	addwfc	(___ftpack@arg+2)^0,f,c
  2679   000178  90D8               	bcf	status,0,c
  2680   00017A  3237               	rrcf	(___ftpack@arg+2)^0,f,c
  2681   00017C  3236               	rrcf	(___ftpack@arg+1)^0,f,c
  2682   00017E  3235               	rrcf	___ftpack@arg^0,f,c
  2683   000180                     l1722:
  2684   000180  FFFF               	dw	65535	; assembler added errata NOP
  2685   000182  0E00               	movlw	0
  2686   000184  1435               	andwf	___ftpack@arg^0,w,c
  2687   000186  6E3A               	movwf	??___ftpack^0,c
  2688   000188  0E00               	movlw	0
  2689   00018A  1436               	andwf	(___ftpack@arg+1)^0,w,c
  2690   00018C  6E3B               	movwf	(??___ftpack+1)^0,c
  2691   00018E  0EFF               	movlw	255
  2692   000190  1437               	andwf	(___ftpack@arg+2)^0,w,c
  2693   000192  6E3C               	movwf	(??___ftpack+2)^0,c
  2694   000194  503A               	movf	??___ftpack^0,w,c
  2695   000196  103B               	iorwf	(??___ftpack+1)^0,w,c
  2696   000198  103C               	iorwf	(??___ftpack+2)^0,w,c
  2697   00019A  B4D8               	btfsc	status,2,c
  2698   00019C  D007               	goto	l1726
  2699   00019E  D7E4               	goto	l1718
  2700   0001A0                     l1724:
  2701   0001A0  FFFF               	dw	65535	; assembler added errata NOP
  2702   0001A2  0638               	decf	___ftpack@exp^0,f,c
  2703   0001A4  90D8               	bcf	status,0,c
  2704   0001A6  3635               	rlcf	___ftpack@arg^0,f,c
  2705   0001A8  3636               	rlcf	(___ftpack@arg+1)^0,f,c
  2706   0001AA  3637               	rlcf	(___ftpack@arg+2)^0,f,c
  2707   0001AC                     l1726:
  2708   0001AC  FFFF               	dw	65535	; assembler added errata NOP
  2709   0001AE  BE36               	btfsc	(___ftpack@arg+1)^0,7,c
  2710   0001B0  D003               	goto	u1060
  2711   0001B2  0E02               	movlw	2
  2712   0001B4  6038               	cpfslt	___ftpack@exp^0,c
  2713   0001B6  D7F4               	goto	l1724
  2714   0001B8                     u1060:
  2715   0001B8  FFFF               	dw	65535	; assembler added errata NOP
  2716   0001BA  A038               	btfss	___ftpack@exp^0,0,c
  2717   0001BC  9E36               	bcf	(___ftpack@arg+1)^0,7,c
  2718   0001BE  90D8               	bcf	status,0,c
  2719   0001C0  3238               	rrcf	___ftpack@exp^0,f,c
  2720   0001C2  5038               	movf	___ftpack@exp^0,w,c
  2721   0001C4  1237               	iorwf	(___ftpack@arg+2)^0,f,c
  2722   0001C6  5039               	movf	___ftpack@sign^0,w,c
  2723   0001C8  A4D8               	btfss	status,2,c
  2724   0001CA  8E37               	bsf	(___ftpack@arg+2)^0,7,c
  2725   0001CC  C035  F035         	movff	___ftpack@arg,?___ftpack
  2726   0001D0  C036  F036         	movff	___ftpack@arg+1,?___ftpack+1
  2727   0001D4  C037  F037         	movff	___ftpack@arg+2,?___ftpack+2
  2728   0001D8                     l651:
  2729   0001D8  FFFF               	dw	65535	; assembler added errata NOP
  2730   0001DA  0012               	return		;funcret
  2731   0001DC  FFFF               	dw	65535	; errata NOP
  2732   0001DE                     __end_of___ftpack:
  2733                           	callstack 0
  2734                           
  2735 ;; *************** function ___ftge *****************
  2736 ;; Defined at:
  2737 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftge.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;  ff1             3   18[COMRAM] float 
  2740 ;;  ff2             3   21[COMRAM] float 
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;		None
  2743 ;; Return value:  Size  Location     Type
  2744 ;;		None               void
  2745 ;; Registers used:
  2746 ;;		wreg, status,2, status,0
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2752 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2754 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2755 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2756 ;;Total ram usage:        9 bytes
  2757 ;; Hardware stack levels used: 1
  2758 ;; Hardware stack levels required when called: 2
  2759 ;; This function calls:
  2760 ;;		Nothing
  2761 ;; This function is called by:
  2762 ;;		_SGL_isNight
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           	psect	text25
  2767   0004C0                     __ptext25:
  2768                           	callstack 0
  2769   0004C0                     ___ftge:
  2770                           	callstack 0
  2771   0004C0  FFFF               	dw	65535	; assembler added errata NOP
  2772                           
  2773                           ;incstack = 0
  2774   0004C2  AE42               	btfss	(___ftge@ff1+2)^0,7,c
  2775   0004C4  D00F               	goto	l1770
  2776   0004C6  0E00               	movlw	0
  2777   0004C8  6E46               	movwf	??___ftge^0,c
  2778   0004CA  0E00               	movlw	0
  2779   0004CC  6E47               	movwf	(??___ftge+1)^0,c
  2780   0004CE  0E80               	movlw	128
  2781   0004D0  6E48               	movwf	(??___ftge+2)^0,c
  2782   0004D2  5040               	movf	___ftge@ff1^0,w,c
  2783   0004D4  5C46               	subwf	??___ftge^0,w,c
  2784   0004D6  6E40               	movwf	___ftge@ff1^0,c
  2785   0004D8  5041               	movf	(___ftge@ff1+1)^0,w,c
  2786   0004DA  5847               	subwfb	(??___ftge+1)^0,w,c
  2787   0004DC  6E41               	movwf	(___ftge@ff1+1)^0,c
  2788   0004DE  5042               	movf	(___ftge@ff1+2)^0,w,c
  2789   0004E0  5848               	subwfb	(??___ftge+2)^0,w,c
  2790   0004E2  6E42               	movwf	(___ftge@ff1+2)^0,c
  2791   0004E4                     l1770:
  2792   0004E4  FFFF               	dw	65535	; assembler added errata NOP
  2793   0004E6  AE45               	btfss	(___ftge@ff2+2)^0,7,c
  2794   0004E8  D00F               	goto	l1774
  2795   0004EA  0E00               	movlw	0
  2796   0004EC  6E46               	movwf	??___ftge^0,c
  2797   0004EE  0E00               	movlw	0
  2798   0004F0  6E47               	movwf	(??___ftge+1)^0,c
  2799   0004F2  0E80               	movlw	128
  2800   0004F4  6E48               	movwf	(??___ftge+2)^0,c
  2801   0004F6  5043               	movf	___ftge@ff2^0,w,c
  2802   0004F8  5C46               	subwf	??___ftge^0,w,c
  2803   0004FA  6E43               	movwf	___ftge@ff2^0,c
  2804   0004FC  5044               	movf	(___ftge@ff2+1)^0,w,c
  2805   0004FE  5847               	subwfb	(??___ftge+1)^0,w,c
  2806   000500  6E44               	movwf	(___ftge@ff2+1)^0,c
  2807   000502  5045               	movf	(___ftge@ff2+2)^0,w,c
  2808   000504  5848               	subwfb	(??___ftge+2)^0,w,c
  2809   000506  6E45               	movwf	(___ftge@ff2+2)^0,c
  2810   000508                     l1774:
  2811   000508  FFFF               	dw	65535	; assembler added errata NOP
  2812   00050A  0E00               	movlw	0
  2813   00050C  1A40               	xorwf	___ftge@ff1^0,f,c
  2814   00050E  0E00               	movlw	0
  2815   000510  1A41               	xorwf	(___ftge@ff1+1)^0,f,c
  2816   000512  0E80               	movlw	128
  2817   000514  1A42               	xorwf	(___ftge@ff1+2)^0,f,c
  2818   000516  0E00               	movlw	0
  2819   000518  1A43               	xorwf	___ftge@ff2^0,f,c
  2820   00051A  0E00               	movlw	0
  2821   00051C  1A44               	xorwf	(___ftge@ff2+1)^0,f,c
  2822   00051E  0E80               	movlw	128
  2823   000520  1A45               	xorwf	(___ftge@ff2+2)^0,f,c
  2824   000522  5043               	movf	___ftge@ff2^0,w,c
  2825   000524  5C40               	subwf	___ftge@ff1^0,w,c
  2826   000526  5044               	movf	(___ftge@ff2+1)^0,w,c
  2827   000528  5841               	subwfb	(___ftge@ff1+1)^0,w,c
  2828   00052A  5045               	movf	(___ftge@ff2+2)^0,w,c
  2829   00052C  5842               	subwfb	(___ftge@ff1+2)^0,w,c
  2830   00052E  B0D8               	btfsc	status,0,c
  2831   000530  D002               	goto	l1780
  2832   000532  90D8               	bcf	status,0,c
  2833   000534  D002               	goto	l726
  2834   000536                     l1780:
  2835   000536  FFFF               	dw	65535	; assembler added errata NOP
  2836   000538  80D8               	bsf	status,0,c
  2837   00053A                     l726:
  2838   00053A  FFFF               	dw	65535	; assembler added errata NOP
  2839   00053C  0012               	return		;funcret
  2840   00053E  FFFF               	dw	65535	; errata NOP
  2841   000540                     __end_of___ftge:
  2842                           	callstack 0
  2843                           
  2844 ;; *************** function _SGL_HeadLightEventPoll *****************
  2845 ;; Defined at:
  2846 ;;		line 104 in file "lights.c"
  2847 ;; Parameters:    Size  Location     Type
  2848 ;;		None
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;		None
  2851 ;; Return value:  Size  Location     Type
  2852 ;;                  1    wreg      void 
  2853 ;; Registers used:
  2854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2864 ;;Total ram usage:        0 bytes
  2865 ;; Hardware stack levels used: 1
  2866 ;; Hardware stack levels required when called: 4
  2867 ;; This function calls:
  2868 ;;		_IOC_T16GetInputPort
  2869 ;; This function is called by:
  2870 ;;		_LIGHTS_HeadLampInit
  2871 ;;		_LIGHTS_HeadLampRun
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           	psect	text26
  2876   000BC4                     __ptext26:
  2877                           	callstack 0
  2878   000BC4                     _SGL_HeadLightEventPoll:
  2879                           	callstack 0
  2880   000BC4  FFFF               	dw	65535	; assembler added errata NOP
  2881                           
  2882                           ;lights.c: 106: headLightSM.faruri = IOC_T16GetInputPort(IOC_FARURI);
  2883                           
  2884                           ;incstack = 0
  2885   000BC6  0E00               	movlw	0
  2886   000BC8  6E40               	movwf	(IOC_T16GetInputPort@u16ChannelSelect+1)^0,c
  2887   000BCA  0E01               	movlw	1
  2888   000BCC  6E3F               	movwf	IOC_T16GetInputPort@u16ChannelSelect^0,c
  2889   000BCE  EC4F  F004         	call	_IOC_T16GetInputPort	;wreg free
  2890   000BD2  503F               	movf	?_IOC_T16GetInputPort^0,w,c
  2891   000BD4  6E07               	movwf	(_headLightSM+6)^0,c
  2892                           
  2893                           ;lights.c: 107: headLightSM.lightLevel = IOC_T16GetInputPort(IOC_ADC0);
  2894   000BD6  0E03               	movlw	3
  2895   000BD8  6E40               	movwf	(IOC_T16GetInputPort@u16ChannelSelect+1)^0,c
  2896   000BDA  0E00               	movlw	0
  2897   000BDC  6E3F               	movwf	IOC_T16GetInputPort@u16ChannelSelect^0,c
  2898   000BDE  EC4F  F004         	call	_IOC_T16GetInputPort	;wreg free
  2899   000BE2  C03F  F008         	movff	?_IOC_T16GetInputPort,_headLightSM+7
  2900   000BE6  C040  F009         	movff	?_IOC_T16GetInputPort+1,_headLightSM+8
  2901   000BEA  0012               	return		;funcret
  2902   000BEC  FFFF               	dw	65535	; errata NOP
  2903   000BEE                     __end_of_SGL_HeadLightEventPoll:
  2904                           	callstack 0
  2905                           
  2906 ;; *************** function _IOC_T16GetInputPort *****************
  2907 ;; Defined at:
  2908 ;;		line 19 in file "ioc.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;  u16ChannelSe    2   17[COMRAM] const enum E10339
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;  u16ChannelMa    2   21[COMRAM] unsigned int 
  2913 ;;  pinValue        2   19[COMRAM] unsigned int 
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  2   17[COMRAM] unsigned int 
  2916 ;; Registers used:
  2917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2923 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2924 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2926 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2927 ;;Total ram usage:        6 bytes
  2928 ;; Hardware stack levels used: 1
  2929 ;; Hardware stack levels required when called: 3
  2930 ;; This function calls:
  2931 ;;		_ADC_u16ReadAdcValue
  2932 ;;		_PCS_T16GetInputPortC
  2933 ;; This function is called by:
  2934 ;;		_SGL_BlinkEventPoll
  2935 ;;		_LIGHTS_BrakeRun
  2936 ;;		_SGL_HeadLightEventPoll
  2937 ;;		_LIGHTS_DemoEventPoll
  2938 ;; This function uses a non-reentrant model
  2939 ;;
  2940                           
  2941                           	psect	text27
  2942   00089E                     __ptext27:
  2943                           	callstack 0
  2944   00089E                     _IOC_T16GetInputPort:
  2945                           	callstack 0
  2946   00089E  FFFF               	dw	65535	; assembler added errata NOP
  2947                           
  2948                           ;ioc.c: 21: T_U16 pinValue = 0;
  2949                           
  2950                           ;incstack = 0
  2951   0008A0  0E00               	movlw	0
  2952   0008A2  6E42               	movwf	(IOC_T16GetInputPort@pinValue+1)^0,c
  2953   0008A4  0E00               	movlw	0
  2954   0008A6  6E41               	movwf	IOC_T16GetInputPort@pinValue^0,c
  2955                           
  2956                           ;ioc.c: 22: T_U16 u16ChannelMask = (u16ChannelSelect&0xFF00);
  2957   0008A8  0E00               	movlw	0
  2958   0008AA  143F               	andwf	IOC_T16GetInputPort@u16ChannelSelect^0,w,c
  2959   0008AC  6E43               	movwf	IOC_T16GetInputPort@u16ChannelMask^0,c
  2960   0008AE  0EFF               	movlw	255
  2961   0008B0  1440               	andwf	(IOC_T16GetInputPort@u16ChannelSelect+1)^0,w,c
  2962   0008B2  6E44               	movwf	(IOC_T16GetInputPort@u16ChannelMask+1)^0,c
  2963                           
  2964                           ;ioc.c: 24: if(u16ChannelMask == IOC_PORTC)
  2965   0008B4  5043               	movf	IOC_T16GetInputPort@u16ChannelMask^0,w,c
  2966   0008B6  1044               	iorwf	(IOC_T16GetInputPort@u16ChannelMask+1)^0,w,c
  2967   0008B8  A4D8               	btfss	status,2,c
  2968   0008BA  D008               	goto	l1796
  2969                           
  2970                           ;ioc.c: 25: {;ioc.c: 26: pinValue = PCS_T16GetInputPortC(u16ChannelSelect);
  2971   0008BC  503F               	movf	IOC_T16GetInputPort@u16ChannelSelect^0,w,c
  2972   0008BE  ECCA  F003         	call	_PCS_T16GetInputPortC
  2973   0008C2  C035  F041         	movff	?_PCS_T16GetInputPortC,IOC_T16GetInputPort@pinValue
  2974   0008C6  C036  F042         	movff	?_PCS_T16GetInputPortC+1,IOC_T16GetInputPort@pinValue+1
  2975                           
  2976                           ;ioc.c: 27: }
  2977   0008CA  D00D               	goto	l1800
  2978   0008CC                     l1796:
  2979   0008CC  FFFF               	dw	65535	; assembler added errata NOP
  2980                           
  2981                           ;ioc.c: 28: else if(u16ChannelMask == IOC_PORTA)
  2982   0008CE  0E03               	movlw	3
  2983   0008D0  1844               	xorwf	(IOC_T16GetInputPort@u16ChannelMask+1)^0,w,c
  2984   0008D2  1043               	iorwf	IOC_T16GetInputPort@u16ChannelMask^0,w,c
  2985   0008D4  A4D8               	btfss	status,2,c
  2986   0008D6  D007               	goto	l1800
  2987                           
  2988                           ;ioc.c: 29: {;ioc.c: 30: pinValue = ADC_u16ReadAdcValue(u16ChannelSelect);
  2989   0008D8  503F               	movf	IOC_T16GetInputPort@u16ChannelSelect^0,w,c
  2990   0008DA  EC13  F005         	call	_ADC_u16ReadAdcValue
  2991   0008DE  C035  F041         	movff	?_ADC_u16ReadAdcValue,IOC_T16GetInputPort@pinValue
  2992   0008E2  C036  F042         	movff	?_ADC_u16ReadAdcValue+1,IOC_T16GetInputPort@pinValue+1
  2993   0008E6                     l1800:
  2994   0008E6  FFFF               	dw	65535	; assembler added errata NOP
  2995                           
  2996                           ;ioc.c: 31: };ioc.c: 33: return pinValue;
  2997   0008E8  C041  F03F         	movff	IOC_T16GetInputPort@pinValue,?_IOC_T16GetInputPort
  2998   0008EC  C042  F040         	movff	IOC_T16GetInputPort@pinValue+1,?_IOC_T16GetInputPort+1
  2999   0008F0  0012               	return		;funcret
  3000   0008F2  FFFF               	dw	65535	; errata NOP
  3001   0008F4                     __end_of_IOC_T16GetInputPort:
  3002                           	callstack 0
  3003                           
  3004 ;; *************** function _PCS_T16GetInputPortC *****************
  3005 ;; Defined at:
  3006 ;;		line 50 in file "pcs.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;  u8BitNumber     1    wreg     const unsigned char 
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;  u8BitNumber     1   15[COMRAM] const unsigned char 
  3011 ;;  u8BitNumberV    1   16[COMRAM] unsigned char 
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  2    7[COMRAM] unsigned int 
  3014 ;; Registers used:
  3015 ;;		wreg, status,2, status,0
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3021 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3022 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3023 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3024 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3025 ;;Total ram usage:       10 bytes
  3026 ;; Hardware stack levels used: 1
  3027 ;; Hardware stack levels required when called: 2
  3028 ;; This function calls:
  3029 ;;		Nothing
  3030 ;; This function is called by:
  3031 ;;		_IOC_T16GetInputPort
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           	psect	text28
  3036   000794                     __ptext28:
  3037                           	callstack 0
  3038   000794                     _PCS_T16GetInputPortC:
  3039                           	callstack 0
  3040   000794  FFFF               	dw	65535	; assembler added errata NOP
  3041                           
  3042                           ;incstack = 0
  3043                           ;PCS_T16GetInputPortC@u8BitNumber stored from wreg
  3044   000796  6E3D               	movwf	PCS_T16GetInputPortC@u8BitNumber^0,c
  3045                           
  3046                           ;pcs.c: 52: T_U8 u8BitNumberValue = u8BitNumber<=4 ? u8BitNumber : 4;
  3047   000798  0E04               	movlw	4
  3048   00079A  643D               	cpfsgt	PCS_T16GetInputPortC@u8BitNumber^0,c
  3049   00079C  D005               	goto	l127
  3050   00079E  0E00               	movlw	0
  3051   0007A0  6E3C               	movwf	(_PCS_T16GetInputPortC$716+1)^0,c
  3052   0007A2  0E04               	movlw	4
  3053   0007A4  6E3B               	movwf	_PCS_T16GetInputPortC$716^0,c
  3054   0007A6  D004               	goto	l129
  3055   0007A8                     l127:
  3056   0007A8  FFFF               	dw	65535	; assembler added errata NOP
  3057   0007AA  C03D  F03B         	movff	PCS_T16GetInputPortC@u8BitNumber,_PCS_T16GetInputPortC$716
  3058   0007AE  6A3C               	clrf	(_PCS_T16GetInputPortC$716+1)^0,c
  3059   0007B0                     l129:
  3060   0007B0  FFFF               	dw	65535	; assembler added errata NOP
  3061   0007B2  C03B  F03E         	movff	_PCS_T16GetInputPortC$716,PCS_T16GetInputPortC@u8BitNumberValue
  3062                           
  3063                           ;pcs.c: 53: return (PORTC & 0x01<<u8BitNumberValue)>>u8BitNumberValue;
  3064   0007B6  C03E  F037         	movff	PCS_T16GetInputPortC@u8BitNumberValue,??_PCS_T16GetInputPortC
  3065   0007BA  C03E  F038         	movff	PCS_T16GetInputPortC@u8BitNumberValue,??_PCS_T16GetInputPortC+1
  3066   0007BE  0E01               	movlw	1
  3067   0007C0  6E39               	movwf	(??_PCS_T16GetInputPortC+2)^0,c
  3068   0007C2  2A38               	incf	(??_PCS_T16GetInputPortC+1)^0,f,c
  3069   0007C4  D003               	goto	u1134
  3070   0007C6                     u1135:
  3071   0007C6  FFFF               	dw	65535	; assembler added errata NOP
  3072   0007C8  90D8               	bcf	status,0,c
  3073   0007CA  3639               	rlcf	(??_PCS_T16GetInputPortC+2)^0,f,c
  3074   0007CC                     u1134:
  3075   0007CC  FFFF               	dw	65535	; assembler added errata NOP
  3076   0007CE  2E38               	decfsz	(??_PCS_T16GetInputPortC+1)^0,f,c
  3077   0007D0  D7FA               	goto	u1135
  3078   0007D2  5039               	movf	(??_PCS_T16GetInputPortC+2)^0,w,c
  3079   0007D4  1482               	andwf	130,w,c	;volatile
  3080   0007D6  6E3A               	movwf	(??_PCS_T16GetInputPortC+3)^0,c
  3081   0007D8  2A37               	incf	??_PCS_T16GetInputPortC^0,f,c
  3082   0007DA  D003               	goto	u1144
  3083   0007DC                     u1145:
  3084   0007DC  FFFF               	dw	65535	; assembler added errata NOP
  3085   0007DE  90D8               	bcf	status,0,c
  3086   0007E0  323A               	rrcf	(??_PCS_T16GetInputPortC+3)^0,f,c
  3087   0007E2                     u1144:
  3088   0007E2  FFFF               	dw	65535	; assembler added errata NOP
  3089   0007E4  2E37               	decfsz	??_PCS_T16GetInputPortC^0,f,c
  3090   0007E6  D7FA               	goto	u1145
  3091   0007E8  503A               	movf	(??_PCS_T16GetInputPortC+3)^0,w,c
  3092   0007EA  6E35               	movwf	?_PCS_T16GetInputPortC^0,c
  3093   0007EC  6A36               	clrf	(?_PCS_T16GetInputPortC+1)^0,c
  3094   0007EE  0012               	return		;funcret
  3095   0007F0  FFFF               	dw	65535	; errata NOP
  3096   0007F2                     __end_of_PCS_T16GetInputPortC:
  3097                           	callstack 0
  3098                           
  3099 ;; *************** function _ADC_u16ReadAdcValue *****************
  3100 ;; Defined at:
  3101 ;;		line 48 in file "adc.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;  U8Channel       1    wreg     const unsigned char 
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;  U8Channel       1   12[COMRAM] const unsigned char 
  3106 ;;  U8ChannelVal    1   11[COMRAM] unsigned char 
  3107 ;; Return value:  Size  Location     Type
  3108 ;;                  2    7[COMRAM] unsigned int 
  3109 ;; Registers used:
  3110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3111 ;; Tracked objects:
  3112 ;;		On entry : 0/0
  3113 ;;		On exit  : 0/0
  3114 ;;		Unchanged: 0/0
  3115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3116 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3117 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3119 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3120 ;;Total ram usage:        6 bytes
  3121 ;; Hardware stack levels used: 1
  3122 ;; Hardware stack levels required when called: 2
  3123 ;; This function calls:
  3124 ;;		Nothing
  3125 ;; This function is called by:
  3126 ;;		_IOC_T16GetInputPort
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           	psect	text29
  3131   000A26                     __ptext29:
  3132                           	callstack 0
  3133   000A26                     _ADC_u16ReadAdcValue:
  3134                           	callstack 0
  3135   000A26  FFFF               	dw	65535	; assembler added errata NOP
  3136                           
  3137                           ;incstack = 0
  3138                           ;ADC_u16ReadAdcValue@U8Channel stored from wreg
  3139   000A28  6E3A               	movwf	ADC_u16ReadAdcValue@U8Channel^0,c
  3140                           
  3141                           ;adc.c: 50: T_U8 U8ChannelValue = U8Channel<=1 ? U8Channel : 1;
  3142   000A2A  0E01               	movlw	1
  3143   000A2C  643A               	cpfsgt	ADC_u16ReadAdcValue@U8Channel^0,c
  3144   000A2E  D005               	goto	l59
  3145   000A30  0E00               	movlw	0
  3146   000A32  6E38               	movwf	(_ADC_u16ReadAdcValue$374+1)^0,c
  3147   000A34  0E01               	movlw	1
  3148   000A36  6E37               	movwf	_ADC_u16ReadAdcValue$374^0,c
  3149   000A38  D004               	goto	l61
  3150   000A3A                     l59:
  3151   000A3A  FFFF               	dw	65535	; assembler added errata NOP
  3152   000A3C  C03A  F037         	movff	ADC_u16ReadAdcValue@U8Channel,_ADC_u16ReadAdcValue$374
  3153   000A40  6A38               	clrf	(_ADC_u16ReadAdcValue$374+1)^0,c
  3154   000A42                     l61:
  3155   000A42  FFFF               	dw	65535	; assembler added errata NOP
  3156   000A44  C037  F039         	movff	_ADC_u16ReadAdcValue$374,ADC_u16ReadAdcValue@U8ChannelValue
  3157                           
  3158                           ;adc.c: 51: return au16AdcReadValue[U8ChannelValue];
  3159   000A48  5039               	movf	ADC_u16ReadAdcValue@U8ChannelValue^0,w,c
  3160   000A4A  0D02               	mullw	2
  3161   000A4C  0E1B               	movlw	low _au16AdcReadValue
  3162   000A4E  24F3               	addwf	243,w,c
  3163   000A50  6ED9               	movwf	fsr2l,c
  3164   000A52  0E00               	movlw	high _au16AdcReadValue
  3165   000A54  20F4               	addwfc	prodh,w,c
  3166   000A56  6EDA               	movwf	fsr2h,c
  3167   000A58  CFDE F035          	movff	postinc2,?_ADC_u16ReadAdcValue
  3168   000A5C  CFDD F036          	movff	postdec2,?_ADC_u16ReadAdcValue+1
  3169   000A60  0012               	return		;funcret
  3170   000A62  FFFF               	dw	65535	; errata NOP
  3171   000A64                     __end_of_ADC_u16ReadAdcValue:
  3172                           	callstack 0
  3173                           
  3174 ;; *************** function _IOC_vSetOutputPort *****************
  3175 ;; Defined at:
  3176 ;;		line 5 in file "ioc.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;  u16ChannelSe    2   23[COMRAM] const enum E10327
  3179 ;;  u8Value         1   25[COMRAM] const unsigned char 
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;  u16ChannelMa    2   26[COMRAM] unsigned int 
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  1    wreg      void 
  3184 ;; Registers used:
  3185 ;;		wreg, status,2, status,0, cstack
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3191 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3192 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3194 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3195 ;;Total ram usage:        5 bytes
  3196 ;; Hardware stack levels used: 1
  3197 ;; Hardware stack levels required when called: 3
  3198 ;; This function calls:
  3199 ;;		_PCS_vSetOutputPortD
  3200 ;;		_PCS_vSetOutputPortE
  3201 ;; This function is called by:
  3202 ;;		_SGL_toggleAllHazardLights
  3203 ;;		_SGL_toggleSideHazardLights
  3204 ;;		_SGL_setAllHazardLights
  3205 ;;		_SGL_setSideHazardLights
  3206 ;;		_LIGHTS_BrakeInit
  3207 ;;		_LIGHTS_BrakeRun
  3208 ;;		_SGL_HeadLightPasiveState
  3209 ;;		_SGL_HeadLightActiveState
  3210 ;;		_LIGHTS_DemoState1
  3211 ;;		_LIGHTS_DemoState2
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           	psect	text30
  3216   000A64                     __ptext30:
  3217                           	callstack 0
  3218   000A64                     _IOC_vSetOutputPort:
  3219                           	callstack 0
  3220   000A64  FFFF               	dw	65535	; assembler added errata NOP
  3221                           
  3222                           ;ioc.c: 7: T_U16 u16ChannelMask = (u16ChannelSelect&0xFF00);
  3223                           
  3224                           ;incstack = 0
  3225   000A66  0E00               	movlw	0
  3226   000A68  1445               	andwf	IOC_vSetOutputPort@u16ChannelSelect^0,w,c
  3227   000A6A  6E48               	movwf	IOC_vSetOutputPort@u16ChannelMask^0,c
  3228   000A6C  0EFF               	movlw	255
  3229   000A6E  1446               	andwf	(IOC_vSetOutputPort@u16ChannelSelect+1)^0,w,c
  3230   000A70  6E49               	movwf	(IOC_vSetOutputPort@u16ChannelMask+1)^0,c
  3231                           
  3232                           ;ioc.c: 9: if(u16ChannelMask == IOC_PORTD)
  3233   000A72  0449               	decf	(IOC_vSetOutputPort@u16ChannelMask+1)^0,w,c
  3234   000A74  1048               	iorwf	IOC_vSetOutputPort@u16ChannelMask^0,w,c
  3235   000A76  A4D8               	btfss	status,2,c
  3236   000A78  D006               	goto	l1746
  3237                           
  3238                           ;ioc.c: 10: {;ioc.c: 11: PCS_vSetOutputPortD(u16ChannelSelect, u8Value);
  3239   000A7A  C047  F035         	movff	IOC_vSetOutputPort@u8Value,PCS_vSetOutputPortD@u8Value
  3240   000A7E  5045               	movf	IOC_vSetOutputPort@u16ChannelSelect^0,w,c
  3241   000A80  ECDF  F002         	call	_PCS_vSetOutputPortD
  3242                           
  3243                           ;ioc.c: 12: }
  3244   000A84  D00B               	goto	l214
  3245   000A86                     l1746:
  3246   000A86  FFFF               	dw	65535	; assembler added errata NOP
  3247                           
  3248                           ;ioc.c: 13: else if(u16ChannelMask == IOC_PORTE)
  3249   000A88  0E02               	movlw	2
  3250   000A8A  1849               	xorwf	(IOC_vSetOutputPort@u16ChannelMask+1)^0,w,c
  3251   000A8C  1048               	iorwf	IOC_vSetOutputPort@u16ChannelMask^0,w,c
  3252   000A8E  A4D8               	btfss	status,2,c
  3253   000A90  D005               	goto	l214
  3254                           
  3255                           ;ioc.c: 14: {;ioc.c: 15: PCS_vSetOutputPortE(u16ChannelSelect, u8Value);
  3256   000A92  C047  F035         	movff	IOC_vSetOutputPort@u8Value,PCS_vSetOutputPortE@u8Value
  3257   000A96  5045               	movf	IOC_vSetOutputPort@u16ChannelSelect^0,w,c
  3258   000A98  ECA0  F002         	call	_PCS_vSetOutputPortE
  3259   000A9C                     l214:
  3260   000A9C  FFFF               	dw	65535	; assembler added errata NOP
  3261   000A9E  0012               	return		;funcret
  3262   000AA0  FFFF               	dw	65535	; errata NOP
  3263   000AA2                     __end_of_IOC_vSetOutputPort:
  3264                           	callstack 0
  3265                           
  3266 ;; *************** function _PCS_vSetOutputPortE *****************
  3267 ;; Defined at:
  3268 ;;		line 35 in file "pcs.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;  u8BitNumber     1    wreg     const unsigned char 
  3271 ;;  u8Value         1    7[COMRAM] const unsigned char 
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;  u8BitNumber     1   13[COMRAM] const unsigned char 
  3274 ;;  u8BitNumberV    1   14[COMRAM] unsigned char 
  3275 ;;  u8BitValue      1   12[COMRAM] unsigned char 
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  1    wreg      void 
  3278 ;; Registers used:
  3279 ;;		wreg, status,2, status,0
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3285 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3286 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3287 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3288 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3289 ;;Total ram usage:        8 bytes
  3290 ;; Hardware stack levels used: 1
  3291 ;; Hardware stack levels required when called: 2
  3292 ;; This function calls:
  3293 ;;		Nothing
  3294 ;; This function is called by:
  3295 ;;		_IOC_vSetOutputPort
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299                           	psect	text31
  3300   000540                     __ptext31:
  3301                           	callstack 0
  3302   000540                     _PCS_vSetOutputPortE:
  3303                           	callstack 0
  3304   000540  FFFF               	dw	65535	; assembler added errata NOP
  3305                           
  3306                           ;incstack = 0
  3307                           ;PCS_vSetOutputPortE@u8BitNumber stored from wreg
  3308   000542  6E3B               	movwf	PCS_vSetOutputPortE@u8BitNumber^0,c
  3309                           
  3310                           ;pcs.c: 37: T_U8 u8BitValue = u8Value>0 ? 1 : 0;
  3311   000544  5035               	movf	PCS_vSetOutputPortE@u8Value^0,w,c
  3312   000546  B4D8               	btfsc	status,2,c
  3313   000548  D002               	goto	u950
  3314   00054A  0E01               	movlw	1
  3315   00054C  D002               	goto	u960
  3316   00054E                     u950:
  3317   00054E  FFFF               	dw	65535	; assembler added errata NOP
  3318   000550  0E00               	movlw	0
  3319   000552                     u960:
  3320   000552  FFFF               	dw	65535	; assembler added errata NOP
  3321   000554  6E3A               	movwf	PCS_vSetOutputPortE@u8BitValue^0,c
  3322                           
  3323                           ;pcs.c: 38: T_U8 u8BitNumberValue = u8BitNumber<=1 ? u8BitNumber : 1;
  3324   000556  0E01               	movlw	1
  3325   000558  643B               	cpfsgt	PCS_vSetOutputPortE@u8BitNumber^0,c
  3326   00055A  D005               	goto	l118
  3327   00055C  0E00               	movlw	0
  3328   00055E  6E39               	movwf	(_PCS_vSetOutputPortE$712+1)^0,c
  3329   000560  0E01               	movlw	1
  3330   000562  6E38               	movwf	_PCS_vSetOutputPortE$712^0,c
  3331   000564  D004               	goto	l120
  3332   000566                     l118:
  3333   000566  FFFF               	dw	65535	; assembler added errata NOP
  3334   000568  C03B  F038         	movff	PCS_vSetOutputPortE@u8BitNumber,_PCS_vSetOutputPortE$712
  3335   00056C  6A39               	clrf	(_PCS_vSetOutputPortE$712+1)^0,c
  3336   00056E                     l120:
  3337   00056E  FFFF               	dw	65535	; assembler added errata NOP
  3338   000570  C038  F03C         	movff	_PCS_vSetOutputPortE$712,PCS_vSetOutputPortE@u8BitNumberValue
  3339                           
  3340                           ;pcs.c: 40: if(1 == u8BitValue)
  3341   000574  043A               	decf	PCS_vSetOutputPortE@u8BitValue^0,w,c
  3342   000576  A4D8               	btfss	status,2,c
  3343   000578  D00F               	goto	l1704
  3344                           
  3345                           ;pcs.c: 41: {;pcs.c: 42: PORTE |= (0x01<<u8BitNumberValue);
  3346   00057A  C03C  F036         	movff	PCS_vSetOutputPortE@u8BitNumberValue,??_PCS_vSetOutputPortE
  3347   00057E  0E01               	movlw	1
  3348   000580  6E37               	movwf	(??_PCS_vSetOutputPortE+1)^0,c
  3349   000582  2A36               	incf	??_PCS_vSetOutputPortE^0,f,c
  3350   000584  D003               	goto	u994
  3351   000586                     u995:
  3352   000586  FFFF               	dw	65535	; assembler added errata NOP
  3353   000588  90D8               	bcf	status,0,c
  3354   00058A  3637               	rlcf	(??_PCS_vSetOutputPortE+1)^0,f,c
  3355   00058C                     u994:
  3356   00058C  FFFF               	dw	65535	; assembler added errata NOP
  3357   00058E  2E36               	decfsz	??_PCS_vSetOutputPortE^0,f,c
  3358   000590  D7FA               	goto	u995
  3359   000592  5037               	movf	(??_PCS_vSetOutputPortE+1)^0,w,c
  3360   000594  1284               	iorwf	132,f,c	;volatile
  3361                           
  3362                           ;pcs.c: 43: }
  3363   000596  D010               	goto	l123
  3364   000598                     l1704:
  3365   000598  FFFF               	dw	65535	; assembler added errata NOP
  3366                           
  3367                           ;pcs.c: 44: else;pcs.c: 45: {;pcs.c: 46: PORTE &= ~(0x01<<u8BitNumberValue);
  3368   00059A  C03C  F036         	movff	PCS_vSetOutputPortE@u8BitNumberValue,??_PCS_vSetOutputPortE
  3369   00059E  0E01               	movlw	1
  3370   0005A0  6E37               	movwf	(??_PCS_vSetOutputPortE+1)^0,c
  3371   0005A2  2A36               	incf	??_PCS_vSetOutputPortE^0,f,c
  3372   0005A4  D003               	goto	u1004
  3373   0005A6                     u1005:
  3374   0005A6  FFFF               	dw	65535	; assembler added errata NOP
  3375   0005A8  90D8               	bcf	status,0,c
  3376   0005AA  3637               	rlcf	(??_PCS_vSetOutputPortE+1)^0,f,c
  3377   0005AC                     u1004:
  3378   0005AC  FFFF               	dw	65535	; assembler added errata NOP
  3379   0005AE  2E36               	decfsz	??_PCS_vSetOutputPortE^0,f,c
  3380   0005B0  D7FA               	goto	u1005
  3381   0005B2  5037               	movf	(??_PCS_vSetOutputPortE+1)^0,w,c
  3382   0005B4  0AFF               	xorlw	255
  3383   0005B6  1684               	andwf	132,f,c	;volatile
  3384   0005B8                     l123:
  3385   0005B8  FFFF               	dw	65535	; assembler added errata NOP
  3386   0005BA  0012               	return		;funcret
  3387   0005BC  FFFF               	dw	65535	; errata NOP
  3388   0005BE                     __end_of_PCS_vSetOutputPortE:
  3389                           	callstack 0
  3390                           
  3391 ;; *************** function _PCS_vSetOutputPortD *****************
  3392 ;; Defined at:
  3393 ;;		line 20 in file "pcs.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  u8BitNumber     1    wreg     const unsigned char 
  3396 ;;  u8Value         1    7[COMRAM] const unsigned char 
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;  u8BitNumber     1   13[COMRAM] const unsigned char 
  3399 ;;  u8BitNumberV    1   14[COMRAM] unsigned char 
  3400 ;;  u8BitValue      1   12[COMRAM] unsigned char 
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  1    wreg      void 
  3403 ;; Registers used:
  3404 ;;		wreg, status,2, status,0
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3410 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3411 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3412 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3413 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3414 ;;Total ram usage:        8 bytes
  3415 ;; Hardware stack levels used: 1
  3416 ;; Hardware stack levels required when called: 2
  3417 ;; This function calls:
  3418 ;;		Nothing
  3419 ;; This function is called by:
  3420 ;;		_IOC_vSetOutputPort
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           	psect	text32
  3425   0005BE                     __ptext32:
  3426                           	callstack 0
  3427   0005BE                     _PCS_vSetOutputPortD:
  3428                           	callstack 0
  3429   0005BE  FFFF               	dw	65535	; assembler added errata NOP
  3430                           
  3431                           ;incstack = 0
  3432                           ;PCS_vSetOutputPortD@u8BitNumber stored from wreg
  3433   0005C0  6E3B               	movwf	PCS_vSetOutputPortD@u8BitNumber^0,c
  3434                           
  3435                           ;pcs.c: 22: T_U8 u8BitValue = u8Value>0 ? 1 : 0;
  3436   0005C2  5035               	movf	PCS_vSetOutputPortD@u8Value^0,w,c
  3437   0005C4  B4D8               	btfsc	status,2,c
  3438   0005C6  D002               	goto	u890
  3439   0005C8  0E01               	movlw	1
  3440   0005CA  D002               	goto	u900
  3441   0005CC                     u890:
  3442   0005CC  FFFF               	dw	65535	; assembler added errata NOP
  3443   0005CE  0E00               	movlw	0
  3444   0005D0                     u900:
  3445   0005D0  FFFF               	dw	65535	; assembler added errata NOP
  3446   0005D2  6E3A               	movwf	PCS_vSetOutputPortD@u8BitValue^0,c
  3447                           
  3448                           ;pcs.c: 23: T_U8 u8BitNumberValue = u8BitNumber<=7 ? u8BitNumber : 7;
  3449   0005D4  0E07               	movlw	7
  3450   0005D6  643B               	cpfsgt	PCS_vSetOutputPortD@u8BitNumber^0,c
  3451   0005D8  D005               	goto	l109
  3452   0005DA  0E00               	movlw	0
  3453   0005DC  6E39               	movwf	(_PCS_vSetOutputPortD$706+1)^0,c
  3454   0005DE  0E07               	movlw	7
  3455   0005E0  6E38               	movwf	_PCS_vSetOutputPortD$706^0,c
  3456   0005E2  D004               	goto	l111
  3457   0005E4                     l109:
  3458   0005E4  FFFF               	dw	65535	; assembler added errata NOP
  3459   0005E6  C03B  F038         	movff	PCS_vSetOutputPortD@u8BitNumber,_PCS_vSetOutputPortD$706
  3460   0005EA  6A39               	clrf	(_PCS_vSetOutputPortD$706+1)^0,c
  3461   0005EC                     l111:
  3462   0005EC  FFFF               	dw	65535	; assembler added errata NOP
  3463   0005EE  C038  F03C         	movff	_PCS_vSetOutputPortD$706,PCS_vSetOutputPortD@u8BitNumberValue
  3464                           
  3465                           ;pcs.c: 25: if(1 == u8BitValue)
  3466   0005F2  043A               	decf	PCS_vSetOutputPortD@u8BitValue^0,w,c
  3467   0005F4  A4D8               	btfss	status,2,c
  3468   0005F6  D00F               	goto	l1692
  3469                           
  3470                           ;pcs.c: 26: {;pcs.c: 27: PORTD |= (0x01<<u8BitNumberValue);
  3471   0005F8  C03C  F036         	movff	PCS_vSetOutputPortD@u8BitNumberValue,??_PCS_vSetOutputPortD
  3472   0005FC  0E01               	movlw	1
  3473   0005FE  6E37               	movwf	(??_PCS_vSetOutputPortD+1)^0,c
  3474   000600  2A36               	incf	??_PCS_vSetOutputPortD^0,f,c
  3475   000602  D003               	goto	u934
  3476   000604                     u935:
  3477   000604  FFFF               	dw	65535	; assembler added errata NOP
  3478   000606  90D8               	bcf	status,0,c
  3479   000608  3637               	rlcf	(??_PCS_vSetOutputPortD+1)^0,f,c
  3480   00060A                     u934:
  3481   00060A  FFFF               	dw	65535	; assembler added errata NOP
  3482   00060C  2E36               	decfsz	??_PCS_vSetOutputPortD^0,f,c
  3483   00060E  D7FA               	goto	u935
  3484   000610  5037               	movf	(??_PCS_vSetOutputPortD+1)^0,w,c
  3485   000612  1283               	iorwf	131,f,c	;volatile
  3486                           
  3487                           ;pcs.c: 28: }
  3488   000614  D010               	goto	l114
  3489   000616                     l1692:
  3490   000616  FFFF               	dw	65535	; assembler added errata NOP
  3491                           
  3492                           ;pcs.c: 29: else;pcs.c: 30: {;pcs.c: 31: PORTD &= ~(0x01<<u8BitNumberValue);
  3493   000618  C03C  F036         	movff	PCS_vSetOutputPortD@u8BitNumberValue,??_PCS_vSetOutputPortD
  3494   00061C  0E01               	movlw	1
  3495   00061E  6E37               	movwf	(??_PCS_vSetOutputPortD+1)^0,c
  3496   000620  2A36               	incf	??_PCS_vSetOutputPortD^0,f,c
  3497   000622  D003               	goto	u944
  3498   000624                     u945:
  3499   000624  FFFF               	dw	65535	; assembler added errata NOP
  3500   000626  90D8               	bcf	status,0,c
  3501   000628  3637               	rlcf	(??_PCS_vSetOutputPortD+1)^0,f,c
  3502   00062A                     u944:
  3503   00062A  FFFF               	dw	65535	; assembler added errata NOP
  3504   00062C  2E36               	decfsz	??_PCS_vSetOutputPortD^0,f,c
  3505   00062E  D7FA               	goto	u945
  3506   000630  5037               	movf	(??_PCS_vSetOutputPortD+1)^0,w,c
  3507   000632  0AFF               	xorlw	255
  3508   000634  1683               	andwf	131,f,c	;volatile
  3509   000636                     l114:
  3510   000636  FFFF               	dw	65535	; assembler added errata NOP
  3511   000638  0012               	return		;funcret
  3512   00063A  FFFF               	dw	65535	; errata NOP
  3513   00063C                     __end_of_PCS_vSetOutputPortD:
  3514                           	callstack 0
  3515                           
  3516 ;; *************** function _TASK_vTask100ms *****************
  3517 ;; Defined at:
  3518 ;;		line 27 in file "tasks.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;		None
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;		None
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  1    wreg      void 
  3525 ;; Registers used:
  3526 ;;		None
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3536 ;;Total ram usage:        0 bytes
  3537 ;; Hardware stack levels used: 1
  3538 ;; Hardware stack levels required when called: 2
  3539 ;; This function calls:
  3540 ;;		Nothing
  3541 ;; This function is called by:
  3542 ;;		_SCHED_vStartScheduler
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           	psect	text33
  3547   000CC6                     __ptext33:
  3548                           	callstack 0
  3549   000CC6                     _TASK_vTask100ms:
  3550                           	callstack 0
  3551   000CC6  FFFF               	dw	65535	; assembler added errata NOP
  3552                           
  3553                           ;incstack = 0
  3554   000CC8  0012               	return		;funcret
  3555   000CCA  FFFF               	dw	65535	; errata NOP
  3556   000CCC                     __end_of_TASK_vTask100ms:
  3557                           	callstack 0
  3558                           
  3559 ;; *************** function _SCHED_vInitSystem *****************
  3560 ;; Defined at:
  3561 ;;		line 13 in file "sched.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;		None
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;		None
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  1    wreg      void 
  3568 ;; Registers used:
  3569 ;;		wreg, status,2, cstack
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3579 ;;Total ram usage:        0 bytes
  3580 ;; Hardware stack levels used: 1
  3581 ;; Hardware stack levels required when called: 3
  3582 ;; This function calls:
  3583 ;;		_ADC_vInit
  3584 ;;		_INT_vInit
  3585 ;;		_PCS_vInit
  3586 ;;		_TIM_vInit
  3587 ;; This function is called by:
  3588 ;;		_main
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592                           	psect	text34
  3593   000C48                     __ptext34:
  3594                           	callstack 0
  3595   000C48                     _SCHED_vInitSystem:
  3596                           	callstack 0
  3597   000C48  FFFF               	dw	65535	; assembler added errata NOP
  3598                           
  3599                           ;sched.c: 15: PCS_vInit();
  3600                           
  3601                           ;incstack = 0
  3602   000C4A  EC0B  F006         	call	_PCS_vInit	;wreg free
  3603                           
  3604                           ;sched.c: 16: INT_vInit();
  3605   000C4E  EC3A  F006         	call	_INT_vInit	;wreg free
  3606                           
  3607                           ;sched.c: 17: ADC_vInit();
  3608   000C52  ECF1  F004         	call	_ADC_vInit	;wreg free
  3609                           
  3610                           ;sched.c: 18: TIM_vInit();
  3611   000C56  EC6C  F005         	call	_TIM_vInit	;wreg free
  3612   000C5A  0012               	return		;funcret
  3613   000C5C  FFFF               	dw	65535	; errata NOP
  3614   000C5E                     __end_of_SCHED_vInitSystem:
  3615                           	callstack 0
  3616                           
  3617 ;; *************** function _TIM_vInit *****************
  3618 ;; Defined at:
  3619 ;;		line 3 in file "tim.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;		None
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;		None
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  1    wreg      void 
  3626 ;; Registers used:
  3627 ;;		wreg, status,2
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3637 ;;Total ram usage:        0 bytes
  3638 ;; Hardware stack levels used: 1
  3639 ;; Hardware stack levels required when called: 2
  3640 ;; This function calls:
  3641 ;;		Nothing
  3642 ;; This function is called by:
  3643 ;;		_SCHED_vInitSystem
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           	psect	text35
  3648   000AD8                     __ptext35:
  3649                           	callstack 0
  3650   000AD8                     _TIM_vInit:
  3651                           	callstack 0
  3652   000AD8  FFFF               	dw	65535	; assembler added errata NOP
  3653                           
  3654                           ;tim.c: 5: T2CONbits.TMR2ON = 0b0;
  3655                           
  3656                           ;incstack = 0
  3657   000ADA  94CA               	bcf	202,2,c	;volatile
  3658                           
  3659                           ;tim.c: 6: TMR2 = 0x00;
  3660   000ADC  0E00               	movlw	0
  3661   000ADE  6ECC               	movwf	204,c	;volatile
  3662                           
  3663                           ;tim.c: 7: T2CON = 0x00;
  3664   000AE0  0E00               	movlw	0
  3665   000AE2  6ECA               	movwf	202,c	;volatile
  3666                           
  3667                           ;tim.c: 8: PR2 = 0x00;
  3668   000AE4  0E00               	movlw	0
  3669   000AE6  6ECB               	movwf	203,c	;volatile
  3670                           
  3671                           ;tim.c: 10: T2CONbits.TOUTPS = 0b0100;
  3672   000AE8  50CA               	movf	202,w,c	;volatile
  3673   000AEA  0B87               	andlw	-121
  3674   000AEC  0920               	iorlw	32
  3675   000AEE  6ECA               	movwf	202,c	;volatile
  3676                           
  3677                           ;tim.c: 11: T2CONbits.T2CKPS = 0b01;
  3678   000AF0  50CA               	movf	202,w,c	;volatile
  3679   000AF2  0BFC               	andlw	-4
  3680   000AF4  0901               	iorlw	1
  3681   000AF6  6ECA               	movwf	202,c	;volatile
  3682                           
  3683                           ;tim.c: 12: PR2 = 125;
  3684   000AF8  0E7D               	movlw	125
  3685   000AFA  6ECB               	movwf	203,c	;volatile
  3686                           
  3687                           ;tim.c: 14: PIR1bits.TMR2IF = 0b0;
  3688   000AFC  929E               	bcf	158,1,c	;volatile
  3689                           
  3690                           ;tim.c: 15: IPR1bits.TMR2IP = 0b1;
  3691   000AFE  829F               	bsf	159,1,c	;volatile
  3692                           
  3693                           ;tim.c: 16: PIE1bits.TMR2IE = 0b1;
  3694   000B00  829D               	bsf	157,1,c	;volatile
  3695                           
  3696                           ;tim.c: 17: INTCONbits.PEIE = 1;
  3697   000B02  8CF2               	bsf	242,6,c	;volatile
  3698                           
  3699                           ;tim.c: 18: INTCONbits.GIE = 1;
  3700   000B04  8EF2               	bsf	242,7,c	;volatile
  3701                           
  3702                           ;tim.c: 20: T2CONbits.TMR2ON = 0b1;
  3703   000B06  84CA               	bsf	202,2,c	;volatile
  3704   000B08  0012               	return		;funcret
  3705   000B0A  FFFF               	dw	65535	; errata NOP
  3706   000B0C                     __end_of_TIM_vInit:
  3707                           	callstack 0
  3708                           
  3709 ;; *************** function _PCS_vInit *****************
  3710 ;; Defined at:
  3711 ;;		line 3 in file "pcs.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;		None
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;		None
  3716 ;; Return value:  Size  Location     Type
  3717 ;;                  1    wreg      void 
  3718 ;; Registers used:
  3719 ;;		wreg, status,2
  3720 ;; Tracked objects:
  3721 ;;		On entry : 0/0
  3722 ;;		On exit  : 0/0
  3723 ;;		Unchanged: 0/0
  3724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3729 ;;Total ram usage:        0 bytes
  3730 ;; Hardware stack levels used: 1
  3731 ;; Hardware stack levels required when called: 2
  3732 ;; This function calls:
  3733 ;;		Nothing
  3734 ;; This function is called by:
  3735 ;;		_SCHED_vInitSystem
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739                           	psect	text36
  3740   000C16                     __ptext36:
  3741                           	callstack 0
  3742   000C16                     _PCS_vInit:
  3743                           	callstack 0
  3744   000C16  FFFF               	dw	65535	; assembler added errata NOP
  3745                           
  3746                           ;pcs.c: 5: TRISAbits.RA0 = 1;
  3747                           
  3748                           ;incstack = 0
  3749   000C18  8092               	bsf	146,0,c	;volatile
  3750                           
  3751                           ;pcs.c: 6: TRISAbits.RA1 = 1;
  3752   000C1A  8292               	bsf	146,1,c	;volatile
  3753                           
  3754                           ;pcs.c: 8: TRISCbits.RC0 = 1;
  3755   000C1C  8094               	bsf	148,0,c	;volatile
  3756                           
  3757                           ;pcs.c: 9: TRISCbits.RC1 = 1;
  3758   000C1E  8294               	bsf	148,1,c	;volatile
  3759                           
  3760                           ;pcs.c: 10: TRISCbits.RC2 = 1;
  3761   000C20  8494               	bsf	148,2,c	;volatile
  3762                           
  3763                           ;pcs.c: 11: TRISCbits.RC3 = 1;
  3764   000C22  8694               	bsf	148,3,c	;volatile
  3765                           
  3766                           ;pcs.c: 12: TRISCbits.RC4 = 1;
  3767   000C24  8894               	bsf	148,4,c	;volatile
  3768                           
  3769                           ;pcs.c: 14: TRISD = 0x00;
  3770   000C26  0E00               	movlw	0
  3771   000C28  6E95               	movwf	149,c	;volatile
  3772                           
  3773                           ;pcs.c: 16: TRISEbits.RE0 = 0;
  3774   000C2A  9096               	bcf	150,0,c	;volatile
  3775                           
  3776                           ;pcs.c: 17: TRISEbits.RE1 = 0;
  3777   000C2C  9296               	bcf	150,1,c	;volatile
  3778   000C2E  0012               	return		;funcret
  3779   000C30  FFFF               	dw	65535	; errata NOP
  3780   000C32                     __end_of_PCS_vInit:
  3781                           	callstack 0
  3782                           
  3783 ;; *************** function _INT_vInit *****************
  3784 ;; Defined at:
  3785 ;;		line 6 in file "int.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;		None
  3788 ;; Auto vars:     Size  Location     Type
  3789 ;;		None
  3790 ;; Return value:  Size  Location     Type
  3791 ;;                  1    wreg      void 
  3792 ;; Registers used:
  3793 ;;		None
  3794 ;; Tracked objects:
  3795 ;;		On entry : 0/0
  3796 ;;		On exit  : 0/0
  3797 ;;		Unchanged: 0/0
  3798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3803 ;;Total ram usage:        0 bytes
  3804 ;; Hardware stack levels used: 1
  3805 ;; Hardware stack levels required when called: 2
  3806 ;; This function calls:
  3807 ;;		Nothing
  3808 ;; This function is called by:
  3809 ;;		_SCHED_vInitSystem
  3810 ;; This function uses a non-reentrant model
  3811 ;;
  3812                           
  3813                           	psect	text37
  3814   000C74                     __ptext37:
  3815                           	callstack 0
  3816   000C74                     _INT_vInit:
  3817                           	callstack 0
  3818   000C74  FFFF               	dw	65535	; assembler added errata NOP
  3819                           
  3820                           ;int.c: 9: PIR1bits.ADIF = 0;
  3821                           
  3822                           ;incstack = 0
  3823   000C76  9C9E               	bcf	158,6,c	;volatile
  3824                           
  3825                           ;int.c: 10: PIE1bits.ADIE = 1;
  3826   000C78  8C9D               	bsf	157,6,c	;volatile
  3827                           
  3828                           ;int.c: 13: PIR1bits.TMR2IF = 0b0;
  3829   000C7A  929E               	bcf	158,1,c	;volatile
  3830                           
  3831                           ;int.c: 14: IPR1bits.TMR2IP = 0b1;
  3832   000C7C  829F               	bsf	159,1,c	;volatile
  3833                           
  3834                           ;int.c: 15: PIE1bits.TMR2IE = 0b1;
  3835   000C7E  829D               	bsf	157,1,c	;volatile
  3836                           
  3837                           ;int.c: 18: INTCONbits.PEIE = 1;
  3838   000C80  8CF2               	bsf	242,6,c	;volatile
  3839                           
  3840                           ;int.c: 19: INTCONbits.GIE = 1;
  3841   000C82  8EF2               	bsf	242,7,c	;volatile
  3842   000C84  0012               	return		;funcret
  3843   000C86  FFFF               	dw	65535	; errata NOP
  3844   000C88                     __end_of_INT_vInit:
  3845                           	callstack 0
  3846                           
  3847 ;; *************** function _ADC_vInit *****************
  3848 ;; Defined at:
  3849 ;;		line 9 in file "adc.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;		None
  3852 ;; Auto vars:     Size  Location     Type
  3853 ;;		None
  3854 ;; Return value:  Size  Location     Type
  3855 ;;                  1    wreg      void 
  3856 ;; Registers used:
  3857 ;;		wreg, status,2
  3858 ;; Tracked objects:
  3859 ;;		On entry : 0/0
  3860 ;;		On exit  : 0/0
  3861 ;;		Unchanged: 0/0
  3862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3867 ;;Total ram usage:        0 bytes
  3868 ;; Hardware stack levels used: 1
  3869 ;; Hardware stack levels required when called: 2
  3870 ;; This function calls:
  3871 ;;		Nothing
  3872 ;; This function is called by:
  3873 ;;		_SCHED_vInitSystem
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           	psect	text38
  3878   0009E2                     __ptext38:
  3879                           	callstack 0
  3880   0009E2                     _ADC_vInit:
  3881                           	callstack 0
  3882   0009E2  FFFF               	dw	65535	; assembler added errata NOP
  3883                           
  3884                           ;adc.c: 11: ADRESH = 0x00;
  3885                           
  3886                           ;incstack = 0
  3887   0009E4  0E00               	movlw	0
  3888   0009E6  6EC4               	movwf	196,c	;volatile
  3889                           
  3890                           ;adc.c: 12: ADRESL = 0x00;
  3891   0009E8  0E00               	movlw	0
  3892   0009EA  6EC3               	movwf	195,c	;volatile
  3893                           
  3894                           ;adc.c: 14: ADCON0bits.CHS = 0b0000;
  3895   0009EC  0EC3               	movlw	-61
  3896   0009EE  16C2               	andwf	194,f,c	;volatile
  3897                           
  3898                           ;adc.c: 16: ADCON1bits.VCFG = 0b00;
  3899   0009F0  0ECF               	movlw	-49
  3900   0009F2  16C1               	andwf	193,f,c	;volatile
  3901                           
  3902                           ;adc.c: 17: ADCON1bits.PCFG = 0b1101;
  3903   0009F4  50C1               	movf	193,w,c	;volatile
  3904   0009F6  0BF0               	andlw	-16
  3905   0009F8  090D               	iorlw	13
  3906   0009FA  6EC1               	movwf	193,c	;volatile
  3907                           
  3908                           ;adc.c: 19: ADCON2bits.ADFM = 1;
  3909   0009FC  8EC0               	bsf	192,7,c	;volatile
  3910                           
  3911                           ;adc.c: 20: ADCON2bits.ACQT = 0b100;
  3912   0009FE  50C0               	movf	192,w,c	;volatile
  3913   000A00  0BC7               	andlw	-57
  3914   000A02  0920               	iorlw	32
  3915   000A04  6EC0               	movwf	192,c	;volatile
  3916                           
  3917                           ;adc.c: 21: ADCON2bits.ADCS = 0b001;
  3918   000A06  50C0               	movf	192,w,c	;volatile
  3919   000A08  0BF8               	andlw	-8
  3920   000A0A  0901               	iorlw	1
  3921   000A0C  6EC0               	movwf	192,c	;volatile
  3922                           
  3923                           ;adc.c: 23: PIR1bits.ADIF = 0;
  3924   000A0E  9C9E               	bcf	158,6,c	;volatile
  3925                           
  3926                           ;adc.c: 24: PIE1bits.ADIE = 1;
  3927   000A10  8C9D               	bsf	157,6,c	;volatile
  3928                           
  3929                           ;adc.c: 25: INTCONbits.PEIE = 1;
  3930   000A12  8CF2               	bsf	242,6,c	;volatile
  3931                           
  3932                           ;adc.c: 26: INTCONbits.GIE = 1;
  3933   000A14  8EF2               	bsf	242,7,c	;volatile
  3934                           
  3935                           ;adc.c: 28: ADCON0bits.ADON = 1;
  3936   000A16  80C2               	bsf	194,0,c	;volatile
  3937                           
  3938                           ;adc.c: 29: _delay((unsigned long)((40)*(10000000UL/4000000.0)));
  3939   000A18  0E19               	movlw	25
  3940   000A1A                     u1707:
  3941   000A1A  FFFF               	dw	65535	; errata NOP
  3942   000A1C  2EE8               	decfsz	wreg,f,c
  3943   000A1E  D7FD               	bra	u1707
  3944                           
  3945                           ;adc.c: 30: ADCON0bits.GO_nDONE = 1;
  3946   000A20  82C2               	bsf	194,1,c	;volatile
  3947   000A22  0012               	return		;funcret
  3948   000A24  FFFF               	dw	65535	; errata NOP
  3949   000A26                     __end_of_ADC_vInit:
  3950                           	callstack 0
  3951                           
  3952 ;; *************** function _INT_vInterruptHandler *****************
  3953 ;; Defined at:
  3954 ;;		line 22 in file "int.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;		None
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;		None
  3959 ;; Return value:  Size  Location     Type
  3960 ;;                  1    wreg      void 
  3961 ;; Registers used:
  3962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3963 ;; Tracked objects:
  3964 ;;		On entry : 0/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3970 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3971 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3972 ;;Total ram usage:        4 bytes
  3973 ;; Hardware stack levels used: 1
  3974 ;; Hardware stack levels required when called: 1
  3975 ;; This function calls:
  3976 ;;		_ADC_vConversionCompleted
  3977 ;;		_SCHED_vTickFunctionCall
  3978 ;; This function is called by:
  3979 ;;		Interrupt level 2
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           	psect	intcode
  3984   000008                     __pintcode:
  3985                           	callstack 0
  3986   000008                     _INT_vInterruptHandler:
  3987                           	callstack 0
  3988   000008  FFFF               	dw	65535	; assembler added errata NOP
  3989                           
  3990                           ;incstack = 0
  3991   00000A  824F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3992   00000C  CFD9 F031          	movff	fsr2l,??_INT_vInterruptHandler
  3993   000010  CFDA F032          	movff	fsr2h,??_INT_vInterruptHandler+1
  3994   000014  CFF3 F033          	movff	prodl,??_INT_vInterruptHandler+2
  3995   000018  CFF4 F034          	movff	prodh,??_INT_vInterruptHandler+3
  3996                           
  3997                           ;int.c: 24: if(PIR1bits.ADIF && ADCON0bits.ADON)
  3998   00001C  BC9E               	btfsc	158,6,c	;volatile
  3999   00001E  A0C2               	btfss	194,0,c	;volatile
  4000   000020  D002               	goto	i2l1666
  4001                           
  4002                           ;int.c: 25: {;int.c: 26: ADC_vConversionCompleted();
  4003   000022  EC97  F003         	call	_ADC_vConversionCompleted	;wreg free
  4004   000026                     i2l1666:
  4005   000026  FFFF               	dw	65535	; assembler added errata NOP
  4006                           
  4007                           ;int.c: 27: };int.c: 29: if(PIR1bits.TMR2IF && T2CONbits.TMR2ON)
  4008   000028  B29E               	btfsc	158,1,c	;volatile
  4009   00002A  A4CA               	btfss	202,2,c	;volatile
  4010   00002C  D003               	goto	i2l88
  4011                           
  4012                           ;int.c: 30: {;int.c: 31: SCHED_vTickFunctionCall();
  4013   00002E  EC2F  F006         	call	_SCHED_vTickFunctionCall	;wreg free
  4014                           
  4015                           ;int.c: 32: PIR1bits.TMR2IF = 0b0;
  4016   000032  929E               	bcf	158,1,c	;volatile
  4017   000034                     i2l88:
  4018   000034  FFFF               	dw	65535	; assembler added errata NOP
  4019   000036  C034  FFF4         	movff	??_INT_vInterruptHandler+3,prodh
  4020   00003A  C033  FFF3         	movff	??_INT_vInterruptHandler+2,prodl
  4021   00003E  C032  FFDA         	movff	??_INT_vInterruptHandler+1,fsr2h
  4022   000042  C031  FFD9         	movff	??_INT_vInterruptHandler,fsr2l
  4023   000046  924F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4024   000048  0011               	retfie		f
  4025   00004A  FFFF               	dw	65535	; errata NOP
  4026   00004C                     __end_of_INT_vInterruptHandler:
  4027                           	callstack 0
  4028                           
  4029 ;; *************** function _SCHED_vTickFunctionCall *****************
  4030 ;; Defined at:
  4031 ;;		line 21 in file "sched.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;		None
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;		None
  4036 ;; Return value:  Size  Location     Type
  4037 ;;                  1    wreg      void 
  4038 ;; Registers used:
  4039 ;;		wreg, status,2, status,0
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4049 ;;Total ram usage:        0 bytes
  4050 ;; Hardware stack levels used: 1
  4051 ;; This function calls:
  4052 ;;		Nothing
  4053 ;; This function is called by:
  4054 ;;		_INT_vInterruptHandler
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058                           	psect	text40
  4059   000C5E                     __ptext40:
  4060                           	callstack 0
  4061   000C5E                     _SCHED_vTickFunctionCall:
  4062                           	callstack 0
  4063   000C5E  FFFF               	dw	65535	; assembler added errata NOP
  4064                           
  4065                           ;sched.c: 23: ++sched_gTick10ms;
  4066                           
  4067                           ;incstack = 0
  4068   000C60  2A2B               	incf	_sched_gTick10ms^0,f,c
  4069                           
  4070                           ;sched.c: 24: ++sched_gTick100ms;
  4071   000C62  2A2A               	incf	_sched_gTick100ms^0,f,c
  4072                           
  4073                           ;sched.c: 25: ++sched_gTick1s;
  4074   000C64  4A25               	infsnz	_sched_gTick1s^0,f,c
  4075   000C66  2A26               	incf	(_sched_gTick1s+1)^0,f,c
  4076                           
  4077                           ;sched.c: 26: sched_bTicked = 1;;
  4078   000C68  0E00               	movlw	0
  4079   000C6A  6E24               	movwf	(_sched_bTicked+1)^0,c
  4080   000C6C  0E01               	movlw	1
  4081   000C6E  6E23               	movwf	_sched_bTicked^0,c
  4082   000C70  0012               	return		;funcret
  4083   000C72  FFFF               	dw	65535	; errata NOP
  4084   000C74                     __end_of_SCHED_vTickFunctionCall:
  4085                           	callstack 0
  4086                           
  4087 ;; *************** function _ADC_vConversionCompleted *****************
  4088 ;; Defined at:
  4089 ;;		line 40 in file "adc.c"
  4090 ;; Parameters:    Size  Location     Type
  4091 ;;		None
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;		None
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  1    wreg      void 
  4096 ;; Registers used:
  4097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4105 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4106 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4107 ;;Total ram usage:        3 bytes
  4108 ;; Hardware stack levels used: 1
  4109 ;; This function calls:
  4110 ;;		Nothing
  4111 ;; This function is called by:
  4112 ;;		_INT_vInterruptHandler
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           	psect	text41
  4117   00072E                     __ptext41:
  4118                           	callstack 0
  4119   00072E                     _ADC_vConversionCompleted:
  4120                           	callstack 0
  4121   00072E  FFFF               	dw	65535	; assembler added errata NOP
  4122                           
  4123                           ;adc.c: 42: au16AdcReadValue[ADCON0bits.CHS0] = (ADRESH << 8) | ADRESL;
  4124                           
  4125                           ;incstack = 0
  4126   000730  50C3               	movf	195,w,c	;volatile
  4127   000732  CFC4 F02E          	movff	4036,??_ADC_vConversionCompleted	;volatile
  4128   000736  6A2F               	clrf	(??_ADC_vConversionCompleted+1)^0,c
  4129   000738  C02E  F02F         	movff	??_ADC_vConversionCompleted,??_ADC_vConversionCompleted+1
  4130   00073C  6A2E               	clrf	??_ADC_vConversionCompleted^0,c
  4131   00073E  122E               	iorwf	??_ADC_vConversionCompleted^0,f,c
  4132   000740  0E00               	movlw	0
  4133   000742  122F               	iorwf	(??_ADC_vConversionCompleted+1)^0,f,c
  4134   000744  A4C2               	btfss	194,2,c	;volatile
  4135   000746  D003               	goto	i2u70_40
  4136   000748  6A30               	clrf	(??_ADC_vConversionCompleted+2)^0,c
  4137   00074A  2A30               	incf	(??_ADC_vConversionCompleted+2)^0,f,c
  4138   00074C  D002               	goto	i2u70_48
  4139   00074E                     i2u70_40:
  4140   00074E  FFFF               	dw	65535	; assembler added errata NOP
  4141   000750  6A30               	clrf	(??_ADC_vConversionCompleted+2)^0,c
  4142   000752                     i2u70_48:
  4143   000752  FFFF               	dw	65535	; assembler added errata NOP
  4144   000754  5030               	movf	(??_ADC_vConversionCompleted+2)^0,w,c
  4145   000756  0D02               	mullw	2
  4146   000758  0E1B               	movlw	low _au16AdcReadValue
  4147   00075A  24F3               	addwf	243,w,c
  4148   00075C  6ED9               	movwf	fsr2l,c
  4149   00075E  0E00               	movlw	high _au16AdcReadValue
  4150   000760  20F4               	addwfc	prodh,w,c
  4151   000762  6EDA               	movwf	fsr2h,c
  4152   000764  C02E  FFDE         	movff	??_ADC_vConversionCompleted,postinc2
  4153   000768  C02F  FFDD         	movff	??_ADC_vConversionCompleted+1,postdec2
  4154                           
  4155                           ;adc.c: 43: ADCON0bits.CHS0 = !ADCON0bits.CHS0;
  4156   00076C  B4C2               	btfsc	194,2,c	;volatile
  4157   00076E  D003               	goto	i2u71_40
  4158   000770  6A2E               	clrf	??_ADC_vConversionCompleted^0,c
  4159   000772  2A2E               	incf	??_ADC_vConversionCompleted^0,f,c
  4160   000774  D002               	goto	i2u72_48
  4161   000776                     i2u71_40:
  4162   000776  FFFF               	dw	65535	; assembler added errata NOP
  4163   000778  6A2E               	clrf	??_ADC_vConversionCompleted^0,c
  4164   00077A                     i2u72_48:
  4165   00077A  FFFF               	dw	65535	; assembler added errata NOP
  4166   00077C  462E               	rlncf	??_ADC_vConversionCompleted^0,f,c
  4167   00077E  462E               	rlncf	??_ADC_vConversionCompleted^0,f,c
  4168   000780  50C2               	movf	194,w,c	;volatile
  4169   000782  182E               	xorwf	??_ADC_vConversionCompleted^0,w,c
  4170   000784  0BFB               	andlw	-5
  4171   000786  182E               	xorwf	??_ADC_vConversionCompleted^0,w,c
  4172   000788  6EC2               	movwf	194,c	;volatile
  4173                           
  4174                           ;adc.c: 44: PIR1bits.ADIF = 0;
  4175   00078A  9C9E               	bcf	158,6,c	;volatile
  4176                           
  4177                           ;adc.c: 45: ADCON0bits.GO_nDONE = 1;
  4178   00078C  82C2               	bsf	194,1,c	;volatile
  4179   00078E  0012               	return		;funcret
  4180   000790  FFFF               	dw	65535	; errata NOP
  4181   000792                     __end_of_ADC_vConversionCompleted:
  4182                           	callstack 0
  4183   000792  FFFF               	dw	65535	; assembler added errata NOP
  4184                           
  4185                           	psect	text42
  4186   000000                     __ptext42:
  4187                           	callstack 0
  4188                           
  4189                           	psect	rparam
  4190   000000                     
  4191                           	psect	temp
  4192   00004F                     btemp:
  4193                           	callstack 0
  4194   00004F                     	ds	1
  4195   000000                     int$flags	set	btemp
  4196   000000                     wtemp8	set	btemp+1
  4197   000000                     ttemp5	set	btemp+1
  4198   000000                     ttemp6	set	btemp+4
  4199   000000                     ttemp7	set	btemp+8
  4200                           
  4201                           	psect	idloc
  4202                           
  4203                           ;Config register IDLOC0 @ 0x200000
  4204                           ;	unspecified, using default values
  4205   200000                     	org	2097152
  4206   200000  FF                 	db	255
  4207                           
  4208                           ;Config register IDLOC1 @ 0x200001
  4209                           ;	unspecified, using default values
  4210   200001                     	org	2097153
  4211   200001  FF                 	db	255
  4212                           
  4213                           ;Config register IDLOC2 @ 0x200002
  4214                           ;	unspecified, using default values
  4215   200002                     	org	2097154
  4216   200002  FF                 	db	255
  4217                           
  4218                           ;Config register IDLOC3 @ 0x200003
  4219                           ;	unspecified, using default values
  4220   200003                     	org	2097155
  4221   200003  FF                 	db	255
  4222                           
  4223                           ;Config register IDLOC4 @ 0x200004
  4224                           ;	unspecified, using default values
  4225   200004                     	org	2097156
  4226   200004  FF                 	db	255
  4227                           
  4228                           ;Config register IDLOC5 @ 0x200005
  4229                           ;	unspecified, using default values
  4230   200005                     	org	2097157
  4231   200005  FF                 	db	255
  4232                           
  4233                           ;Config register IDLOC6 @ 0x200006
  4234                           ;	unspecified, using default values
  4235   200006                     	org	2097158
  4236   200006  FF                 	db	255
  4237                           
  4238                           ;Config register IDLOC7 @ 0x200007
  4239                           ;	unspecified, using default values
  4240   200007                     	org	2097159
  4241   200007  FF                 	db	255
  4242                           
  4243                           	psect	config
  4244                           
  4245                           ; Padding undefined space
  4246   300000                     	org	3145728
  4247   300000  FF                 	db	255
  4248                           
  4249                           ;Config register CONFIG1H @ 0x300001
  4250                           ;	unspecified, using default values
  4251                           ;	Oscillator
  4252                           ;	OSC = 0xF, unprogrammed default
  4253                           ;	Osc. Switch Enable
  4254                           ;	OSCS = 0x1, unprogrammed default
  4255   300001                     	org	3145729
  4256   300001  2F                 	db	47
  4257                           
  4258                           ;Config register CONFIG2L @ 0x300002
  4259                           ;	unspecified, using default values
  4260                           ;	Power Up Timer
  4261                           ;	PWRT = 0x1, unprogrammed default
  4262                           ;	Brown Out Detect
  4263                           ;	BOR = 0x1, unprogrammed default
  4264                           ;	Brown Out Voltage
  4265                           ;	BORV = 0x3, unprogrammed default
  4266   300002                     	org	3145730
  4267   300002  0F                 	db	15
  4268                           
  4269                           ;Config register CONFIG2H @ 0x300003
  4270                           ;	unspecified, using default values
  4271                           ;	Watchdog Timer
  4272                           ;	WDT = 0x1, unprogrammed default
  4273                           ;	Watchdog Postscaler
  4274                           ;	WDTPS = 0xF, unprogrammed default
  4275   300003                     	org	3145731
  4276   300003  1F                 	db	31
  4277                           
  4278                           ;Config register CONFIG3L @ 0x300004
  4279                           ;	unspecified, using default values
  4280   300004                     	org	3145732
  4281   300004  83                 	db	131
  4282                           
  4283                           ;Config register CONFIG3H @ 0x300005
  4284                           ;	unspecified, using default values
  4285                           ;	CCP2 Mux
  4286                           ;	CCP2MX = 0x1, unprogrammed default
  4287                           ;	MCLR enable
  4288                           ;	MCLRE = 0x1, unprogrammed default
  4289   300005                     	org	3145733
  4290   300005  83                 	db	131
  4291                           
  4292                           ;Config register CONFIG4L @ 0x300006
  4293                           ;	unspecified, using default values
  4294                           ;	Stack Overflow Reset
  4295                           ;	STVR = 0x1, unprogrammed default
  4296                           ;	Low Voltage Program
  4297                           ;	LVP = 0x1, unprogrammed default
  4298                           ;	Background Debugger Enable bit
  4299                           ;	DEBUG = 0x1, unprogrammed default
  4300   300006                     	org	3145734
  4301   300006  85                 	db	133
  4302                           
  4303                           ; Padding undefined space
  4304   300007                     	org	3145735
  4305   300007  FF                 	db	255
  4306                           
  4307                           ;Config register CONFIG5L @ 0x300008
  4308                           ;	unspecified, using default values
  4309                           ;	Code Protect 000800-0003FFF
  4310                           ;	CP0 = 0x1, unprogrammed default
  4311                           ;	Code Protect 0004000-007FFF
  4312                           ;	CP1 = 0x1, unprogrammed default
  4313                           ;	Code Protect 008000-00BFFF
  4314                           ;	CP2 = 0x1, unprogrammed default
  4315   300008                     	org	3145736
  4316   300008  0F                 	db	15
  4317                           
  4318                           ;Config register CONFIG5H @ 0x300009
  4319                           ;	unspecified, using default values
  4320                           ;	Code Protect Boot
  4321                           ;	CPB = 0x1, unprogrammed default
  4322                           ;	Data EE Read Protect
  4323                           ;	CPD = 0x1, unprogrammed default
  4324   300009                     	org	3145737
  4325   300009  C0                 	db	192
  4326                           
  4327                           ;Config register CONFIG6L @ 0x30000A
  4328                           ;	unspecified, using default values
  4329                           ;	Table Write Protect 00800-003FFF
  4330                           ;	WRT0 = 0x1, unprogrammed default
  4331                           ;	Table Write Protect 004000-007FFF
  4332                           ;	WRT1 = 0x1, unprogrammed default
  4333                           ;	Table Write Protect 08000-0BFFF
  4334                           ;	WRT2 = 0x1, unprogrammed default
  4335   30000A                     	org	3145738
  4336   30000A  0F                 	db	15
  4337                           
  4338                           ;Config register CONFIG6H @ 0x30000B
  4339                           ;	unspecified, using default values
  4340                           ;	Config. Write Protect
  4341                           ;	WRTC = 0x1, unprogrammed default
  4342                           ;	Table Write Protect Boot
  4343                           ;	WRTB = 0x1, unprogrammed default
  4344                           ;	Data EE Write Protect
  4345                           ;	WRTD = 0x1, unprogrammed default
  4346   30000B                     	org	3145739
  4347   30000B  E0                 	db	224
  4348                           
  4349                           ;Config register CONFIG7L @ 0x30000C
  4350                           ;	unspecified, using default values
  4351                           ;	Table Read Protect 00800-003FFF
  4352                           ;	EBTR0 = 0x1, unprogrammed default
  4353                           ;	Table Read Protect 004000-07FFF
  4354                           ;	EBTR1 = 0x1, unprogrammed default
  4355                           ;	Table Read Protect 08000-0BFFF
  4356                           ;	EBTR2 = 0x1, unprogrammed default
  4357   30000C                     	org	3145740
  4358   30000C  0F                 	db	15
  4359                           
  4360                           ;Config register CONFIG7H @ 0x30000D
  4361                           ;	unspecified, using default values
  4362                           ;	Table Read Protect Boot
  4363                           ;	EBTRB = 0x1, unprogrammed default
  4364   30000D                     	org	3145741
  4365   30000D  40                 	db	64
  4366                           tosu	equ	0xFFF
  4367                           tosh	equ	0xFFE
  4368                           tosl	equ	0xFFD
  4369                           stkptr	equ	0xFFC
  4370                           pclatu	equ	0xFFB
  4371                           pclath	equ	0xFFA
  4372                           pcl	equ	0xFF9
  4373                           tblptru	equ	0xFF8
  4374                           tblptrh	equ	0xFF7
  4375                           tblptrl	equ	0xFF6
  4376                           tablat	equ	0xFF5
  4377                           prodh	equ	0xFF4
  4378                           prodl	equ	0xFF3
  4379                           indf0	equ	0xFEF
  4380                           postinc0	equ	0xFEE
  4381                           postdec0	equ	0xFED
  4382                           preinc0	equ	0xFEC
  4383                           plusw0	equ	0xFEB
  4384                           fsr0h	equ	0xFEA
  4385                           fsr0l	equ	0xFE9
  4386                           wreg	equ	0xFE8
  4387                           indf1	equ	0xFE7
  4388                           postinc1	equ	0xFE6
  4389                           postdec1	equ	0xFE5
  4390                           preinc1	equ	0xFE4
  4391                           plusw1	equ	0xFE3
  4392                           fsr1h	equ	0xFE2
  4393                           fsr1l	equ	0xFE1
  4394                           bsr	equ	0xFE0
  4395                           indf2	equ	0xFDF
  4396                           postinc2	equ	0xFDE
  4397                           postdec2	equ	0xFDD
  4398                           preinc2	equ	0xFDC
  4399                           plusw2	equ	0xFDB
  4400                           fsr2h	equ	0xFDA
  4401                           fsr2l	equ	0xFD9
  4402                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      78
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    S1029s_HeadLightStateMachine$_pollEvents	PTR FTN()void  size(2) Largest target is 1
		 -> SGL_HeadLightEventPoll(), 

    headLightSM._pollEvents	PTR FTN()void  size(2) Largest target is 1
		 -> SGL_HeadLightEventPoll(), 

    S1029s_HeadLightStateMachine$_currentState	PTR FTN()void  size(2) Largest target is 1
		 -> SGL_HeadLightActiveState(), SGL_HeadLightPasiveState(), 

    headLightSM._currentState	PTR FTN()void  size(2) Largest target is 1
		 -> SGL_HeadLightActiveState(), SGL_HeadLightPasiveState(), 

    SGL_toggleSideHazardLights@toggle	PTR unsigned char  size(2) Largest target is 1
		 -> SGL_BlinkSwitchOnState@toggleLights(COMRAM[1]), 

    SGL_toggleAllHazardLights@toggle	PTR unsigned char  size(2) Largest target is 1
		 -> SGL_BlinkPasiveState@toggleLights(COMRAM[1]), 

    S934s_blinkStateMachine$_pollEvents	PTR FTN()void  size(2) Largest target is 1
		 -> SGL_BlinkEventPoll(), 

    blinkerSM._pollEvents	PTR FTN()void  size(2) Largest target is 1
		 -> SGL_BlinkEventPoll(), 

    S934s_blinkStateMachine$_currentState	PTR FTN()void  size(2) Largest target is 1
		 -> SGL_BlinkSwitchOffState(), SGL_BlinkSwitchOnState(), SGL_BlinkPasiveState(), 

    blinkerSM._currentState	PTR FTN()void  size(2) Largest target is 1
		 -> SGL_BlinkSwitchOffState(), SGL_BlinkSwitchOnState(), SGL_BlinkPasiveState(), 

    S26s_stateMachine$_pollEvents	PTR FTN()void  size(2) Largest target is 1
		 -> LIGHTS_DemoEventPoll(), 

    demoSM._pollEvents	PTR FTN()void  size(2) Largest target is 1
		 -> LIGHTS_DemoEventPoll(), 

    S26s_stateMachine$_currentState	PTR FTN()void  size(2) Largest target is 1
		 -> LIGHTS_DemoState2(), LIGHTS_DemoState1(), 

    demoSM._currentState	PTR FTN()void  size(2) Largest target is 1
		 -> LIGHTS_DemoState2(), LIGHTS_DemoState1(), 


Critical Paths under _main in COMRAM

    _LIGHTS_BrakeInit->_IOC_vSetOutputPort
    _SGL_BlinkSwitchOnState->_SGL_toggleSideHazardLights
    _SGL_toggleSideHazardLights->_IOC_vSetOutputPort
    _SGL_setSideHazardLights->_IOC_vSetOutputPort
    _SGL_BlinkSwitchOffState->_SGL_setAllHazardLights
    _SGL_BlinkPasiveState->_SGL_toggleAllHazardLights
    _SGL_toggleAllHazardLights->_IOC_vSetOutputPort
    _SGL_setAllHazardLights->_IOC_vSetOutputPort
    _SGL_BlinkEventPoll->_IOC_T16GetInputPort
    _LIGHTS_BrakeRun->_IOC_vSetOutputPort
    _SGL_HeadLightPasiveState->_SGL_isNight
    _SGL_isNight->___ftge
    ___lwtoft->___ftpack
    ___ftge->___lwtoft
    _SGL_HeadLightEventPoll->_IOC_T16GetInputPort
    _IOC_T16GetInputPort->_PCS_T16GetInputPortC
    _SGL_HeadLightActiveState->_IOC_vSetOutputPort
    _IOC_vSetOutputPort->_IOC_T16GetInputPort

Critical Paths under _INT_vInterruptHandler in COMRAM

    _INT_vInterruptHandler->_ADC_vConversionCompleted

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT_vInterruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT_vInterruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT_vInterruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT_vInterruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT_vInterruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT_vInterruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT_vInterruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT_vInterruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT_vInterruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT_vInterruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT_vInterruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT_vInterruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT_vInterruptHandler in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   69436
                  _SCHED_vInitSystem
              _SCHED_vStartScheduler
 ---------------------------------------------------------------------------------
 (1) _SCHED_vStartScheduler                                0     0      0   69436
                    _TASK_vTask100ms
                     _TASK_vTask10ms
                      _TASK_vTask1ms
                       _TASK_vTask1s
                  _TASK_vTaskAppInit
 ---------------------------------------------------------------------------------
 (2) _TASK_vTaskAppInit                                    0     0      0    6247
                   _LIGHTS_BrakeInit
                _LIGHTS_HeadLampInit
                   _SGL_BlinkersInit
 ---------------------------------------------------------------------------------
 (3) _SGL_BlinkersInit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LIGHTS_HeadLampInit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LIGHTS_BrakeInit                                     0     0      0    6247
                 _IOC_vSetOutputPort
 ---------------------------------------------------------------------------------
 (2) _TASK_vTask1s                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TASK_vTask1ms                                        0     0      0   46437
                    _LIGHTS_BrakeRun
                    _SGL_BlinkersRun
 ---------------------------------------------------------------------------------
 (3) _SGL_BlinkersRun                                      0     0      0   39318
                 _SGL_BlinkEventPoll *
               _SGL_BlinkPasiveState *
            _SGL_BlinkSwitchOffState *
             _SGL_BlinkSwitchOnState *
 ---------------------------------------------------------------------------------
 (4) _SGL_BlinkSwitchOnState                               0     0      0   19321
             _SGL_setAllHazardLights
            _SGL_setSideHazardLights
         _SGL_toggleSideHazardLights
 ---------------------------------------------------------------------------------
 (5) _SGL_toggleSideHazardLights                           3     0      3    6553
                                             28 COMRAM     3     0      3
                 _IOC_vSetOutputPort
 ---------------------------------------------------------------------------------
 (5) _SGL_setSideHazardLights                              2     1      1    6433
                                             28 COMRAM     2     1      1
                 _IOC_vSetOutputPort
 ---------------------------------------------------------------------------------
 (4) _SGL_BlinkSwitchOffState                              0     0      0    6335
             _SGL_setAllHazardLights
 ---------------------------------------------------------------------------------
 (4) _SGL_BlinkPasiveState                                 0     0      0   12790
             _SGL_setAllHazardLights
          _SGL_toggleAllHazardLights
 ---------------------------------------------------------------------------------
 (5) _SGL_toggleAllHazardLights                            2     0      2    6455
                                             28 COMRAM     2     0      2
                 _IOC_vSetOutputPort
 ---------------------------------------------------------------------------------
 (5) _SGL_setAllHazardLights                               1     1      0    6335
                                             28 COMRAM     1     1      0
                 _IOC_vSetOutputPort
 ---------------------------------------------------------------------------------
 (4) _SGL_BlinkEventPoll                                   0     0      0     872
                _IOC_T16GetInputPort
 ---------------------------------------------------------------------------------
 (3) _LIGHTS_BrakeRun                                      0     0      0    7119
                _IOC_T16GetInputPort
                 _IOC_vSetOutputPort
 ---------------------------------------------------------------------------------
 (2) _TASK_vTask10ms                                       0     0      0   16752
                 _LIGHTS_HeadLampRun
 ---------------------------------------------------------------------------------
 (3) _LIGHTS_HeadLampRun                                   0     0      0   16752
           _SGL_HeadLightActiveState *
             _SGL_HeadLightEventPoll *
           _SGL_HeadLightPasiveState *
 ---------------------------------------------------------------------------------
 (4) _SGL_HeadLightPasiveState                             0     0      0    9633
                 _IOC_vSetOutputPort
                        _SGL_isNight
 ---------------------------------------------------------------------------------
 (5) _SGL_isNight                                          2     2      0    3386
                                             27 COMRAM     2     2      0
                             ___ftge
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (6) ___lwtoft                                             3     0      3    2901
                                             15 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    2727
                                              7 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (6) ___ftge                                               9     3      6     440
                                             18 COMRAM     9     3      6
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) _SGL_HeadLightEventPoll                               0     0      0     872
                _IOC_T16GetInputPort
 ---------------------------------------------------------------------------------
 (5) _IOC_T16GetInputPort                                  6     4      2     872
                                             17 COMRAM     6     4      2
                _ADC_u16ReadAdcValue
               _PCS_T16GetInputPortC
 ---------------------------------------------------------------------------------
 (6) _PCS_T16GetInputPortC                                10     8      2     113
                                              7 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (6) _ADC_u16ReadAdcValue                                  6     4      2      91
                                              7 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _SGL_HeadLightActiveState                             0     0      0    6247
                 _IOC_vSetOutputPort
 ---------------------------------------------------------------------------------
 (4) _IOC_vSetOutputPort                                   5     2      3    6247
                                             23 COMRAM     5     2      3
                _IOC_T16GetInputPort (ARG)
                _PCS_vSetOutputPortD
                _PCS_vSetOutputPortE
 ---------------------------------------------------------------------------------
 (5) _PCS_vSetOutputPortE                                  8     7      1     234
                                              7 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (5) _PCS_vSetOutputPortD                                  8     7      1     234
                                              7 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (2) _TASK_vTask100ms                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SCHED_vInitSystem                                    0     0      0       0
                          _ADC_vInit
                          _INT_vInit
                          _PCS_vInit
                          _TIM_vInit
 ---------------------------------------------------------------------------------
 (2) _TIM_vInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PCS_vInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INT_vInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_vInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INT_vInterruptHandler                                4     4      0       0
                                              3 COMRAM     4     4      0
           _ADC_vConversionCompleted
            _SCHED_vTickFunctionCall
 ---------------------------------------------------------------------------------
 (9) _SCHED_vTickFunctionCall                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ADC_vConversionCompleted                             3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SCHED_vInitSystem
     _ADC_vInit
     _INT_vInit
     _PCS_vInit
     _TIM_vInit
   _SCHED_vStartScheduler
     _TASK_vTask100ms
     _TASK_vTask10ms
       _LIGHTS_HeadLampRun
         _SGL_HeadLightActiveState *
           _IOC_vSetOutputPort
             _IOC_T16GetInputPort (ARG)
               _ADC_u16ReadAdcValue
               _PCS_T16GetInputPortC
             _PCS_vSetOutputPortD (ARG)
             _PCS_vSetOutputPortE (ARG)
         _SGL_HeadLightEventPoll *
           _IOC_T16GetInputPort
         _SGL_HeadLightPasiveState *
           _IOC_vSetOutputPort
           _SGL_isNight
             ___ftge
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft
     _TASK_vTask1ms
       _LIGHTS_BrakeRun
         _IOC_T16GetInputPort
         _IOC_vSetOutputPort
       _SGL_BlinkersRun
         _SGL_BlinkEventPoll *
           _IOC_T16GetInputPort
         _SGL_BlinkPasiveState *
           _SGL_setAllHazardLights
             _IOC_vSetOutputPort
           _SGL_toggleAllHazardLights
             _IOC_vSetOutputPort
         _SGL_BlinkSwitchOffState *
           _SGL_setAllHazardLights
         _SGL_BlinkSwitchOnState *
           _SGL_setAllHazardLights
           _SGL_setSideHazardLights
             _IOC_vSetOutputPort
           _SGL_toggleSideHazardLights
             _IOC_vSetOutputPort
     _TASK_vTask1s
     _TASK_vTaskAppInit
       _LIGHTS_BrakeInit
         _IOC_vSetOutputPort
       _LIGHTS_HeadLampInit
       _SGL_BlinkersInit

 _INT_vInterruptHandler (ROOT)
   _ADC_vConversionCompleted
   _SCHED_vTickFunctionCall

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      39        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllll      282      0       0      38        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1F      4E       1       83.0%
BITBIGSFRhlhh       25      0       0      32        0.0%
BITBIGSFRlh         20      0       0      34        0.0%
BITBIGSFRlllh        D      0       0      37        0.0%
BITBIGSFRhh          D      0       0      31        0.0%
BITBIGSFRllhh        6      0       0      35        0.0%
BITBIGSFRhll         5      0       0      33        0.0%
BITBIGSFRllhl        1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4E       6        0.0%
DATA                 0      0      4E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Nov 19 21:52:13 2022

                                                  ?_SGL_BlinkSwitchOnState 002E  
                                                 ?_SGL_BlinkSwitchOffState 002E  
                                         SGL_BlinkSwitchOnState@firstEntry 004D  
                                                                       l61 0A42  
                                                                       l59 0A3A  
                                                     ?_LIGHTS_HeadLampInit 002E  
                                                                      l111 05EC  
                                                                      l120 056E  
                                                                      l114 0636  
                                                                      l123 05B8  
                                                                      l109 05E4  
                                                                      l118 0566  
                                                                      l214 0A9C  
                                                                      l127 07A8  
                                                                      l129 07B0  
                                                                      l309 0114  
                                                                      l318 0994  
                                                                      l352 04BA  
                                                                      l360 03AA  
                                                                      l273 0942  
                                                                      l291 028A  
                                                                      l365 031A  
                                                                      l651 01D8  
                                                                      l726 053A  
                                                                      _PR2 000FCB  
                                                                      u900 05D0  
                                                                      u934 060A  
                                                                      u950 054E  
                                                                      u935 0604  
                                                                      u944 062A  
                                                                      u960 0552  
                                                                      u945 0624  
                                                                      u890 05CC  
                                                                      u994 058C  
                                                                      u995 0586  
                                                                      prod 000FF3  
                                                                      tosl 000FFD  
                                                                      wreg 000FE8  
                                                                     l2044 0B68  
                                                                     l2066 06D6  
                                                                     l2084 070E  
                                                                     l2078 06FC  
                                                                     l1704 0598  
                                                                     l1800 08E6  
                                                                     l1722 0180  
                                                                     l1714 013C  
                                                                     l1724 01A0  
                                                                     l1716 0148  
                                                                     l1812 03EA  
                                                                     l1726 01AC  
                                                                     l1718 0168  
                                                                     l1822 0920  
                                                                     l1814 041C  
                                                                     l1902 0066  
                                                                     l1746 0A86  
                                                                     l1770 04E4  
                                                                     l1930 00DA  
                                                                     l1914 00A4  
                                                                     l1692 0616  
                                                                     l1780 0536  
                                                                     l1836 047E  
                                                                     l1916 00AA  
                                                                     l1908 007C  
                                                                     l1774 0508  
                                                                     l1846 04B6  
                                                                     l1870 0232  
                                                                     l1960 097C  
                                                                     l1880 0252  
                                                                     l1864 020E  
                                                                     l1872 023A  
                                                                     l1856 01F6  
                                                                     l1954 0960  
                                                                     l1796 08CC  
                                                                     l1980 0370  
                                                                     l1982 0382  
                                                                     l1976 0352  
                                                                     l1996 02D2  
                                                  ?_SGL_HeadLightEventPoll 002E  
                                                                     u1004 05AC  
                                                                     u1020 012C  
                                                                     u1005 05A6  
                                                                     u1060 01B8  
                                                                     u1134 07CC  
                                                                     u1310 0260  
                                                                     u1135 07C6  
                                                                     u1144 07E2  
                                                                     u1145 07DC  
                                                                     u1430 098A  
                                                                     u1508 0800  
                                                                     u1509 0818  
                                                                     u1528 082A  
                                                                     u1529 0842  
                                                                     u1707 0A1A  
                                                                     u1558 0856  
                                                                     u1559 086E  
                                                                     u1578 0880  
                                                                     u1579 0898  
                                                                     i2l88 0034  
                                                                     _TMR2 000FCC  
                                                 ??_SGL_setAllHazardLights 004A  
                                                                     _main 0C9A  
                                                             ___ftpack@arg 0035  
                                                             ___ftpack@exp 0038  
                                                                     fsr2h 000FDA  
                                                                     indf2 000FDF  
                                                                     fsr2l 000FD9  
                                                                     btemp 004F  
                                           PCS_vSetOutputPortD@u8BitNumber 003B  
                                                                     prodh 000FF4  
                                                                     prodl 000FF3  
                                                                     start 004C  
                                                    ?_PCS_T16GetInputPortC 0035  
                                           __end_of_SGL_BlinkSwitchOnState 011A  
                                                          _LIGHTS_BrakeRun 0B3E  
                                                             ___param_bank 000000  
                                                    _INT_vInterruptHandler 0008  
                                         __end_of_SGL_HeadLightPasiveState 03B0  
                                                    ??_LIGHTS_HeadLampInit 0035  
                                          __end_of_SCHED_vTickFunctionCall 0C74  
                                                                    ?_main 002E  
                                                       _IOC_vSetOutputPort 0A64  
                                                                    _T2CON 000FCA  
                                                                    _PORTC 000F82  
                                                                    _PORTD 000F83  
                                                                    _PORTE 000F84  
                                                                    _TRISD 000F95  
                                                         ?_SGL_BlinkersRun 002E  
                                                      ?_IOC_vSetOutputPort 0045  
                                           __end_of_SGL_HeadLightEventPoll 0BEE  
                                                            ___ftpack@sign 0039  
                                                                    pclath 000FFA  
                                                                    tablat 000FF5  
                                                                    ttemp5 0050  
                                                                    ttemp6 0053  
                                                                    ttemp7 0057  
                                                                    status 000FD8  
                                                        __end_of_ADC_vInit 0A26  
                                                                    wtemp8 0050  
                                           PCS_vSetOutputPortE@u8BitNumber 003B  
                                          __end_of_SGL_BlinkSwitchOffState 099A  
                                                         _LIGHTS_BrakeInit 0C32  
                                                          __initialization 0B0C  
                                                     ??_IOC_vSetOutputPort 0048  
                                                             __end_of_main 0CA8  
                                            __end_of_SCHED_vStartScheduler 072E  
                                                                   ??_main 004D  
                                                            __activetblptr 000002  
                                      PCS_vSetOutputPortD@u8BitNumberValue 003C  
                                                    __end_of_TASK_vTask1ms 0CB6  
                                                                   _ADRESH 000FC4  
                                                                   _ADRESL 000FC3  
                                                         __end_of___ftpack 01DE  
                                                                   i2l1666 0026  
                                                         __end_of___lwtoft 0C16  
                                                  __end_of_LIGHTS_BrakeRun 0B70  
                                                   ??_PCS_T16GetInputPortC 0037  
                                                        __end_of_INT_vInit 0C88  
                                                        __end_of_PCS_vInit 0C32  
                                               __end_of_LIGHTS_HeadLampRun 089E  
                                                   ?_INT_vInterruptHandler 002E  
                                                        ?_SGL_BlinkersInit 002E  
                                                                   ___ftge 04C0  
                                       IOC_vSetOutputPort@u16ChannelSelect 0045  
                                                                   _demoSM 0013  
                                             ??_SGL_toggleSideHazardLights 004D  
                                                       ??_SGL_BlinkersInit 0035  
                                                                   clear_0 0B2A  
                                                                   isa$std 000001  
                                                 _SGL_HeadLightPasiveState 0320  
                                                        __end_of_TIM_vInit 0B0C  
                                                             __pdataCOMRAM 004D  
                                                ?_ADC_vConversionCompleted 002E  
                                      IOC_T16GetInputPort@u16ChannelSelect 003F  
                                                             ?_SGL_isNight 002E  
                                                                   tblptrh 000FF7  
                                                                   tblptrl 000FF6  
                                                                   tblptru 000FF8  
                                               ??_SGL_HeadLightActiveState 004A  
                                              SGL_setSideHazardLights@side 004A  
                                              __end_of_IOC_T16GetInputPort 08F4  
                                                        _SCHED_vInitSystem 0C48  
                                                               __accesstop 0060  
                                                  __end_of__initialization 0B30  
                                                        _TASK_vTaskAppInit 0C88  
                                              __end_of_PCS_vSetOutputPortD 063C  
                                              __end_of_PCS_vSetOutputPortE 05BE  
                                                               ___ftge@ff1 0040  
                                                               ___ftge@ff2 0043  
                                                        _LIGHTS_DemoState1 000000  
                                                        _LIGHTS_DemoState2 000000  
                                                       ?_SCHED_vInitSystem 002E  
                                                            ___rparam_used 000001  
                                                       ?_TASK_vTaskAppInit 002E  
                                                           __pcstackCOMRAM 002E  
                                                      ??_SCHED_vInitSystem 0035  
                                                           _TASK_vTask10ms 0CB6  
                                                      ??_TASK_vTaskAppInit 004A  
                                                   _SGL_setAllHazardLights 099A  
                                                               ___lwtoft@c 003D  
                                                  _SGL_setSideHazardLights 08F4  
                                             SGL_isNight@currentLightLevel 0049  
                                                        ??_TASK_vTask100ms 0035  
                                                __end_of_SCHED_vInitSystem 0C5E  
                                                __end_of_TASK_vTaskAppInit 0C9A  
                                                         ?_LIGHTS_BrakeRun 002E  
                                         SGL_BlinkPasiveState@toggleLights 002D  
                                      PCS_vSetOutputPortE@u8BitNumberValue 003C  
                                                   __end_of_TASK_vTask10ms 0CC0  
                                                                  ?___ftge 0040  
                                                   LIGHTS_BrakeRun@counter 0028  
                                                                ?___ftpack 0035  
                                                            ?_TASK_vTask1s 002E  
                                                                ?___lwtoft 003D  
                                                 __end_of_LIGHTS_BrakeInit 0C48  
                                                                  i2u70_40 074E  
                                                                  i2u71_40 0776  
                                                                  i2u70_48 0752  
                                                                  i2u72_48 077A  
                                               __end_of_SGL_BlinkEventPoll 0AD8  
                                              __end_of_LIGHTS_HeadLampInit 0BC4  
                                                                  __Hparam 0000  
                                                                  __Lparam 0000  
                                                                _ADC_vInit 09E2  
                                                          ?_TASK_vTask10ms 002E  
                                       __end_of_SGL_toggleSideHazardLights 0438  
                                               _SGL_toggleSideHazardLights 03B0  
                                         IOC_vSetOutputPort@u16ChannelMask 0048  
                                                ??_SGL_setSideHazardLights 004B  
                                                           ??_TASK_vTask1s 0035  
                                                                  __pcinit 0B0C  
                                                               ??___ftpack 003A  
                                                                  __ramtop 1000  
                                                                  __ptext0 0C9A  
                                                                  __ptext1 06B8  
                                                                  __ptext2 0C88  
                                                                  __ptext3 0B70  
                                                                  __ptext4 0B9A  
                                                                  __ptext5 0C32  
                                                                  __ptext6 0CC0  
                                                                  __ptext7 0CA8  
                                                                  __ptext8 07F2  
                                                                  __ptext9 01DE  
                                                               ??___lwtoft 0040  
                                                  _PCS_vSetOutputPortD$706 0038  
                                                  _PCS_vSetOutputPortE$712 0038  
                                                                _T2CONbits 000FCA  
                                                     end_of_initialization 0B30  
                                                            _sched_bTicked 0023  
                                                            _sched_gTick1s 0025  
                                                  _SCHED_vTickFunctionCall 0C5E  
                                                            __Lmediumconst 0000  
                                                  ??_INT_vInterruptHandler 0031  
                                                               ?_ADC_vInit 002E  
                                       SGL_BlinkSwitchOnState@toggleLights 002C  
                                               ??_SGL_HeadLightPasiveState 004B  
                                         __end_of_ADC_vConversionCompleted 0792  
                                                      _ADC_u16ReadAdcValue 0A26  
                                                                  postdec2 000FDD  
                                               ?_SGL_toggleAllHazardLights 004A  
                                                                _INT_vInit 0C74  
                                                                  postinc0 000FEE  
                                                                  postinc2 000FDE  
                                           SGL_BlinkPasiveState@firstEntry 004E  
                                                                _PCS_vInit 0C16  
                                             SGL_setSideHazardLights@value 004B  
                                                       _LIGHTS_HeadLampRun 0848  
                                                    _SCHED_vStartScheduler 06B8  
                                                  _SGL_BlinkSwitchOffState 0948  
                                                                _TRISAbits 000F92  
                                                                _TRISCbits 000F94  
                                                                _TRISEbits 000F96  
                                                                _TIM_vInit 0AD8  
                                                     ?_ADC_u16ReadAdcValue 0035  
                                                      ?_LIGHTS_HeadLampRun 002E  
                                                 ??_SGL_BlinkSwitchOnState 004D  
                                                  _ADC_u16ReadAdcValue$374 0037  
                                                  ?_SGL_setAllHazardLights 002E  
                                                               ?_INT_vInit 002E  
                                                     ??_LIGHTS_HeadLampRun 004B  
                                        __end_of_SGL_toggleAllHazardLights 06B8  
                                          SGL_toggleAllHazardLights@toggle 004A  
                                                           __end_of___ftge 0540  
                                                               ?_PCS_vInit 002E  
                                                          _TASK_vTask100ms 0CC6  
                                                            __pidataCOMRAM 0CCC  
                                                 ??_SGL_HeadLightEventPoll 0045  
                                              SGL_BlinkPasiveState@counter 0021  
                                                      start_initialization 0B0C  
                                                    ??_ADC_u16ReadAdcValue 0037  
                                                               ?_TIM_vInit 002E  
                                                     SGL_isNight@prevState 0027  
                                             __end_of_SGL_BlinkPasiveState 0290  
                                                ??_SCHED_vTickFunctionCall 002E  
                                                         _sched_gTick100ms 002A  
                                                     __end_of_TASK_vTask1s 0CC6  
                                           __end_of_SGL_setAllHazardLights 09E2  
                                                              ??_ADC_vInit 0035  
                                                ?_SGL_HeadLightActiveState 002E  
                                                                 ??___ftge 0046  
                                                        ??_SGL_BlinkersRun 004D  
                                                 _ADC_vConversionCompleted 072E  
                                                ??_SGL_BlinkSwitchOffState 004B  
                                                   ?_SCHED_vStartScheduler 002E  
                                               PCS_vSetOutputPortD@u8Value 0035  
                                                              __pbssCOMRAM 0001  
                                               PCS_vSetOutputPortE@u8Value 0035  
                                     PCS_T16GetInputPortC@u8BitNumberValue 003E  
                                                        ?_LIGHTS_BrakeInit 002E  
                                                            _TASK_vTask1ms 0CA8  
                                              IOC_T16GetInputPort@pinValue 0041  
                                                              _headLightSM 0001  
                                                       ??_LIGHTS_BrakeInit 004A  
                                                         ??_TASK_vTask10ms 004B  
                                                  __end_of_TASK_vTask100ms 0CCC  
                                                       _SGL_BlinkEventPoll 0AA2  
                                                                __pintcode 0008  
                                                                _blinkerSM 000A  
                                                              ??_INT_vInit 0035  
                                              ?_SGL_toggleSideHazardLights 004A  
                                                              ??_PCS_vInit 0035  
                                                      ?_SGL_BlinkEventPoll 002E  
                                               SGL_BlinkSwitchOnState@side 0029  
                                                         _SGL_BlinkersInit 0B70  
                                                              ??_TIM_vInit 0035  
                                                           ?_TASK_vTask1ms 002E  
                                                     ??_SGL_BlinkEventPoll 0045  
                                                                 _IPR1bits 000F9F  
                                                                 _PIE1bits 000F9D  
                                            __end_of_INT_vInterruptHandler 004C  
                                                                 _PIR1bits 000F9E  
                                            PCS_vSetOutputPortD@u8BitValue 003A  
                                          PCS_T16GetInputPortC@u8BitNumber 003D  
                                              ??_SGL_toggleAllHazardLights 004C  
                                                     _SGL_BlinkPasiveState 01DE  
                                        ADC_u16ReadAdcValue@U8ChannelValue 0039  
                                                   _SGL_BlinkSwitchOnState 0050  
                                                               _ADCON0bits 000FC2  
                                                               _ADCON1bits 000FC1  
                                                               _ADCON2bits 000FC0  
                                                            ??_SGL_isNight 0049  
                                           SGL_toggleSideHazardLights@side 004C  
                                            PCS_vSetOutputPortE@u8BitValue 003A  
                                                   _SGL_HeadLightEventPoll 0BC4  
                                             ADC_u16ReadAdcValue@U8Channel 003A  
                                                          _sched_gTick10ms 002B  
                                               __end_of_IOC_vSetOutputPort 0AA2  
                                                                 __Hrparam 0000  
                                                         ?_TASK_vTask100ms 002E  
                                                                 __Lrparam 0000  
                                                 ?_SGL_setSideHazardLights 004A  
                                                    ?_SGL_BlinkPasiveState 002E  
                                        IOC_T16GetInputPort@u16ChannelMask 0043  
                                                                 ___ftpack 011A  
                                                             _TASK_vTask1s 0CC0  
                                                                 ___lwtoft 0BEE  
                                                        ??_LIGHTS_BrakeRun 004A  
                                             __end_of_PCS_T16GetInputPortC 07F2  
                                                          ??_TASK_vTask1ms 004D  
                                                ?_SGL_HeadLightPasiveState 002E  
                                                      _IOC_T16GetInputPort 089E  
                                                                 __ptext10 0948  
                                                                 __ptext11 0050  
                                                                 __ptext20 0290  
                                                                 __ptext12 03B0  
                                                                 __ptext21 0320  
                                                                 __ptext13 08F4  
                                                                 __ptext30 0A64  
                                                                 __ptext22 0438  
                                                                 __ptext14 063C  
                                                                 __ptext31 0540  
                                                                 __ptext23 0BEE  
                                                                 __ptext15 099A  
                                                                 __ptext40 0C5E  
                                                                 __ptext32 05BE  
                                                                 __ptext24 011A  
                                                                 __ptext16 0AA2  
                                                                 __ptext41 072E  
                                                                 __ptext33 0CC6  
                                                                 __ptext25 04C0  
                                                                 __ptext17 0B3E  
                                                                 __ptext42 0000  
                                                                 __ptext34 0C48  
                                                                 __ptext26 0BC4  
                                                                 __ptext18 0CB6  
                                                                 __ptext35 0AD8  
                                                                 __ptext27 089E  
                                                                 __ptext19 0848  
                                                                 __ptext36 0C16  
                                                                 __ptext28 0794  
                                                                 __ptext37 0C74  
                                                                 __ptext29 0A26  
                                                                 __ptext38 09E2  
                                                _SGL_toggleAllHazardLights 063C  
                                         SGL_toggleSideHazardLights@toggle 004A  
                                         __end_of_SGL_HeadLightActiveState 0320  
                                                      _PCS_vSetOutputPortD 05BE  
                                                      _PCS_vSetOutputPortE 0540  
                                                      __end_of_SGL_isNight 04C0  
                                                          _SGL_BlinkersRun 07F2  
                                               ??_ADC_vConversionCompleted 002E  
                                                     ?_IOC_T16GetInputPort 003F  
                                                                 isa$xinst 000000  
                                                     ?_PCS_vSetOutputPortD 0035  
                                                     ?_PCS_vSetOutputPortE 0035  
                                                                 int$flags 004F  
                                                  ??_SCHED_vStartScheduler 004D  
                                            SGL_BlinkSwitchOnState@counter 001F  
                                              __end_of_ADC_u16ReadAdcValue 0A64  
                                                               _INTCONbits 000FF2  
                                                                 intlevel2 0CCE  
                                          __end_of_SGL_setSideHazardLights 0948  
                                                IOC_vSetOutputPort@u8Value 0047  
                                                    ??_IOC_T16GetInputPort 0041  
                                                 __end_of_SGL_BlinkersInit 0B9A  
                                                   ??_SGL_BlinkPasiveState 004C  
                                                    ??_PCS_vSetOutputPortD 0036  
                                                    ??_PCS_vSetOutputPortE 0036  
                                                         _au16AdcReadValue 001B  
                                              SGL_setAllHazardLights@value 004A  
                                                 ?_SCHED_vTickFunctionCall 002E  
                                                              _SGL_isNight 0438  
                                                  __end_of_SGL_BlinkersRun 0848  
                                                 _PCS_T16GetInputPortC$716 003B  
                                                      _LIGHTS_HeadLampInit 0B9A  
                                                 _SGL_HeadLightActiveState 0290  
                                                     _PCS_T16GetInputPortC 0794  
                                                     _LIGHTS_DemoEventPoll 000000  
